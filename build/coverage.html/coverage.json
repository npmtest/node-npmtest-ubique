{"/home/travis/build/npmtest/node-npmtest-ubique/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_ubique */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-ubique/lib.npmtest_ubique.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/lib.npmtest_ubique.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_ubique */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_ubique = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_ubique = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-ubique/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-ubique && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_ubique */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_ubique","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_ubique.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_ubique.rollup.js'] =","            local.assetsDict['/assets.npmtest_ubique.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_ubique.__dirname + '/lib.npmtest_ubique.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}}},"branchMap":{},"code":["module.exports = require('./lib/ubique.js');"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/ubique.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/ubique.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":35,"column":0},"end":{"line":35,"column":16}},"2":{"start":{"line":36,"column":0},"end":{"line":36,"column":34}},"3":{"start":{"line":37,"column":0},"end":{"line":37,"column":31}},"4":{"start":{"line":38,"column":0},"end":{"line":38,"column":42}},"5":{"start":{"line":39,"column":0},"end":{"line":39,"column":39}},"6":{"start":{"line":40,"column":0},"end":{"line":40,"column":41}},"7":{"start":{"line":41,"column":0},"end":{"line":41,"column":41}},"8":{"start":{"line":42,"column":0},"end":{"line":42,"column":41}},"9":{"start":{"line":43,"column":0},"end":{"line":43,"column":41}},"10":{"start":{"line":44,"column":0},"end":{"line":44,"column":41}},"11":{"start":{"line":45,"column":0},"end":{"line":45,"column":44}},"12":{"start":{"line":46,"column":0},"end":{"line":46,"column":43}},"13":{"start":{"line":47,"column":0},"end":{"line":47,"column":43}},"14":{"start":{"line":48,"column":0},"end":{"line":48,"column":42}},"15":{"start":{"line":49,"column":0},"end":{"line":49,"column":39}},"16":{"start":{"line":50,"column":0},"end":{"line":50,"column":40}},"17":{"start":{"line":51,"column":0},"end":{"line":51,"column":42}},"18":{"start":{"line":52,"column":0},"end":{"line":52,"column":42}},"19":{"start":{"line":53,"column":0},"end":{"line":53,"column":44}},"20":{"start":{"line":54,"column":0},"end":{"line":54,"column":42}},"21":{"start":{"line":55,"column":0},"end":{"line":55,"column":45}},"22":{"start":{"line":56,"column":0},"end":{"line":56,"column":42}},"23":{"start":{"line":57,"column":0},"end":{"line":57,"column":39}},"24":{"start":{"line":58,"column":0},"end":{"line":58,"column":37}},"25":{"start":{"line":59,"column":0},"end":{"line":59,"column":42}},"26":{"start":{"line":60,"column":0},"end":{"line":60,"column":41}},"27":{"start":{"line":61,"column":0},"end":{"line":61,"column":39}},"28":{"start":{"line":62,"column":0},"end":{"line":62,"column":43}},"29":{"start":{"line":63,"column":0},"end":{"line":63,"column":41}},"30":{"start":{"line":64,"column":0},"end":{"line":64,"column":36}},"31":{"start":{"line":65,"column":0},"end":{"line":65,"column":38}},"32":{"start":{"line":66,"column":0},"end":{"line":66,"column":38}},"33":{"start":{"line":67,"column":0},"end":{"line":67,"column":38}},"34":{"start":{"line":68,"column":0},"end":{"line":68,"column":39}},"35":{"start":{"line":69,"column":0},"end":{"line":69,"column":38}},"36":{"start":{"line":70,"column":0},"end":{"line":70,"column":36}},"37":{"start":{"line":71,"column":0},"end":{"line":71,"column":35}},"38":{"start":{"line":72,"column":0},"end":{"line":72,"column":34}},"39":{"start":{"line":73,"column":0},"end":{"line":73,"column":37}},"40":{"start":{"line":74,"column":0},"end":{"line":74,"column":34}},"41":{"start":{"line":75,"column":0},"end":{"line":75,"column":34}},"42":{"start":{"line":76,"column":0},"end":{"line":76,"column":39}},"43":{"start":{"line":77,"column":0},"end":{"line":77,"column":34}},"44":{"start":{"line":78,"column":0},"end":{"line":78,"column":34}},"45":{"start":{"line":79,"column":0},"end":{"line":79,"column":37}},"46":{"start":{"line":80,"column":0},"end":{"line":80,"column":40}},"47":{"start":{"line":81,"column":0},"end":{"line":81,"column":35}},"48":{"start":{"line":82,"column":0},"end":{"line":82,"column":38}},"49":{"start":{"line":83,"column":0},"end":{"line":83,"column":40}},"50":{"start":{"line":84,"column":0},"end":{"line":84,"column":38}},"51":{"start":{"line":85,"column":0},"end":{"line":85,"column":34}},"52":{"start":{"line":86,"column":0},"end":{"line":86,"column":36}},"53":{"start":{"line":87,"column":0},"end":{"line":87,"column":37}},"54":{"start":{"line":88,"column":0},"end":{"line":88,"column":36}},"55":{"start":{"line":89,"column":0},"end":{"line":89,"column":39}},"56":{"start":{"line":90,"column":0},"end":{"line":90,"column":35}},"57":{"start":{"line":91,"column":0},"end":{"line":91,"column":37}},"58":{"start":{"line":92,"column":0},"end":{"line":92,"column":35}},"59":{"start":{"line":93,"column":0},"end":{"line":93,"column":37}},"60":{"start":{"line":94,"column":0},"end":{"line":94,"column":38}},"61":{"start":{"line":95,"column":0},"end":{"line":95,"column":38}},"62":{"start":{"line":96,"column":0},"end":{"line":96,"column":35}},"63":{"start":{"line":97,"column":0},"end":{"line":97,"column":35}},"64":{"start":{"line":98,"column":0},"end":{"line":98,"column":36}},"65":{"start":{"line":99,"column":0},"end":{"line":99,"column":39}},"66":{"start":{"line":100,"column":0},"end":{"line":100,"column":38}},"67":{"start":{"line":101,"column":0},"end":{"line":101,"column":35}},"68":{"start":{"line":102,"column":0},"end":{"line":102,"column":35}},"69":{"start":{"line":103,"column":0},"end":{"line":103,"column":36}},"70":{"start":{"line":104,"column":0},"end":{"line":104,"column":36}},"71":{"start":{"line":105,"column":0},"end":{"line":105,"column":39}},"72":{"start":{"line":106,"column":0},"end":{"line":106,"column":39}},"73":{"start":{"line":107,"column":0},"end":{"line":107,"column":44}},"74":{"start":{"line":108,"column":0},"end":{"line":108,"column":38}},"75":{"start":{"line":109,"column":0},"end":{"line":109,"column":38}},"76":{"start":{"line":110,"column":0},"end":{"line":110,"column":36}},"77":{"start":{"line":111,"column":0},"end":{"line":111,"column":38}},"78":{"start":{"line":112,"column":0},"end":{"line":112,"column":38}},"79":{"start":{"line":113,"column":0},"end":{"line":113,"column":37}},"80":{"start":{"line":114,"column":0},"end":{"line":114,"column":36}},"81":{"start":{"line":115,"column":0},"end":{"line":115,"column":36}},"82":{"start":{"line":116,"column":0},"end":{"line":116,"column":39}},"83":{"start":{"line":117,"column":0},"end":{"line":117,"column":37}},"84":{"start":{"line":118,"column":0},"end":{"line":118,"column":36}},"85":{"start":{"line":119,"column":0},"end":{"line":119,"column":40}},"86":{"start":{"line":120,"column":0},"end":{"line":120,"column":40}},"87":{"start":{"line":121,"column":0},"end":{"line":121,"column":39}},"88":{"start":{"line":122,"column":0},"end":{"line":122,"column":39}},"89":{"start":{"line":123,"column":0},"end":{"line":123,"column":39}},"90":{"start":{"line":124,"column":0},"end":{"line":124,"column":39}},"91":{"start":{"line":125,"column":0},"end":{"line":125,"column":40}},"92":{"start":{"line":126,"column":0},"end":{"line":126,"column":40}},"93":{"start":{"line":127,"column":0},"end":{"line":127,"column":41}},"94":{"start":{"line":128,"column":0},"end":{"line":128,"column":38}},"95":{"start":{"line":129,"column":0},"end":{"line":129,"column":41}},"96":{"start":{"line":130,"column":0},"end":{"line":130,"column":39}},"97":{"start":{"line":131,"column":0},"end":{"line":131,"column":41}},"98":{"start":{"line":132,"column":0},"end":{"line":132,"column":41}},"99":{"start":{"line":133,"column":0},"end":{"line":133,"column":39}},"100":{"start":{"line":134,"column":0},"end":{"line":134,"column":42}},"101":{"start":{"line":135,"column":0},"end":{"line":135,"column":38}},"102":{"start":{"line":136,"column":0},"end":{"line":136,"column":38}},"103":{"start":{"line":137,"column":0},"end":{"line":137,"column":38}},"104":{"start":{"line":138,"column":0},"end":{"line":138,"column":38}},"105":{"start":{"line":139,"column":0},"end":{"line":139,"column":37}},"106":{"start":{"line":140,"column":0},"end":{"line":140,"column":37}},"107":{"start":{"line":141,"column":0},"end":{"line":141,"column":39}},"108":{"start":{"line":142,"column":0},"end":{"line":142,"column":40}},"109":{"start":{"line":143,"column":0},"end":{"line":143,"column":39}},"110":{"start":{"line":144,"column":0},"end":{"line":144,"column":39}},"111":{"start":{"line":145,"column":0},"end":{"line":145,"column":37}},"112":{"start":{"line":146,"column":0},"end":{"line":146,"column":37}},"113":{"start":{"line":147,"column":0},"end":{"line":147,"column":40}},"114":{"start":{"line":148,"column":0},"end":{"line":148,"column":40}},"115":{"start":{"line":149,"column":0},"end":{"line":149,"column":39}},"116":{"start":{"line":150,"column":0},"end":{"line":150,"column":42}},"117":{"start":{"line":151,"column":0},"end":{"line":151,"column":38}},"118":{"start":{"line":152,"column":0},"end":{"line":152,"column":42}},"119":{"start":{"line":153,"column":0},"end":{"line":153,"column":38}},"120":{"start":{"line":154,"column":0},"end":{"line":154,"column":40}},"121":{"start":{"line":155,"column":0},"end":{"line":155,"column":38}},"122":{"start":{"line":156,"column":0},"end":{"line":156,"column":41}},"123":{"start":{"line":157,"column":0},"end":{"line":157,"column":42}},"124":{"start":{"line":158,"column":0},"end":{"line":158,"column":42}},"125":{"start":{"line":159,"column":0},"end":{"line":159,"column":42}},"126":{"start":{"line":160,"column":0},"end":{"line":160,"column":44}},"127":{"start":{"line":161,"column":0},"end":{"line":161,"column":41}},"128":{"start":{"line":162,"column":0},"end":{"line":162,"column":44}},"129":{"start":{"line":163,"column":0},"end":{"line":163,"column":41}},"130":{"start":{"line":164,"column":0},"end":{"line":164,"column":39}},"131":{"start":{"line":165,"column":0},"end":{"line":165,"column":43}},"132":{"start":{"line":166,"column":0},"end":{"line":166,"column":42}},"133":{"start":{"line":167,"column":0},"end":{"line":167,"column":36}},"134":{"start":{"line":168,"column":0},"end":{"line":168,"column":43}},"135":{"start":{"line":169,"column":0},"end":{"line":169,"column":41}},"136":{"start":{"line":170,"column":0},"end":{"line":170,"column":43}},"137":{"start":{"line":171,"column":0},"end":{"line":171,"column":44}},"138":{"start":{"line":172,"column":0},"end":{"line":172,"column":40}},"139":{"start":{"line":173,"column":0},"end":{"line":173,"column":43}},"140":{"start":{"line":174,"column":0},"end":{"line":174,"column":39}},"141":{"start":{"line":175,"column":0},"end":{"line":175,"column":37}},"142":{"start":{"line":176,"column":0},"end":{"line":176,"column":41}},"143":{"start":{"line":177,"column":0},"end":{"line":177,"column":35}},"144":{"start":{"line":178,"column":0},"end":{"line":178,"column":43}},"145":{"start":{"line":179,"column":0},"end":{"line":179,"column":41}},"146":{"start":{"line":180,"column":0},"end":{"line":180,"column":43}},"147":{"start":{"line":181,"column":0},"end":{"line":181,"column":38}},"148":{"start":{"line":182,"column":0},"end":{"line":182,"column":42}},"149":{"start":{"line":183,"column":0},"end":{"line":183,"column":45}},"150":{"start":{"line":184,"column":0},"end":{"line":184,"column":42}},"151":{"start":{"line":185,"column":0},"end":{"line":185,"column":41}},"152":{"start":{"line":186,"column":0},"end":{"line":186,"column":41}},"153":{"start":{"line":187,"column":0},"end":{"line":187,"column":44}},"154":{"start":{"line":188,"column":0},"end":{"line":188,"column":40}},"155":{"start":{"line":189,"column":0},"end":{"line":189,"column":39}},"156":{"start":{"line":190,"column":0},"end":{"line":190,"column":40}},"157":{"start":{"line":191,"column":0},"end":{"line":191,"column":35}},"158":{"start":{"line":192,"column":0},"end":{"line":192,"column":38}},"159":{"start":{"line":193,"column":0},"end":{"line":193,"column":39}},"160":{"start":{"line":194,"column":0},"end":{"line":194,"column":45}},"161":{"start":{"line":195,"column":0},"end":{"line":195,"column":40}},"162":{"start":{"line":196,"column":0},"end":{"line":196,"column":41}},"163":{"start":{"line":197,"column":0},"end":{"line":197,"column":40}},"164":{"start":{"line":198,"column":0},"end":{"line":198,"column":40}},"165":{"start":{"line":199,"column":0},"end":{"line":199,"column":39}},"166":{"start":{"line":200,"column":0},"end":{"line":200,"column":35}},"167":{"start":{"line":201,"column":0},"end":{"line":201,"column":42}},"168":{"start":{"line":202,"column":0},"end":{"line":202,"column":41}},"169":{"start":{"line":203,"column":0},"end":{"line":203,"column":39}},"170":{"start":{"line":204,"column":0},"end":{"line":204,"column":41}},"171":{"start":{"line":205,"column":0},"end":{"line":205,"column":39}},"172":{"start":{"line":206,"column":0},"end":{"line":206,"column":34}},"173":{"start":{"line":207,"column":0},"end":{"line":207,"column":36}},"174":{"start":{"line":208,"column":0},"end":{"line":208,"column":34}},"175":{"start":{"line":209,"column":0},"end":{"line":209,"column":39}},"176":{"start":{"line":210,"column":0},"end":{"line":210,"column":34}},"177":{"start":{"line":211,"column":0},"end":{"line":211,"column":34}},"178":{"start":{"line":212,"column":0},"end":{"line":212,"column":35}},"179":{"start":{"line":213,"column":0},"end":{"line":213,"column":37}},"180":{"start":{"line":214,"column":0},"end":{"line":214,"column":34}},"181":{"start":{"line":215,"column":0},"end":{"line":215,"column":35}},"182":{"start":{"line":216,"column":0},"end":{"line":216,"column":37}},"183":{"start":{"line":217,"column":0},"end":{"line":217,"column":36}},"184":{"start":{"line":218,"column":0},"end":{"line":218,"column":38}},"185":{"start":{"line":219,"column":0},"end":{"line":219,"column":39}},"186":{"start":{"line":220,"column":0},"end":{"line":220,"column":39}},"187":{"start":{"line":221,"column":0},"end":{"line":221,"column":36}},"188":{"start":{"line":222,"column":0},"end":{"line":222,"column":39}},"189":{"start":{"line":223,"column":0},"end":{"line":223,"column":34}},"190":{"start":{"line":224,"column":0},"end":{"line":224,"column":35}},"191":{"start":{"line":225,"column":0},"end":{"line":225,"column":40}},"192":{"start":{"line":226,"column":0},"end":{"line":226,"column":37}},"193":{"start":{"line":227,"column":0},"end":{"line":227,"column":39}},"194":{"start":{"line":228,"column":0},"end":{"line":228,"column":36}},"195":{"start":{"line":229,"column":0},"end":{"line":229,"column":39}},"196":{"start":{"line":230,"column":0},"end":{"line":230,"column":43}},"197":{"start":{"line":231,"column":0},"end":{"line":231,"column":24}}},"branchMap":{},"code":["/**"," * name: ubique"," * version: 0.5.1"," * update date: 2015-09-23"," * "," * author: Max Todaro <m.todaro.ge@gmail.com>"," * homepage: http://maxto.github.io/index.html"," * "," * description: A mathematical and quantitative library for Javascript and Node.js"," * "," *"," * The MIT License (MIT)"," * "," * Copyright© 2014-2015 Max Todaro"," * "," * Permission is hereby granted, free of charge, to any person obtaining a copy"," * of this software and associated documentation files (the \"Software\"), to deal"," * in the Software without restriction, including without limitation the rights"," * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"," * copies of the Software, and to permit persons to whom the Software is"," * furnished to do so, subject to the following conditions:"," * "," * The above copyright notice and this permission notice shall be included in all"," * copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"," * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"," * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"," * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"," * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE"," * SOFTWARE."," */","","var ubique = {};","require('./constants.js')(ubique);","require('./extlib.js')(ubique);","require('./datatype/arrayfun.js')(ubique);","require('./datatype/clock.js')(ubique);","require('./datatype/datavec.js')(ubique);","require('./datatype/datenum.js')(ubique);","require('./datatype/datestr.js')(ubique);","require('./datatype/isarray.js')(ubique);","require('./datatype/isempty.js')(ubique);","require('./datatype/isfunction.js')(ubique);","require('./datatype/isinteger.js')(ubique);","require('./datatype/islogical.js')(ubique);","require('./datatype/ismatrix.js')(ubique);","require('./datatype/isnan.js')(ubique);","require('./datatype/isnull.js')(ubique);","require('./datatype/isnumber.js')(ubique);","require('./datatype/isscalar.js')(ubique);","require('./datatype/issingular.js')(ubique);","require('./datatype/isstring.js')(ubique);","require('./datatype/isundefined.js')(ubique);","require('./datatype/isvector.js')(ubique);","require('./datatype/month.js')(ubique);","require('./datatype/now.js')(ubique);","require('./datatype/randchar.js')(ubique);","require('./datatype/strfind.js')(ubique);","require('./datatype/today.js')(ubique);","require('./datatype/vectorfun.js')(ubique);","require('./datatype/weekday.js')(ubique);","require('./elemop/ceil.js')(ubique);","require('./elemop/cumdev.js')(ubique);","require('./elemop/cummax.js')(ubique);","require('./elemop/cummin.js')(ubique);","require('./elemop/cumprod.js')(ubique);","require('./elemop/cumsum.js')(ubique);","require('./elemop/diff.js')(ubique);","require('./elemop/dot.js')(ubique);","require('./elemop/eq.js')(ubique);","require('./elemop/floor.js')(ubique);","require('./elemop/ge.js')(ubique);","require('./elemop/gt.js')(ubique);","require('./elemop/ldivide.js')(ubique);","require('./elemop/le.js')(ubique);","require('./elemop/lt.js')(ubique);","require('./elemop/minus.js')(ubique);","require('./elemop/mldivide.js')(ubique);","require('./elemop/mod.js')(ubique);","require('./elemop/mpower.js')(ubique);","require('./elemop/mrdivide.js')(ubique);","require('./elemop/mtimes.js')(ubique);","require('./elemop/ne.js')(ubique);","require('./elemop/plus.js')(ubique);","require('./elemop/power.js')(ubique);","require('./elemop/prod.js')(ubique);","require('./elemop/rdivide.js')(ubique);","require('./elemop/rem.js')(ubique);","require('./elemop/round.js')(ubique);","require('./elemop/sum.js')(ubique);","require('./elemop/times.js')(ubique);","require('./elemop/uminus.js')(ubique);","require('./elemop/unique.js')(ubique);","require('./elmath/abs.js')(ubique);","require('./elmath/erf.js')(ubique);","require('./elmath/erfc.js')(ubique);","require('./elmath/erfcinv.js')(ubique);","require('./elmath/erfinv.js')(ubique);","require('./elmath/exp.js')(ubique);","require('./elmath/log.js')(ubique);","require('./elmath/sign.js')(ubique);","require('./elmath/sqrt.js')(ubique);","require('./linalgebra/det.js')(ubique);","require('./linalgebra/inv.js')(ubique);","require('./linalgebra/linsolve.js')(ubique);","require('./linalgebra/lu.js')(ubique);","require('./matarrs/array.js')(ubique);","require('./matarrs/cat.js')(ubique);","require('./matarrs/clone.js')(ubique);","require('./matarrs/colon.js')(ubique);","require('./matarrs/diag.js')(ubique);","require('./matarrs/end.js')(ubique);","require('./matarrs/eye.js')(ubique);","require('./matarrs/falses.js')(ubique);","require('./matarrs/find.js')(ubique);","require('./matarrs/fix.js')(ubique);","require('./matarrs/flatten.js')(ubique);","require('./matarrs/flipdim.js')(ubique);","require('./matarrs/fliplr.js')(ubique);","require('./matarrs/flipud.js')(ubique);","require('./matarrs/getcol.js')(ubique);","require('./matarrs/getrow.js')(ubique);","require('./matarrs/horzcat.js')(ubique);","require('./matarrs/ind2sub.js')(ubique);","require('./matarrs/iscolumn.js')(ubique);","require('./matarrs/isrow.js')(ubique);","require('./matarrs/issquare.js')(ubique);","require('./matarrs/length.js')(ubique);","require('./matarrs/linspace.js')(ubique);","require('./matarrs/logspace.js')(ubique);","require('./matarrs/matrix.js')(ubique);","require('./matarrs/mergesort.js')(ubique);","require('./matarrs/ncols.js')(ubique);","require('./matarrs/ndims.js')(ubique);","require('./matarrs/nrows.js')(ubique);","require('./matarrs/numel.js')(ubique);","require('./matarrs/ones.js')(ubique);","require('./matarrs/rand.js')(ubique);","require('./matarrs/repmat.js')(ubique);","require('./matarrs/reshape.js')(ubique);","require('./matarrs/setcol.js')(ubique);","require('./matarrs/setrow.js')(ubique);","require('./matarrs/size.js')(ubique);","require('./matarrs/sort.js')(ubique);","require('./matarrs/squeeze.js')(ubique);","require('./matarrs/sub2ind.js')(ubique);","require('./matarrs/subset.js')(ubique);","require('./matarrs/subsetlin.js')(ubique);","require('./matarrs/tomat.js')(ubique);","require('./matarrs/transpose.js')(ubique);","require('./matarrs/trues.js')(ubique);","require('./matarrs/vertcat.js')(ubique);","require('./matarrs/zeros.js')(ubique);","require('./probdistr/jbtest.js')(ubique);","require('./probdistr/normcdf.js')(ubique);","require('./probdistr/norminv.js')(ubique);","require('./probdistr/normpdf.js')(ubique);","require('./quants/activereturn.js')(ubique);","require('./quants/adjsharpe.js')(ubique);","require('./quants/annadjsharpe.js')(ubique);","require('./quants/annreturn.js')(ubique);","require('./quants/annrisk.js')(ubique);","require('./quants/avgdrawdown.js')(ubique);","require('./quants/burkeratio.js')(ubique);","require('./quants/cagr.js')(ubique);","require('./quants/calmarratio.js')(ubique);","require('./quants/cdrawdown.js')(ubique);","require('./quants/downsidepot.js')(ubique);","require('./quants/downsiderisk.js')(ubique);","require('./quants/drawdown.js')(ubique);","require('./quants/histcondvar.js')(ubique);","require('./quants/histvar.js')(ubique);","require('./quants/hurst.js')(ubique);","require('./quants/inforatio.js')(ubique);","require('./quants/irr.js')(ubique);","require('./quants/jensenalpha.js')(ubique);","require('./quants/m2sortino.js')(ubique);","require('./quants/martinratio.js')(ubique);","require('./quants/mdietz.js')(ubique);","require('./quants/modigliani.js')(ubique);","require('./quants/montecarlovar.js')(ubique);","require('./quants/omegaratio.js')(ubique);","require('./quants/painindex.js')(ubique);","require('./quants/painratio.js')(ubique);","require('./quants/paramcondvar.js')(ubique);","require('./quants/paramvar.js')(ubique);","require('./quants/percpos.js')(ubique);","require('./quants/ret2tick.js')(ubique);","require('./quants/ror.js')(ubique);","require('./quants/sharpe.js')(ubique);","require('./quants/sortino.js')(ubique);","require('./quants/sterlingratio.js')(ubique);","require('./quants/tick2ret.js')(ubique);","require('./quants/tomonthly.js')(ubique);","require('./quants/toweekly.js')(ubique);","require('./quants/trackerr.js')(ubique);","require('./quants/treynor.js')(ubique);","require('./quants/twr.js')(ubique);","require('./quants/ulcerindex.js')(ubique);","require('./quants/upsidepot.js')(ubique);","require('./reglin/interp1.js')(ubique);","require('./reglin/linearreg.js')(ubique);","require('./stats/corrcoef.js')(ubique);","require('./stats/cov.js')(ubique);","require('./stats/histc.js')(ubique);","require('./stats/iqr.js')(ubique);","require('./stats/kurtosis.js')(ubique);","require('./stats/mad.js')(ubique);","require('./stats/max.js')(ubique);","require('./stats/mean.js')(ubique);","require('./stats/median.js')(ubique);","require('./stats/min.js')(ubique);","require('./stats/mode.js')(ubique);","require('./stats/moment.js')(ubique);","require('./stats/pdist.js')(ubique);","require('./stats/prctile.js')(ubique);","require('./stats/quantile.js')(ubique);","require('./stats/quartile.js')(ubique);","require('./stats/range.js')(ubique);","require('./stats/skewness.js')(ubique);","require('./stats/std.js')(ubique);","require('./stats/varc.js')(ubique);","require('./stats/xkurtosis.js')(ubique);","require('./stats/zscore.js')(ubique);","require('./util/argsarray.js')(ubique);","require('./util/format.js')(ubique);","require('./datafeed/yahoo.js')(ubique);","require('./datafeed/yahooSync.js')(ubique);","module.exports = ubique;"],"l":{"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/constants.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/constants.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":22,"column":1}},"2":{"start":{"line":9,"column":1},"end":{"line":9,"column":35}},"3":{"start":{"line":10,"column":1},"end":{"line":10,"column":30}},"4":{"start":{"line":11,"column":1},"end":{"line":11,"column":30}},"5":{"start":{"line":12,"column":1},"end":{"line":12,"column":17}},"6":{"start":{"line":13,"column":1},"end":{"line":13,"column":15}},"7":{"start":{"line":14,"column":1},"end":{"line":14,"column":19}},"8":{"start":{"line":15,"column":1},"end":{"line":15,"column":21}},"9":{"start":{"line":16,"column":1},"end":{"line":16,"column":23}},"10":{"start":{"line":17,"column":1},"end":{"line":17,"column":25}},"11":{"start":{"line":18,"column":1},"end":{"line":18,"column":27}},"12":{"start":{"line":19,"column":1},"end":{"line":19,"column":23}},"13":{"start":{"line":20,"column":1},"end":{"line":20,"column":48}},"14":{"start":{"line":21,"column":1},"end":{"line":21,"column":40}}},"branchMap":{},"code":["/**"," * Constants properties"," */","module.exports = function($u) {","/**"," * Constants values"," * @type {number}"," */"," $u.Inf = Number.POSITIVE_INFINITY;"," $u.maxval = Number.MAX_VALUE;"," $u.minval = Number.MIN_VALUE;"," $u.PI = Math.PI;"," $u.E = Math.E;"," $u.LN2 = Math.LN2;"," $u.LN10 = Math.LN10;"," $u.LOG2E = Math.LOG2E;"," $u.LOG10E = Math.LOG10E;"," $u.SQRT1_2 = Math.SQRT1_2;"," $u.SQRT2 = Math.SQRT2;"," $u.eps = 2.2204460492503130808472633361816E-16;"," $u.phi = 1.618033988749894848204586834;","}",""],"l":{"4":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/extlib.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/extlib.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":11,"column":1}},"2":{"start":{"line":6,"column":1},"end":{"line":6,"column":33}},"3":{"start":{"line":8,"column":1},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":1},"end":{"line":10,"column":44}}},"branchMap":{},"code":["/**"," * External Library"," */","module.exports = function($u) {"," // moment.js - Parse, validate, manipulate, and display dates in JavaScript (http://momentjs.com/)"," $u.__moment = require('moment');"," // request.js - Simplified HTTP request client (https://github.com/request/request)"," $u.__request = require('request');"," // sync-request.js  - Make synchronous web requests with cross platform support (https://github.com/ForbesLindesay/sync-request)"," $u.__syncrequest = require('sync-request');","}",""],"l":{"4":1,"6":1,"8":1,"10":1}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/arrayfun.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/arrayfun.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":15},"end":{"line":42,"column":26}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":17},"end":{"line":53,"column":29}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":17},"end":{"line":58,"column":29}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":19},"end":{"line":59,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":67,"column":1}},"2":{"start":{"line":42,"column":1},"end":{"line":65,"column":1}},"3":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"4":{"start":{"line":44,"column":4},"end":{"line":44,"column":50}},"5":{"start":{"line":46,"column":2},"end":{"line":46,"column":48}},"6":{"start":{"line":47,"column":2},"end":{"line":47,"column":18}},"7":{"start":{"line":48,"column":2},"end":{"line":48,"column":20}},"8":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"9":{"start":{"line":50,"column":4},"end":{"line":50,"column":64}},"10":{"start":{"line":52,"column":2},"end":{"line":56,"column":3}},"11":{"start":{"line":53,"column":4},"end":{"line":55,"column":7}},"12":{"start":{"line":54,"column":6},"end":{"line":54,"column":68}},"13":{"start":{"line":57,"column":2},"end":{"line":63,"column":3}},"14":{"start":{"line":58,"column":4},"end":{"line":62,"column":7}},"15":{"start":{"line":59,"column":6},"end":{"line":61,"column":9}},"16":{"start":{"line":60,"column":8},"end":{"line":60,"column":70}},"17":{"start":{"line":64,"column":2},"end":{"line":64,"column":64}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]}},"code":["/**"," * Structures"," */"," module.exports = function($u) {","/**"," * @method arrayfun"," * @summary Apply function to each element of an array or matrix"," * @description Apply function to each element of an array or matrix. First arg is input element, the second one the function to apply, "," * then the parameters of the function."," * "," * @param  {number|string|boolean|...} args variable input arguments"," * @return {number|string|boolean|...}     "," *"," * @example"," * ubique.arrayfun([1.4,2.3,3],Math.log);"," * // [ 0.336472, 0.832909, 1.098612 ]"," * "," * ubique.arrayfun([1.4,0,-10],ubique.sign);"," * // [ 1, 0, -1 ]"," * "," * ubique.arrayfun([[5,6],[1,3]],Math.pow,3);"," * // [ [ 125, 216 ], [ 1, 27 ] ]"," *"," * ubique.arrayfun([['cat','concat'],['cattle','catch the catfish']],ubique.strfind,'cat');"," * // [ [ [ 0 ], [ 3 ] ], [ [ 0 ], [ 0, 10 ] ] ]"," *"," * ubique.arrayfun([null,true,'hello',5,NaN],ubique.isnull);"," * // [ true, false, false, false, false ]"," *"," * ubique.arrayfun([null,true,'hello',5,NaN],ubique.islogical);"," * // [ false, true, false, false, false ]"," *"," * ubique.arrayfun([null,true,'hello',5,NaN],ubique.isstring);"," * // [ false, false, true, false, false ]"," *"," * ubique.arrayfun([null,true,'hello',5,NaN],ubique.isnumber);"," * // [ false, false, false, true, true ]"," *"," * ubique.arrayfun([null,true,'hello',5,{},undefined,'NaN',NaN],ubique.isnan);"," * // [ false, false, false, false, false, false, false, true ]"," */"," $u.arrayfun = function() {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  var args = $u.argsarray.apply(null,arguments);","  var x = args[0];","  var fun = args[1];","  if (!$u.isfunction(fun)) {","    throw new Error('second input argument must be a function');","  }","  if ($u.isarray(x)) {","    return x.map(function(a) {","      return fun.apply(null,[].concat(a,args.slice(2,args.length)));","    });","  }","  if ($u.ismatrix(x)) {","    return x.map(function(a) {","      return a.map(function(b) {","        return fun.apply(null,[].concat(b,args.slice(2,args.length)));","      });","    });","  }","  return fun.apply(null,[].concat(x,args.slice(2,args.length)));","}","","}"],"l":{"4":1,"42":1,"43":0,"44":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"57":0,"58":0,"59":0,"60":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/clock.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/clock.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":12},"end":{"line":18,"column":23}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":23,"column":1}},"2":{"start":{"line":18,"column":1},"end":{"line":22,"column":1}},"3":{"start":{"line":19,"column":2},"end":{"line":19,"column":36}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":22}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":13}}},"branchMap":{},"code":["/**"," * Dates and Time"," */"," module.exports = function($u) {","/**"," * @method clock"," * @summary Current date and time as date vector"," * @description Current date and time as date vector. Returns an array:"," * [year month day hour minute seconds]"," * "," * @param {empty} empty no arguments"," * @return {array}"," * "," * @example"," * ubique.clock();"," * // [ 2015, 5, 28, 11, 51, 0, 801 ]"," */"," $u.clock = function() {","  var now = $u.__moment().toArray();","  now[1] = now[1] + 1;","  return now;","}","}"],"l":{"4":1,"18":1,"19":0,"20":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/datavec.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/datavec.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":13},"end":{"line":61,"column":29}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":17},"end":{"line":73,"column":33}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":87,"column":1}},"2":{"start":{"line":61,"column":1},"end":{"line":86,"column":1}},"3":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"4":{"start":{"line":63,"column":4},"end":{"line":63,"column":50}},"5":{"start":{"line":65,"column":2},"end":{"line":69,"column":3}},"6":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"7":{"start":{"line":67,"column":6},"end":{"line":67,"column":55}},"8":{"start":{"line":73,"column":2},"end":{"line":84,"column":3}},"9":{"start":{"line":74,"column":4},"end":{"line":81,"column":5}},"10":{"start":{"line":75,"column":6},"end":{"line":75,"column":44}},"11":{"start":{"line":77,"column":4},"end":{"line":81,"column":5}},"12":{"start":{"line":78,"column":6},"end":{"line":78,"column":48}},"13":{"start":{"line":80,"column":6},"end":{"line":80,"column":66}},"14":{"start":{"line":82,"column":4},"end":{"line":82,"column":22}},"15":{"start":{"line":83,"column":4},"end":{"line":83,"column":14}},"16":{"start":{"line":85,"column":2},"end":{"line":85,"column":37}}},"branchMap":{"1":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"3":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"4":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"5":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]}},"code":["/**"," * Dates and Time"," */"," module.exports = function($u) {","/**"," * @method datevec"," * @summary Convert date and time to vector of components"," * @description Convert date and time to vector of components. Based on [moment.js](http://momentjs.com)"," * "," * |Identifier| Example          | Description |"," * | ----------- | ---------------- | ----------- |"," * | `YYYY`      | `2014`           | 4 digit year |"," * | `YY`        | `14`             | 2 digit year |"," * | `Q`         | `1..4`           | Quarter of year. Sets month to first month in quarter. |"," * | `M MM`      | `1..12`          | Month number |"," * | `MMM MMMM`  | `January..Dec`   | Month name in locale set by `moment.locale()` |"," * | `D DD`      | `1..31`          | Day of month |"," * | `Do`        | `1st..31st`      | Day of month with ordinal |"," * | `DDD DDDD`  | `1..365`         | Day of year |"," * | `X`         | `1410715640.579` | Unix timestamp |"," * | `x`         | `1410715640579`  | Unix ms timestamp |"," * |"," * | `gggg`   | `2014`  | Locale 4 digit week year |"," * | `gg`     | `14`    | Locale 2 digit week year |"," * | `w ww`   | `1..53` | Locale week of year |"," * | `e`      | `1..7`  | Locale day of week |"," * | `GGGG`   | `2014`  | ISO 4 digit week year |"," * | `GG`     | `14`    | ISO 2 digit week year |"," * | `W WW`   | `1..53` | ISO week of year |"," * | `E`      | `1..7`  | ISO day of week |"," * |"," * | `H HH`         | `0..23`  | 24 hour time |"," * | `h hh`         | `1..12`  | 12 hour time used with `a A`. |"," * | `a A`          | `am pm`  | Post or ante meridiem |"," * | `m mm`         | `0..59`  | Minutes |"," * | `s ss`         | `0..59`  | Seconds |"," * | `S`            | `0..9`   | Tenths of a second |"," * | `SS`           | `0..99`  | Hundreds of a second |"," * | `SSS`          | `0..999` | Thousandths of a second |"," * | `Z ZZ`         | `+12:00` | Offset from UTC as `+-HH:mm`, `+-HHmm`, or `Z` |"," *"," * @param  {string|number|array|matrix} d string or number (unix) "," * @param  {string} fmt format string"," * @return {array|matrix}"," *"," * @example"," * ubique.datevec('2015-01-01 03:34:05','YYYY-MM-DD HH:mm:ss');"," * // [ 2015, 1, 1, 3, 34, 5, 0 ]"," * "," * ubique.datevec(['31-12-2014','31-01-2015'],'DD-MM-YYYY');"," * // [ [ 2014, 12, 31, 0, 0, 0, 0 ], [ 2015, 1, 31, 0, 0, 0, 0 ] ]"," * "," * ubique.datevec([['31-12-2014','31-01-2015'],['15-02-2015','01-03-2015']],'DD-MM-YYYY');"," * // [ [ [ 2014, 12, 31, 0, 0, 0, 0 ], [ 2015, 1, 31, 0, 0, 0, 0 ] ],"," * //   [ [ 2015, 2, 15, 0, 0, 0, 0 ], [ 2015, 3, 1, 0, 0, 0, 0 ] ] ]"," *"," * // from '2015-04-05 12:20:30' to Unix 1428236430"," * ubique.datevec(1428236430);"," * // [ 2015, 4, 5, 12, 20, 30, 0 ]"," */"," $u.datevec= function(d,fmt) {","  if (arguments.length < 1) {","    throw new Error('not enough input arguments');","  }","  if ($u.isstring(d)) {","    if (!fmt) {","      throw new Error('insert format for date string');","    }","  }","  // Note: because this mirrors the native Date parameters,","  // months, hours, minutes, seconds, and milliseconds are all zero indexed.","  // Years and days of the month are 1 indexed.","  var _datevec = function(a,fmt) {","    if ($u.isstring(a)) {","      var dv = $u.__moment(a,fmt).toArray();","    } else ","    if ($u.isnumber(a)) {","      var dv = $u.__moment.utc(a,'X').toArray();","    } else {","      throw new Error('input must be a string or unix timestamp');","    }","    dv[1] = dv[1] + 1;","    return dv;","  }","  return $u.arrayfun(d,_datevec,fmt);","}","}",""],"l":{"4":1,"61":1,"62":0,"63":0,"65":0,"66":0,"67":0,"73":0,"74":0,"75":0,"77":0,"78":0,"80":0,"82":0,"83":0,"85":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/datenum.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/datenum.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":62,"loc":{"start":{"line":62,"column":14},"end":{"line":62,"column":30}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":17},"end":{"line":71,"column":33}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":28},"end":{"line":78,"column":41}}},"5":{"name":"(anonymous_5)","line":90,"loc":{"start":{"line":90,"column":18},"end":{"line":90,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":98,"column":1}},"2":{"start":{"line":62,"column":1},"end":{"line":97,"column":1}},"3":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"4":{"start":{"line":64,"column":4},"end":{"line":64,"column":50}},"5":{"start":{"line":66,"column":2},"end":{"line":70,"column":3}},"6":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"7":{"start":{"line":68,"column":6},"end":{"line":68,"column":55}},"8":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"9":{"start":{"line":72,"column":4},"end":{"line":72,"column":41}},"10":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"11":{"start":{"line":75,"column":4},"end":{"line":75,"column":27}},"12":{"start":{"line":77,"column":2},"end":{"line":86,"column":3}},"13":{"start":{"line":78,"column":4},"end":{"line":80,"column":7}},"14":{"start":{"line":79,"column":6},"end":{"line":79,"column":29}},"15":{"start":{"line":81,"column":4},"end":{"line":85,"column":5}},"16":{"start":{"line":82,"column":6},"end":{"line":82,"column":56}},"17":{"start":{"line":84,"column":6},"end":{"line":84,"column":41}},"18":{"start":{"line":88,"column":2},"end":{"line":95,"column":2}},"19":{"start":{"line":89,"column":4},"end":{"line":93,"column":4}},"20":{"start":{"line":90,"column":5},"end":{"line":92,"column":7}},"21":{"start":{"line":91,"column":6},"end":{"line":91,"column":31}},"22":{"start":{"line":94,"column":3},"end":{"line":94,"column":38}}},"branchMap":{"1":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"2":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"3":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"4":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"5":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"7":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"8":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]}},"code":["/**"," * Dates and Time"," */"," module.exports = function($u) {","/**"," * @method datenum"," * @summary Convert date and time to serial date number (Unix)"," * @description Convert date and time to serial date number (Unix). Based on [moment.js](http://momentjs.com)"," * "," * |Identifier| Example          | Description |"," * | ----------- | ---------------- | ----------- |"," * | `YYYY`      | `2014`           | 4 digit year |"," * | `YY`        | `14`             | 2 digit year |"," * | `Q`         | `1..4`           | Quarter of year. Sets month to first month in quarter. |"," * | `M MM`      | `1..12`          | Month number |"," * | `MMM MMMM`  | `January..Dec`   | Month name in locale set by `moment.locale()` |"," * | `D DD`      | `1..31`          | Day of month |"," * | `Do`        | `1st..31st`      | Day of month with ordinal |"," * | `DDD DDDD`  | `1..365`         | Day of year |"," * | `X`         | `1410715640.579` | Unix timestamp |"," * | `x`         | `1410715640579`  | Unix ms timestamp |"," * |"," * | `gggg`   | `2014`  | Locale 4 digit week year |"," * | `gg`     | `14`    | Locale 2 digit week year |"," * | `w ww`   | `1..53` | Locale week of year |"," * | `e`      | `1..7`  | Locale day of week |"," * | `GGGG`   | `2014`  | ISO 4 digit week year |"," * | `GG`     | `14`    | ISO 2 digit week year |"," * | `W WW`   | `1..53` | ISO week of year |"," * | `E`      | `1..7`  | ISO day of week |"," * |"," * | `H HH`         | `0..23`  | 24 hour time |"," * | `h hh`         | `1..12`  | 12 hour time used with `a A`. |"," * | `a A`          | `am pm`  | Post or ante meridiem |"," * | `m mm`         | `0..59`  | Minutes |"," * | `s ss`         | `0..59`  | Seconds |"," * | `S`            | `0..9`   | Tenths of a second |"," * | `SS`           | `0..99`  | Hundreds of a second |"," * | `SSS`          | `0..999` | Thousandths of a second |"," * | `Z ZZ`         | `+12:00` | Offset from UTC as `+-HH:mm`, `+-HHmm`, or `Z` |"," *"," * @param  {string|array|matrix} d string vector of components"," * @param  {string} fmt format string"," * @return {string|array|matrix}"," *"," * @example"," * ubique.datenum('31-12-2014','DD-MM-YYYY');"," * // 1419984000"," * "," * ubique.datenum(['31-12-2014','31-01-2015'],'DD-MM-YYYY');"," * // [ 1419984000, 1422662400 ]"," * "," * ubique.datenum([['31-12-2014','31-01-2015'],['15-02-2015','01-03-2015']],'DD-MM-YYYY');"," * // [ [ 1419984000, 1422662400 ], [ 1423958400, 1425168000 ] ]"," *"," * ubique.datenum([ 2015, 4, 5, 12, 20, 30, 0 ]);"," * // 1428236430"," *"," * ubique.datenum([ [ 2013, 1, 31, 0, 0, 0, 0 ],[ 2014, 2, 28, 0, 0, 0, 0 ],[ 2015, 4, 30, 0, 0, 0, 0 ] ]);"," * // [ 1359590400, 1393545600, 1430352000 ]"," */"," $u.datenum = function(d,fmt) {","  if (arguments.length < 1) {","    throw new Error('not enough input arguments');","  }","  if ($u.isstring(d)) {","    if (!fmt) {","      throw new Error('insert format for date string');","    }","  }","  var _datenum = function(a,fmt) {","    return $u.__moment.utc(a,fmt).unix();","  }","  if ($u.isstring(d)) {","    return _datenum(d,fmt);","  }","  if ($u.isarray(d)) {","    var checknum = d.filter(function(el) {","      return $u.isnumber(el);","    });","    if (checknum.length === d.length) {","      return $u.__moment.utc(d,'YYYYMMDDhhmmss').unix();","    } else {","      return $u.arrayfun(d,_datenum,fmt);","    }","  }","","  if ($u.ismatrix(d)) {","    if ($u.isarray(d[0])) {","     return d.map(function(a) {","      return $u.datenum(a,fmt);","    });","   }","   return $u.arrayfun(d,_datenum,fmt);"," }"," ","}","}",""],"l":{"4":1,"62":1,"63":0,"64":0,"66":0,"67":0,"68":0,"71":0,"72":0,"74":0,"75":0,"77":0,"78":0,"79":0,"81":0,"82":0,"84":0,"88":0,"89":0,"90":0,"91":0,"94":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/datestr.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/datestr.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":14},"end":{"line":57,"column":30}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":17},"end":{"line":62,"column":33}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":68,"column":1}},"2":{"start":{"line":57,"column":1},"end":{"line":67,"column":1}},"3":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"4":{"start":{"line":59,"column":4},"end":{"line":59,"column":50}},"5":{"start":{"line":61,"column":2},"end":{"line":61,"column":41}},"6":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"7":{"start":{"line":63,"column":4},"end":{"line":63,"column":46}},"8":{"start":{"line":65,"column":2},"end":{"line":65,"column":37}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"2":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":22},"end":{"line":61,"column":34}},{"start":{"line":61,"column":37},"end":{"line":61,"column":40}}]}},"code":["/**"," * Dates and Time"," */"," module.exports = function($u) {","/**"," * @method datestr"," * @summary Convert serial date number (Unix) to string format"," * @description Convert serial date number (Unix) to string format. Based on [moment.js](http://momentjs.com)"," *"," * |Identifier| Example          | Description |"," * | ----------- | ---------------- | ----------- |"," * | `YYYY`      | `2014`           | 4 digit year |"," * | `YY`        | `14`             | 2 digit year |"," * | `Q`         | `1..4`           | Quarter of year. Sets month to first month in quarter. |"," * | `M MM`      | `1..12`          | Month number |"," * | `MMM MMMM`  | `January..Dec`   | Month name in locale set by `moment.locale()` |"," * | `D DD`      | `1..31`          | Day of month |"," * | `Do`        | `1st..31st`      | Day of month with ordinal |"," * | `DDD DDDD`  | `1..365`         | Day of year |"," * | `X`         | `1410715640.579` | Unix timestamp |"," * | `x`         | `1410715640579`  | Unix ms timestamp |"," * |"," * | `gggg`   | `2014`  | Locale 4 digit week year |"," * | `gg`     | `14`    | Locale 2 digit week year |"," * | `w ww`   | `1..53` | Locale week of year |"," * | `e`      | `1..7`  | Locale day of week |"," * | `GGGG`   | `2014`  | ISO 4 digit week year |"," * | `GG`     | `14`    | ISO 2 digit week year |"," * | `W WW`   | `1..53` | ISO week of year |"," * | `E`      | `1..7`  | ISO day of week |"," * |"," * | `H HH`         | `0..23`  | 24 hour time |"," * | `h hh`         | `1..12`  | 12 hour time used with `a A`. |"," * | `a A`          | `am pm`  | Post or ante meridiem |"," * | `m mm`         | `0..59`  | Minutes |"," * | `s ss`         | `0..59`  | Seconds |"," * | `S`            | `0..9`   | Tenths of a second |"," * | `SS`           | `0..99`  | Hundreds of a second |"," * | `SSS`          | `0..999` | Thousandths of a second |"," * | `Z ZZ`         | `+12:00` | Offset from UTC as `+-HH:mm`, `+-HHmm`, or `Z` |"," * "," * @param  {number|array|matrix} d ISO Unix datetime"," * @param  {string} fmt format string (def: 'YYYY-MM-DD')"," * @return {number|array|matrix}"," *"," * @example"," * ubique.datestr(1419984000);"," * // 2014-12-31"," * "," * ubique.datestr([ 1419984000, 1422662400 ],'DD-MMM-YY');"," * // [ '31-Dec-14', '31-Jan-15' ]"," * "," * ubique.datestr([ [ 1419984000, 1422662400 ], [ 1423958400, 1425168000 ] ],'YY-MM-DD hh:mm:ss');"," * // [ [ '14-12-31 12:00:00', '15-01-31 12:00:00' ],"," * // [ '15-02-15 12:00:00', '15-03-01 12:00:00' ] ]"," */"," $u.datestr = function(d,fmt) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  fmt = fmt == null ? 'YYYY-MM-DD' : fmt;","  var _datestr = function(a,fmt) {","    return $u.__moment.utc(a,'X').format(fmt);","  }","  return $u.arrayfun(d,_datestr,fmt);","","}","}"],"l":{"4":1,"57":1,"58":0,"59":0,"61":0,"62":0,"63":0,"65":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isarray.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isarray.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":24,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":22,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":50}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":9},"end":{"line":21,"column":25}},{"start":{"line":21,"column":29},"end":{"line":21,"column":49}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method isarray"," * @summary True for array"," * @description  True for array"," * "," * @param  {array} x input element"," * @return {boolean}   "," *"," * @example"," * ubique.isarray([1.4,2.3,3]);"," * // true"," */"," $u.isarray = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return Array.isArray(x) && !Array.isArray(x[0]);","}","","}",""],"l":{"4":1,"17":1,"18":0,"19":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isempty.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isempty.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":14},"end":{"line":20,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":33,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":31,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":26,"column":2}},"6":{"start":{"line":25,"column":3},"end":{"line":25,"column":15}},"7":{"start":{"line":27,"column":1},"end":{"line":29,"column":2}},"8":{"start":{"line":28,"column":3},"end":{"line":28,"column":15}},"9":{"start":{"line":30,"column":1},"end":{"line":30,"column":14}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":19}},{"start":{"line":24,"column":23},"end":{"line":24,"column":37}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},{"start":{"line":27,"column":1},"end":{"line":27,"column":1}}]},"5":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":5},"end":{"line":27,"column":19}},{"start":{"line":27,"column":23},"end":{"line":27,"column":40}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**"," * @method isempty"," * @summary True for empty array or matrix"," * @description  True for empty array or matrix"," *              "," * @param  {array|matrix} x input matrix"," * @return {Boolean}   "," *"," * @example"," * ubique.isempty([]);"," * // true"," * "," * ubique.isempty([[]]);"," * // true"," */"," $u.isempty = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  if ($u.isarray(x) && x.length === 0) {","   return true;"," }"," if ($u.ismatrix(x) && x[0].length === 0) {","   return true;"," }"," return false;","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isfunction.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isfunction.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":27,"column":1}},"2":{"start":{"line":20,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":33}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["/**"," * Data Type Identification"," */"," module.exports = function($u) {","/**","* @method isfunction","* @summary True for function","* @description true for function","* ","* @param  {function} x function","* @return {Boolean}   ","*","* @example","* ubique.isfunction(function(a){return console.log(a);});","* // true","* ","* ubique.isfunction(Math.log);","* // true","*/","$u.isfunction = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return typeof x === 'function';","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isinteger.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isinteger.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":15},"end":{"line":17,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":24,"column":1}},"2":{"start":{"line":17,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":47}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":9},"end":{"line":21,"column":23}},{"start":{"line":21,"column":27},"end":{"line":21,"column":46}}]}},"code":["/**"," * Data Type Identification"," */"," module.exports = function($u) {","/**","* @method isinteger","* @summary True for integer","* @description  True for integer","* ","* @param  {number} x element","* @return {boolean}","*","* @example","* ubique.isinteger(5);","* // true","*/","$u.isinteger = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return $u.isnumber(x) && Math.round(x) === x;","}","","}"],"l":{"4":1,"17":1,"18":0,"19":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/islogical.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/islogical.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":16},"end":{"line":17,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":24,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":22,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":32}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]}},"code":["/**"," * Logical Operations"," */"," module.exports = function($u) {","/**"," * @method islogical"," * @summary True for logical input"," * @description True for logical input"," *              "," * @param  {boolean} x element"," * @return {boolean}   "," *"," * @example"," * ubique.islogical(true);"," * // true"," */"," $u.islogical = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return typeof x === 'boolean';","}","","}"],"l":{"4":1,"17":1,"18":0,"19":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/ismatrix.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/ismatrix.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":15},"end":{"line":20,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":30,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":28,"column":2}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":3},"end":{"line":22,"column":49}},"5":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"6":{"start":{"line":25,"column":3},"end":{"line":25,"column":16}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":26}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":23}},{"start":{"line":24,"column":27},"end":{"line":24,"column":39}},{"start":{"line":24,"column":43},"end":{"line":24,"column":60}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**"," * @method ismatrix"," * @summary True for matrix"," * @description True for array of array (matrix)"," * "," * @param  {matrix} x matrix"," * @return {Boolean}  "," *"," * @example"," * ubique.ismatrix([[1,3,4]]);"," * // true"," * "," * ubique.ismatrix([[1],[3],[4]]);"," * // true"," */"," $u.ismatrix = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t} "," \tif ($u.isundefined(x) || $u.isnull(x) || !$u.isarray(x[0])) {"," \t\treturn false;"," \t}"," \treturn $u.isarray(x[0]);"," }","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"25":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isnan.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isnan.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":24,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":22,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":16}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]}},"code":["/**"," * Numeric Types"," */"," module.exports = function($u) {","/**"," * @method isnan"," * @summary True only for NaN input"," * @description True only for NaN input. For [null,true,'hello',5,{},undefined,'NaN'] returns False."," *              "," * @param  {NaN} x element"," * @return {boolean}   "," *"," * @example"," * ubique.isnan(NaN);"," * // true"," */"," $u.isnan = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return x != x;","}","","}"],"l":{"4":1,"17":1,"18":0,"19":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isnull.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isnull.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":13},"end":{"line":17,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":24,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":22,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":20}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]}},"code":["/**"," * Data Type Identification"," */"," module.exports = function($u) {","/**"," * @method isnull"," * @summary True for null values"," * @description  True for null values"," * "," * @param  {null} x element"," * @return {boolean}   "," *"," * @example"," * ubique.isnull(null);"," * // true"," */"," $u.isnull = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return x === null;","}","","}"],"l":{"4":1,"17":1,"18":0,"19":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isnumber.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isnumber.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":15},"end":{"line":19,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":26,"column":1}},"2":{"start":{"line":19,"column":1},"end":{"line":24,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"4":{"start":{"line":21,"column":4},"end":{"line":21,"column":50}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":31}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]}},"code":["/**"," * Data Type Identification"," */"," module.exports = function($u) {","/**"," * @method isnumber"," * @summary True for number"," * @description  True for number or NaN value"," * "," * @param  {number} x element"," * @return {boolean}   "," *"," * @example"," * ubique.isnumber(5);"," * // true"," * ubique.isnumber(NaN);"," * // true "," */"," $u.isnumber = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }"," \treturn typeof x === 'number';"," }","","}"],"l":{"4":1,"19":1,"20":0,"21":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isscalar.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isscalar.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":15},"end":{"line":23,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":30,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":28,"column":2}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":3},"end":{"line":25,"column":15}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":15}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":23}},{"start":{"line":24,"column":27},"end":{"line":24,"column":44}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**"," * @method isscalar"," * @summary True for scalar input"," * @description True for scalar input"," *              "," * @param  {number|array|matrix} x input "," * @return {Boolean}   "," *"," * @example"," * ubique.isscalar(2);"," * // true"," * "," * ubique.isscalar([2]);"," * // true"," * "," * ubique.isscalar([[2]]);"," * // true"," */"," $u.isscalar = function(x) {"," \tif ($u.nrows(x) === 1 && $u.ncols(x) === 1) {"," \t\treturn true;"," \t}"," \treturn false;"," }","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/issingular.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/issingular.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":29}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":36,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":34,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"5":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":46}},"7":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":53}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"10":{"start":{"line":28,"column":2},"end":{"line":32,"column":3}},"11":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"12":{"start":{"line":30,"column":6},"end":{"line":30,"column":18}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":15}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":20}},{"start":{"line":21,"column":24},"end":{"line":21,"column":37}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]}},"code":["/**"," * Matrix Types"," */"," module.exports = function($u) {","/**"," * @method issingular"," * @summary True for singular matrix"," * @description True for singular matrix. A square matrix which does not have an inverse. A matrix is singular if and only if its determinant is zero."," * "," * @param  {matrix} x input matrix"," * @return {boolean}     "," *"," * @example"," * ubique.issingular([[2,6],[1,3]]);"," * // false"," */"," $u.issingular = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  if ($u.isnumber(x) || $u.isarray(x)) {","    throw new Error('input must be a matrix');","  }","  if (!$u.issquare(x)) {","    throw new Error('input must be a square matrix');","  }","  var n = $u.ncols(x);","  for (var i = 0;i < n;i++) {","    if (x[i][i] === 0) {","      return true;","    }","  }","  return false;","}","","}",""],"l":{"4":1,"17":1,"18":0,"19":0,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"29":0,"30":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isstring.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isstring.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":15},"end":{"line":17,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":24,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":22,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":31}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]}},"code":["/**"," * Data Type Identification"," */"," module.exports = function($u) {","/**"," * @method isstring"," * @summary True for string values"," * @description  True for string values"," * "," * @param  {string} x element"," * @return {boolean|array}   "," *"," * @example"," * ubique.isstring('test');"," * // true"," */"," $u.isstring = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return typeof x === 'string';","}","","}"],"l":{"4":1,"17":1,"18":0,"19":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isundefined.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isundefined.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":18},"end":{"line":17,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":24,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":22,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":25}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]}},"code":["/**"," * Data Type Identification"," */"," module.exports = function($u) {"," /**"," * @method isundefined"," * @summary True for undefined values"," * @description  True for undefined values"," * "," * @param  {undefined} x element"," * @return {boolean}   "," *"," * @example"," * ubique.isundefined(undefined);"," * // true"," */"," $u.isundefined = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return x === undefined;","}","","}"],"l":{"4":1,"17":1,"18":0,"19":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isvector.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/isvector.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":15},"end":{"line":21,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":33,"column":1}},"2":{"start":{"line":21,"column":1},"end":{"line":32,"column":2}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":3},"end":{"line":23,"column":49}},"5":{"start":{"line":25,"column":2},"end":{"line":30,"column":3}},"6":{"start":{"line":26,"column":3},"end":{"line":28,"column":4}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":16}},"8":{"start":{"line":29,"column":3},"end":{"line":29,"column":16}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":15}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":3},"end":{"line":26,"column":3}},{"start":{"line":26,"column":3},"end":{"line":26,"column":3}}]},"4":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":31}},{"start":{"line":26,"column":37},"end":{"line":26,"column":57}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**"," * @method isvector"," * @summary True for vector input"," * @description True for vector input. Vector can have the same dimension of array but array is array and vector"," * is an array of array (= matrix with 1 column or row)"," *              "," * @param  {matrix} x matrix with dimension Mx1 or 1xN"," * @return {boolean}   "," *"," * @example"," * ubique.isvector([[5,6,7]]);"," * // true"," * "," * ubique.isvector([[5],[6],[7]]);"," * // true"," */"," $u.isvector = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.ismatrix(x)) {"," \t\tif (($u.iscolumn(x) === true) || ($u.isrow(x) === true)) {"," \t\t\treturn true;"," \t\t}"," \t\treturn false;"," \t}"," \treturn false;"," }","}"],"l":{"4":1,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/month.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/month.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":24}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":15},"end":{"line":29,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":34,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":33,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":50}},"5":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":39}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":31}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]}},"code":["/**"," * Dates and Time"," */"," module.exports = function($u) {","/**"," * @method month"," * @summary Month of date"," * @description Returns a number representing the month for each element in X."," * Months are 0 indexed, Jan is 0 and Dec is 11."," * Based on [moment.js](http://momentjs.com)"," * "," * @param  {number|array|matrix} x serial date number (Unix)"," * @return {number|array|matrix}"," *"," * @example"," * ubique.month(1424708525);"," * // 1"," * "," * ubique.month([1414886399,1414972799]);"," * // [ 10, 10 ]"," * "," * ubique.month([[1414886399,1414972799],[1415059199,1415145599]]);"," * // [ [ 10, 10 ], [ 10, 10 ] ]"," */"," $u.month = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  var _month = function(a) {","    return $u.__moment.unix(a).month();","  }","  return $u.arrayfun(x,_month);","}","}",""],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/now.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/now.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":10},"end":{"line":16,"column":21}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":19,"column":1}},"2":{"start":{"line":16,"column":1},"end":{"line":18,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":32}}},"branchMap":{},"code":["/**"," * Dates and Time"," */"," module.exports = function($u) {","/**"," * @method now"," * @summary Current date and time as date number (unix)"," * @description Current date and time as date number (unix)"," * "," * @param {empty} empty no arguments"," *"," * @example"," * ubique.now();"," * // 1430759861"," */"," $u.now = function() {","  return $u.datenum($u.clock());","}","}",""],"l":{"4":1,"16":1,"17":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/randchar.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/randchar.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":15},"end":{"line":21,"column":34}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":38},"end":{"line":26,"column":49}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":33,"column":1}},"2":{"start":{"line":21,"column":1},"end":{"line":31,"column":1}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":14}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":102}},"6":{"start":{"line":26,"column":2},"end":{"line":30,"column":13}},"7":{"start":{"line":27,"column":4},"end":{"line":29,"column":15}},"8":{"start":{"line":28,"column":6},"end":{"line":28,"column":71}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":28},"end":{"line":25,"column":92}},{"start":{"line":25,"column":95},"end":{"line":25,"column":101}}]}},"code":["/**"," * Create and Concatenate Strings"," */"," module.exports = function($u) {","/**"," * @method randchar"," * @summary Generate a random alpha-numeric string"," * @description Generate a random alpha-numeric string"," * "," * @param  {number} n number of characters to generate (def: 6)"," * @param  {string} strset character set to get random sample"," * @return {string}        "," *"," * @example"," * ubique.randchar(12,'ABCD!-|/%&$\\1234567890');"," * // D&80%BB/C%B"," * "," * ubique.randchar(16,'ABCDEFGHILMNOPQRSTUVZ-1234567890');"," * // U68MP-U7ZI26T2HS"," */"," $u.randchar = function(n,strset) {","  if (arguments.length === 0) {","    return '';","  }","  strset = strset == null ? 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789' : strset;","  return Array.apply(0, Array(n)).map(function() {","    return (function(charset) {","      return charset.charAt(Math.floor(Math.random() * charset.length))","    }(strset));","  }).join('')","}","","}"],"l":{"4":1,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/strfind.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/strfind.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":32}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":14},"end":{"line":20,"column":37}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":36,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":35,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":34,"column":3}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":33}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":20}},"8":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"9":{"start":{"line":28,"column":6},"end":{"line":28,"column":21}},"10":{"start":{"line":29,"column":6},"end":{"line":29,"column":38}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":41}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":22}},{"start":{"line":24,"column":26},"end":{"line":24,"column":46}},{"start":{"line":24,"column":51},"end":{"line":24,"column":79}}]}},"code":["/**"," * Parse Strings"," */"," module.exports = function ($u) {","/**"," * @method strfind"," * @summary Find one string within another"," * @description Find one string within another. If pattern length > text length returns null."," * "," * @param  {string} str data to be searched"," * @param  {string} pattern search pattern"," * @return {array} indices of occurrences of pattern"," *  "," * @example"," * var mystr = 'find indices in the string';"," *"," * ubique.strfind(mystr,'in');"," * // [ 1, 5, 13, 23 ]"," */"," $u.strfind = function (str,pattern) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  if ($u.isstring(str) && $u.isstring(pattern) && (str.length >= pattern.length)) {","    var i = str.indexOf(pattern);","    var posidx = [];","    while(i >= 0) {","      posidx.push(i);","      i = str.indexOf(pattern, i + 1);","    }","    return posidx;","  } else {","    throw new Error('unknown arguments');","  }","}","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/today.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/today.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":23}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":20,"column":1}},"2":{"start":{"line":16,"column":1},"end":{"line":19,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":21}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":38}}},"branchMap":{},"code":["/**"," * Dates and Time"," */"," module.exports = function($u) {","/**"," * @method today"," * @summary Current date"," * @description Current date"," * "," * @param {empty} empty no arguments"," *"," * @example"," * ubique.today();"," * // 1430697600"," */"," $u.today = function() {","  var t = $u.clock();","  return $u.datenum([t[0],t[1],t[2]]);","}","}",""],"l":{"4":1,"16":1,"17":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/vectorfun.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/vectorfun.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":75,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":74,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":48}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":28}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":20}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":18}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":20}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":43}},"11":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":65}},"13":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":63}},"15":{"start":{"line":40,"column":2},"end":{"line":43,"column":3}},"16":{"start":{"line":41,"column":4},"end":{"line":41,"column":27}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":27}},"18":{"start":{"line":44,"column":2},"end":{"line":47,"column":3}},"19":{"start":{"line":45,"column":4},"end":{"line":45,"column":27}},"20":{"start":{"line":46,"column":4},"end":{"line":46,"column":27}},"21":{"start":{"line":48,"column":2},"end":{"line":53,"column":3}},"22":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"23":{"start":{"line":50,"column":6},"end":{"line":50,"column":33}},"24":{"start":{"line":52,"column":4},"end":{"line":52,"column":59}},"25":{"start":{"line":54,"column":2},"end":{"line":54,"column":13}},"26":{"start":{"line":55,"column":2},"end":{"line":61,"column":3}},"27":{"start":{"line":56,"column":4},"end":{"line":60,"column":5}},"28":{"start":{"line":57,"column":6},"end":{"line":57,"column":26}},"29":{"start":{"line":58,"column":6},"end":{"line":58,"column":65}},"30":{"start":{"line":59,"column":6},"end":{"line":59,"column":19}},"31":{"start":{"line":62,"column":2},"end":{"line":67,"column":3}},"32":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"33":{"start":{"line":64,"column":6},"end":{"line":64,"column":17}},"34":{"start":{"line":66,"column":4},"end":{"line":66,"column":39}},"35":{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},"36":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"37":{"start":{"line":70,"column":6},"end":{"line":70,"column":29}},"38":{"start":{"line":73,"column":2},"end":{"line":73,"column":23}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":15}},{"start":{"line":34,"column":19},"end":{"line":34,"column":28}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"8":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"9":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"10":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"11":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"12":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"13":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]}},"code":["/**"," * Structures"," */"," module.exports = function($u) {","/**"," * @method  vectorfun"," * @summary Apply a function to each vector column or row of a matrix "," * @description Apply a function to each vector column or row of a matrix. The syntax is:"," * "," * vectorfun(dim,x,func,arg1,arg2....)"," * "," * @param  {number|string|boolean|...} args variable input arguments"," * @return {number|string|boolean|...}  "," *"," * @example"," * var testfun = function(a,b,c){return ubique.mean(a)*b+c;};"," * "," * ubique.vectorfun(0,[[5,6,5],[7,8,-1]],testfun,5,10)"," * // [ [ 36.666667 ], [ 33.333333 ] ]"," * "," * ubique.vectorfun(1,[[5,6,5],[7,8,-1]],testfun,5,10)"," * // [ [ 40, 45, 20 ] ]"," */"," $u.vectorfun = function() {"," \tif (arguments.length < 3) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  var args = $u.argsarray.apply(null,arguments);","  var argslen = args.length;","  var dim = args[0];","  var x = args[1];","  var fun = args[2];","  var varargin = args.slice(3,args.length);","  if (dim !== 0 && dim !== 1) {","    throw new Error('dimension must be 0 (rows) or 1 (columns)');","  }","  if (!$u.isfunction(fun)) {","    throw new Error('third input argument must be a function');","  }","  if (dim === 1) {","    var ndim = $u.ncols(x);","    var narray = $u.getcol;","  }","  if (dim === 0) {","    var ndim = $u.nrows(x);","    var narray = $u.getrow;","  }","  if ($u.isarray(x)) {","    if ($u.isempty(varargin)) {","      return fun.apply(null,[x]);","    } ","    return fun.apply(null,[].concat([x]).concat(varargin));","  }","  var v = [];","  if ($u.ismatrix(x)) {","    for (var i = 0; i < ndim; i++) {","      var d = narray(x,i);","      var temp = fun.apply(null,[].concat([d]).concat(varargin));","      v.push(temp);","    }","  }","  if (dim === 1) {","    if ($u.isarray(v)) {","      return [v];","    }","    return $u.squeeze($u.transpose(v));","  }","  if (dim === 0) {","    if ($u.isarray(v)) {","      return $u.transpose(v);","    }","  }","  return $u.squeeze(v);","}","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"48":0,"49":0,"50":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"62":0,"63":0,"64":0,"66":0,"68":0,"69":0,"70":0,"73":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/weekday.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datatype/weekday.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":25,"column":26}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":29}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":34,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":33,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":50}},"5":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":47}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":33}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]}},"code":["/**"," * Dates and Time"," */"," module.exports = function($u) {","/**"," * @method weekday"," * @summary Day of week"," * @description Returns a number representing the day of the week for each element in X."," * The ISO day of the week begins with 1 Monday, 2 Tuesday ... 7 Sunday."," * Based on [moment.js](http://momentjs.com)"," * "," * @param  {number|array|matrix} x serial date number (Unix)"," * @return {number|array|matrix}"," *"," * @example"," * ubique.weekday(1426636800);"," * // 3"," * "," * ubique.weekday([ 1424908800, 1426636800 ]);"," * // [ 4, 3 ]"," * "," * ubique.weekday([ [ 1424908800, 1426636800 ], [ 1427328000, 1429315200 ] ]);"," * // [ [ 4, 3 ], [ 4, 6 ] ]"," */"," $u.weekday = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  var _weekday = function(a) {","    return $u.__moment.utc(a,'X').isoWeekday();","  }","  return $u.arrayfun(x,_weekday);","}","}",""],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/ceil.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/ceil.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":11},"end":{"line":27,"column":25}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":14},"end":{"line":33,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":38,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":37,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":24}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":25}},"7":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":32}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":30}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":18},"end":{"line":31,"column":19}},{"start":{"line":31,"column":22},"end":{"line":31,"column":23}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {"," \t/**"," * @method ceil"," * @summary Round toward positive infinity"," * @description Round toward positive infinity"," * "," * @param  {number|array|matrix} x number or array of values"," * @param  {number} x number of decimals"," * @return {number|array|matrix}"," *"," * @example"," * ubique.ceil(Math.PI,12);"," * // 3.141593"," * "," * ubique.ceil(3.78);"," * // 4"," * "," * ubique.ceil([4.51,-1.4]);"," * // [ 5, -1 ]"," * "," * ubique.ceil([[4.5134,-1.4345],[3.7809,0.0134]],2);"," * // [ [ 4.52, -1.43 ], [ 3.79, 0.02 ] ]"," */"," $u.ceil = function(x,n) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tn = n == null ? 0 : n;"," \tvar p = Math.pow(10,n);","  var _ceil = function(a) {","    return Math.ceil(a * p) / p;","  }","  return $u.arrayfun(x,_ceil);","}","}",""],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/cumdev.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/cumdev.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":13},"end":{"line":27,"column":29}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":16},"end":{"line":32,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":38,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":36,"column":2}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"6":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"7":{"start":{"line":33,"column":3},"end":{"line":33,"column":44}},"8":{"start":{"line":35,"column":3},"end":{"line":35,"column":38}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method cumdev"," * @summary Cumulative mean deviation"," * @description  Cumulative mean deviation of the values in array X"," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {number} dim dimension selected, 1: column 0: row (def: 1)"," * @return {array|matrix}   "," *"," * @example"," * var b = [[-1,3,-1],[4,5,9]];"," * var c = [5,6,3];"," *"," * ubique.cumdev([5,6,3]);"," * // [ 0.333333, 1.666667, -0 ]"," * "," * ubique.cumdev([[-1,3,-1],[4,5,9]],0);"," * // [ [ -1.333333, 1.333333, 0 ], [ -2, -3, 0 ] ]"," * "," * ubique.cumdev([[-1,3,-1],[4,5,9]]);"," * // [ [ -2.5, -1, -5 ], [ 0, 0, 0 ] ]"," */"," $u.cumdev = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tdim = dim == null ? 1 : dim;"," \tvar _cumdev = function(a) {"," \t\treturn $u.cumsum($u.minus(a,$u.mean(a)));"," \t}","   return $u.vectorfun(dim,x,_cumdev);"," }","","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/cummax.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/cummax.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":29}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":29}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":44,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":42,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":50}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"6":{"start":{"line":29,"column":2},"end":{"line":40,"column":3}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":15}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":16}},"9":{"start":{"line":32,"column":4},"end":{"line":38,"column":5}},"10":{"start":{"line":33,"column":6},"end":{"line":37,"column":7}},"11":{"start":{"line":34,"column":8},"end":{"line":34,"column":20}},"12":{"start":{"line":36,"column":8},"end":{"line":36,"column":24}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":13}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":37}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":22},"end":{"line":28,"column":23}},{"start":{"line":28,"column":26},"end":{"line":28,"column":29}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method cummax"," * @summary Cumulative max of array elements"," * @description Cumulative max of array elements"," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {number} dim dimension selected, 1: column 0: row (def: 1)"," * @return {array|matrix}   "," *"," * @example"," * ubique.cummax([5,6,3]);"," * // [ 5, 6, 6 ]"," * "," * ubique.cummax([[5,6,5],[7,8,-1]]);"," * // [ [ 5, 6, 5 ], [ 7, 8, 5 ] ]"," * "," * ubique.cummax([[5,6,5],[7,8,-1]],0);"," * // [ [ 5, 6, 6 ], [ 7, 8, 8 ] ]"," */"," $u.cummax = function(x,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  dim = dim == null ? 1 : dim;","  var _cummax =  function(a) {","    var v = [];","    v[0] = a[0];","    for (var i = 1;i < a.length;i++) {","      if (a[i] >= v[i - 1]) {","        v[i] = a[i];","      } else { ","        v[i] = v[i - 1];","      }","    }","    return v;","  }","  return $u.vectorfun(dim,x,_cummax);","}","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"39":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/cummin.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/cummin.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":29}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":29}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":44,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":42,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":50}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"6":{"start":{"line":29,"column":2},"end":{"line":40,"column":3}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":15}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":16}},"9":{"start":{"line":32,"column":4},"end":{"line":38,"column":5}},"10":{"start":{"line":33,"column":6},"end":{"line":37,"column":7}},"11":{"start":{"line":34,"column":8},"end":{"line":34,"column":20}},"12":{"start":{"line":36,"column":8},"end":{"line":36,"column":24}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":13}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":37}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":22},"end":{"line":28,"column":23}},{"start":{"line":28,"column":26},"end":{"line":28,"column":29}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {"," /**"," * @method cummin"," * @summary Cumulative min of array elements"," * @description Cumulative min of array elements"," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {number} dim dimension selected, 1: column 0: row (def: 1)"," * @return {array|matrix}   "," *"," * @example"," * ubique.cummin([5,6,3]);"," * // [ 5, 5, 3 ]"," * "," * ubique.cummin([[5,6,5],[7,8,-1]]);"," * // [ [ 5, 6, 5 ], [ 5, 6, -1 ] ]"," * "," * ubique.cummin([[5,6,5],[7,8,-1]],0);"," * // [ [ 5, 5, 5 ], [ 7, 7, -1 ] ]"," */"," $u.cummin = function(x,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  dim = dim == null ? 1 : dim;","  var _cummin =  function(a) {","    var v = [];","    v[0] = a[0];","    for (var i = 1;i < a.length;i++) {","      if (a[i] < v[i - 1]) {","        v[i] = a[i];","      } else { ","        v[i] = v[i - 1];","      }","    }","    return v;","  }","  return $u.vectorfun(dim,x,_cummin);","}","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"39":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/cumprod.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/cumprod.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":24,"column":30}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":40,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":38,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":50}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"6":{"start":{"line":29,"column":2},"end":{"line":36,"column":3}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":15}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":16}},"9":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"10":{"start":{"line":33,"column":6},"end":{"line":33,"column":29}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":13}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":38}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":22},"end":{"line":28,"column":23}},{"start":{"line":28,"column":26},"end":{"line":28,"column":29}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {"," /**"," * @method cumprod"," * @summary Cumulative product of array elements"," * @description Cumulative product of array elements"," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {number} dim dimension selected, 1: column 0: row (def: 1)"," * @return {array|matrix}   "," *"," * @example"," * ubique.cumprod([5,6,3]);"," * // [ 5, 30, 90 ]"," * "," * ubique.cumprod([[5,6,5],[7,8,-1]]);"," * // [ [ 5, 6, 5 ], [ 35, 48, -5 ] ]"," * "," * ubique.cumprod([[5,6,5],[7,8,-1]],0);"," * // [ [ 5, 30, 150 ], [ 7, 56, -56 ] ]"," */"," $u.cumprod = function(x,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  dim = dim == null ? 1 : dim;","  var _cumprod =  function(a) {","    var v = [];","    v[0] = a[0];","    for (var i = 1;i < a.length;i++) {","      v[i] = v[i - 1] * a[i];","    }","    return v;","  }","  return $u.vectorfun(dim,x,_cumprod);","}","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/cumsum.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/cumsum.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":29}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":29}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":40,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":38,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":50}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"6":{"start":{"line":29,"column":2},"end":{"line":36,"column":3}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":15}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":16}},"9":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"10":{"start":{"line":33,"column":6},"end":{"line":33,"column":29}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":13}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":37}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":22},"end":{"line":28,"column":23}},{"start":{"line":28,"column":26},"end":{"line":28,"column":29}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method cumsum"," * @summary Cumulative sum of array elements"," * @description Cumulative sum of array elements"," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {number} dim dimension selected, 1: column 0: row (def: 1)"," * @return {array|matrix}   "," *"," * @example"," * ubique.cumsum([5,6,3]);"," * // [5, 11, 14]"," * "," * ubique.cumsum([[5,6,5],[7,8,-1]]);"," * // [ [ 5, 6, 5 ], [ 12, 14, 4 ] ]"," * "," * ubique.cumsum([[5,6,5],[7,8,-1]],0);"," * // [ [ 5, 11, 16 ], [ 7, 15, 14 ] ]"," */"," $u.cumsum = function(x,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  dim = dim == null ? 1 : dim;","  var _cumsum =  function(a) {","    var v = [];","    v[0] = a[0];","    for (var i = 1;i < a.length;i++) {","      v[i] = v[i - 1] + a[i];","    }","    return v;","  }","  return $u.vectorfun(dim,x,_cumsum);","}","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/diff.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/diff.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":27}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":16},"end":{"line":29,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":39,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":37,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":3},"end":{"line":28,"column":31}},"6":{"start":{"line":29,"column":3},"end":{"line":35,"column":3}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":15}},"8":{"start":{"line":31,"column":5},"end":{"line":33,"column":5}},"9":{"start":{"line":32,"column":6},"end":{"line":32,"column":33}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":13}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":35}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":23},"end":{"line":28,"column":24}},{"start":{"line":28,"column":27},"end":{"line":28,"column":30}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method diff"," * @summary Differences between adjacent elements in array "," * @description Differences between adjacent elements in array or matrix "," * "," * @param  {array|matrix} x array of values"," * @param  {number} dim dimension selected, 1: column 0: row (def: 1)"," * @return {array|matrix}   "," *"," * @example"," * ubique.diff([5,6,3]);"," * // [1, -3]"," * "," * ubique.diff([[5,6,5],[7,8,-1]]);"," * // [ [ 2, 2, -6 ] ]"," * "," * ubique.diff([[5,6,5],[7,8,-1]],0);"," * // [ [ 1, -1 ], [ 1, -9 ] ]"," */"," $u.diff = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","   dim = dim == null ? 1 : dim;","   var _diff =  function(a) {","    var v = [];","     for (var i = 1;i < a.length;i++) {","      v[i - 1] = a[i] - a[i - 1];","    }","    return v;","  }","  return $u.vectorfun(dim,x,_diff);","}","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/dot.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/dot.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":10},"end":{"line":18,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":27,"column":1}},"2":{"start":{"line":18,"column":1},"end":{"line":26,"column":2}},"3":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"4":{"start":{"line":20,"column":3},"end":{"line":20,"column":49}},"5":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"6":{"start":{"line":23,"column":5},"end":{"line":23,"column":44}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":33}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":39}},{"start":{"line":22,"column":43},"end":{"line":22,"column":74}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method dot"," * @summary Arrays dot product X * Y"," * @description Arrays dot product X * Y. X and Y must be arrays of the same length"," * "," * @param  {array} x number or array of values"," * @param  {array} y number or array of values"," * @return {array}   "," *"," * @example"," * ubique.dot([5,6,3],[0.5,-3,2.3]);"," * // -8.6"," */"," $u.dot = function(x,y) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","    if ($u.size(x)[0] !== $u.size(y)[0] || $u.size(x)[1] !== $u.size(y)[1]) {","    \tthrow new Error('input size mismatch');","    }","    return $u.sum($u.times(x,y));"," }","}",""],"l":{"4":1,"18":1,"19":0,"20":0,"22":0,"23":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/eq.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/eq.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":23}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":12},"end":{"line":40,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":46,"column":1}},"2":{"start":{"line":36,"column":1},"end":{"line":45,"column":1}},"3":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"4":{"start":{"line":38,"column":4},"end":{"line":38,"column":50}},"5":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"6":{"start":{"line":41,"column":4},"end":{"line":41,"column":20}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":24}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":28}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Relational Operations"," */"," module.exports = function($u) {","/**"," * @method eq"," * @summary Equality X === Y"," * @description Equality X === Y"," *"," * @param  {number|array|matrix} x left array"," * @param  {number|array|matrix} y right array"," * @return {number|array|matrix}"," *"," * @example"," * ubique.eq(5,5);"," * // true"," * "," * ubique.eq(5,[5,6,3]);"," * // [ true, false, false ]"," * "," * ubique.eq(5,[[5,6],[3,5]]);"," * // [ [ true, false ], [ false, true ] ]"," * "," * ubique.eq([5,6,3],5);"," * // [ true, false, false ]"," * "," * ubique.eq([[5,6],[3,5]],5);"," * // [ [ true, false ], [ false, true ] ]"," * "," * ubique.eq([5,6,3],[2,6,0]);"," * // [ false, true, false ]"," * "," * ubique.eq([[5,6],[-1,2]],[[5,6],[3,5]]);"," * // [ [ true, true ], [ false, false ] ]"," */"," $u.eq = function(x,y) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  var _eq = function(el) {","    return el === 0;","  }","  var d = $u.minus(x,y);","  return $u.arrayfun(d,_eq);","}","}",""],"l":{"4":1,"36":1,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/floor.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/floor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":26}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":15},"end":{"line":33,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":38,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":37,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":24}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":25}},"7":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":33}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":31}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":18},"end":{"line":31,"column":19}},{"start":{"line":31,"column":22},"end":{"line":31,"column":23}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {"," \t/**"," * @method floor"," * @summary Round toward negative infinity"," * @description Round toward negative infinity"," * "," * @param  {number|array|matrix} x number or array of values"," * @param  {number} x number of decimals"," * @return {number|array|matrix}"," *"," * @example"," * ubique.floor(Math.PI,12);"," * // 3.141592653589"," * "," * ubique.floor(3.78);"," * // 3"," * "," * ubique.floor([4.51,-1.4]);"," * // [ 4, -2 ]"," * "," * ubique.floor([[4.5134,-1.4345],[3.7809,0.0134]],2);"," * //[ [ 4.51, -1.43 ], [ 3.78, 0.01 ] ]"," */"," $u.floor = function(x,n) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  n = n == null ? 0 : n;","  var p = Math.pow(10,n);","  var _floor = function(a) {","    return Math.round(a * p) / p;","  }","  return $u.arrayfun(x,_floor);","}","}",""],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/ge.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/ge.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":23}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":12},"end":{"line":40,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":46,"column":1}},"2":{"start":{"line":36,"column":1},"end":{"line":45,"column":1}},"3":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"4":{"start":{"line":38,"column":4},"end":{"line":38,"column":50}},"5":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"6":{"start":{"line":41,"column":4},"end":{"line":41,"column":19}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":24}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":28}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Relational Operations"," */"," module.exports = function($u) {","/**"," * @method ge"," * @summary Greater than or equal to X >= Y"," * @description Greater than or equal to X >= Y"," *"," * @param  {number|array|matrix} x left array"," * @param  {number|array|matrix} y right array"," * @return {number|array|matrix}"," *"," * @example"," * ubique.ge(5,5);"," * // true"," * "," * ubique.ge(5,[5,6,3]);"," * // [ true, false, true ]"," * "," * ubique.ge(5,[[5,6],[3,5]]);"," * // [ [ true, false ], [ false, true ] ]"," * "," * ubique.ge([5,6,3],5);"," * // [ true, true, false ]"," * "," * ubique.ge([[5,6],[3,5]],5);"," * // [ [ true, true ], [ false, true ] ]"," * "," * ubique.ge([5,6,3],[2,6,0]);"," * // [ false, true, false ]"," * "," * ubique.ge([[5,6],[-1,2]],[[5,6],[3,5]]);"," * // [ [ true, true ], [ false, false ] ]"," */"," $u.ge = function(x,y) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  var _ge = function(el) {","    return el >= 0;","  }","  var d = $u.minus(x,y);","  return $u.arrayfun(d,_ge);","}","}"],"l":{"4":1,"36":1,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/gt.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/gt.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":23}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":12},"end":{"line":40,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":46,"column":1}},"2":{"start":{"line":36,"column":1},"end":{"line":45,"column":1}},"3":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"4":{"start":{"line":38,"column":4},"end":{"line":38,"column":50}},"5":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"6":{"start":{"line":41,"column":4},"end":{"line":41,"column":18}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":24}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":28}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Relational Operations"," */"," module.exports = function($u) {","/**"," * @method gt"," * @summary Greater than X > Y"," * @description Greater than X > Y"," *"," * @param  {number|array|matrix} x left array"," * @param  {number|array|matrix} y right array"," * @return {number|array|matrix}"," *"," * @example"," * ubique.gt(5,5);"," * // false"," * "," * ubique.gt(5,[5,6,3]);"," * // [ false, false, true ]"," * "," * ubique.gt(5,[[5,6],[3,5]]);"," * // [ [ false, false ], [ true, false ] ]"," * "," * ubique.gt([5,6,3],5);"," * // [ false, true, false ]"," * "," * ubique.gt([[5,6],[3,5]],5);"," * // [ [ false, true ], [ false, false ] ]"," * "," * ubique.gt([5,6,3],[2,6,0]);"," * // [ true, false, true ]"," * "," * ubique.gt([[5,6],[-1,2]],[[5,6],[3,5]]);"," * // [ [ false, false ], [ false, false ] ]"," */"," $u.gt = function(x,y) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  var _gt = function(el) {","    return el > 0;","  }","  var d = $u.minus(x,y);","  return $u.arrayfun(d,_gt);","}","}"],"l":{"4":1,"36":1,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/ldivide.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/ldivide.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":14},"end":{"line":34,"column":28}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":28},"end":{"line":46,"column":41}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":24},"end":{"line":50,"column":37}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":28},"end":{"line":57,"column":41}}},"6":{"name":"(anonymous_6)","line":61,"loc":{"start":{"line":61,"column":24},"end":{"line":61,"column":37}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":80,"column":1}},"2":{"start":{"line":34,"column":1},"end":{"line":79,"column":2}},"3":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"4":{"start":{"line":36,"column":3},"end":{"line":36,"column":49}},"5":{"start":{"line":38,"column":2},"end":{"line":51,"column":3}},"6":{"start":{"line":39,"column":3},"end":{"line":41,"column":4}},"7":{"start":{"line":40,"column":4},"end":{"line":40,"column":17}},"8":{"start":{"line":42,"column":3},"end":{"line":49,"column":4}},"9":{"start":{"line":43,"column":4},"end":{"line":43,"column":15}},"10":{"start":{"line":44,"column":4},"end":{"line":47,"column":5}},"11":{"start":{"line":45,"column":5},"end":{"line":45,"column":30}},"12":{"start":{"line":46,"column":5},"end":{"line":46,"column":60}},"13":{"start":{"line":46,"column":42},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":4},"end":{"line":48,"column":13}},"15":{"start":{"line":50,"column":3},"end":{"line":50,"column":55}},"16":{"start":{"line":50,"column":38},"end":{"line":50,"column":53}},"17":{"start":{"line":52,"column":2},"end":{"line":62,"column":3}},"18":{"start":{"line":53,"column":3},"end":{"line":60,"column":4}},"19":{"start":{"line":54,"column":4},"end":{"line":54,"column":15}},"20":{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},"21":{"start":{"line":56,"column":5},"end":{"line":56,"column":30}},"22":{"start":{"line":57,"column":5},"end":{"line":57,"column":60}},"23":{"start":{"line":57,"column":42},"end":{"line":57,"column":57}},"24":{"start":{"line":59,"column":4},"end":{"line":59,"column":13}},"25":{"start":{"line":61,"column":3},"end":{"line":61,"column":55}},"26":{"start":{"line":61,"column":38},"end":{"line":61,"column":53}},"27":{"start":{"line":63,"column":2},"end":{"line":69,"column":3}},"28":{"start":{"line":64,"column":3},"end":{"line":64,"column":14}},"29":{"start":{"line":65,"column":3},"end":{"line":67,"column":4}},"30":{"start":{"line":66,"column":4},"end":{"line":66,"column":23}},"31":{"start":{"line":68,"column":3},"end":{"line":68,"column":12}},"32":{"start":{"line":70,"column":2},"end":{"line":78,"column":3}},"33":{"start":{"line":71,"column":3},"end":{"line":71,"column":14}},"34":{"start":{"line":72,"column":3},"end":{"line":76,"column":4}},"35":{"start":{"line":73,"column":4},"end":{"line":74,"column":24}},"36":{"start":{"line":75,"column":4},"end":{"line":75,"column":29}},"37":{"start":{"line":77,"column":3},"end":{"line":77,"column":12}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":3},"end":{"line":39,"column":3}},{"start":{"line":39,"column":3},"end":{"line":39,"column":3}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":3},"end":{"line":42,"column":3}},{"start":{"line":42,"column":3},"end":{"line":42,"column":3}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":3},"end":{"line":53,"column":3}},{"start":{"line":53,"column":3},"end":{"line":53,"column":3}}]},"7":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"8":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":19}},{"start":{"line":63,"column":23},"end":{"line":63,"column":36}}]},"9":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"10":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":20}},{"start":{"line":70,"column":24},"end":{"line":70,"column":38}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method ldivide"," * @summary Left array division X. \\ Y"," * @description Divides each element of Y by the corresponding element of X. Inputs X and Y"," * must have the same size"," * "," * @param  {number|array|matrix} x number or array of values"," * @param  {number|array|matrix} y number or array of values"," * @return {number|array|matrix}   "," *"," * @example"," * ubique.ldivide(5,6);"," * // 1.2"," * "," * ubique.ldivide([5,6,7],3);"," * // [ 0.6, 0.5, 0.428571 ]"," * "," * ubique.ldivide(3,[-1,-2,-3]);"," * // [ -0.333333, -0.666667, -1 ]"," * "," * ubique.ldivide([5,6,3],[0.5,-3,2.3]);"," * // [ 0.1, -0.5, 0.766667 ]"," * "," * ubique.ldivide([[9, 5], [6, 1]],[[3, 2], [5, 2]]);"," * // [ [ 0.333333, 0.4 ], [ 0.833333, 2 ] ]"," * "," * ubique.ldivide([[9, 5], [6, 1]],3);"," * // [ [ 0.333333, 0.6 ], [ 0.5, 3 ] ]"," */"," $u.ldivide = function(y,x) {"," \tif (arguments.length < 2) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isnumber(x)) {"," \t\tif ($u.isnumber(y)) {"," \t\t\treturn x / y;"," \t\t}"," \t\tif ($u.ismatrix(y)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(y);i++) {"," \t\t\t\tvar vec = $u.getrow(y,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return x / val;});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(y,function(val){return x / val;})"," \t}"," \tif ($u.isnumber(y)) {"," \t\tif ($u.ismatrix(x)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(x);i++) {"," \t\t\t\tvar vec = $u.getrow(x,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return val / y;});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(x,function(val){return val / y;})"," \t}"," \tif ($u.isarray(x) && $u.isarray(y)) {"," \t\tvar v = [];"," \t\tfor (var i = 0;i < x.length;i++) {"," \t\t\tv[i] = x[i] / y[i];"," \t\t}"," \t\treturn v;"," \t}"," \tif ($u.ismatrix(x) && $u.ismatrix(y)) {"," \t\tvar v = [];"," \t\tfor (var i = 0;i < $u.nrows(x);i++) {"," \t\t\tvar vx = $u.getrow(x,i),"," \t\t\tvy = $u.getrow(y,i);"," \t\t\tv[i] = $u.rdivide(vx,vy);"," \t\t}"," \t\treturn v;"," \t}"," }","}"],"l":{"4":1,"34":1,"35":0,"36":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"50":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"61":0,"63":0,"64":0,"65":0,"66":0,"68":0,"70":0,"71":0,"72":0,"73":0,"75":0,"77":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/le.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/le.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":23}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":12},"end":{"line":40,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":46,"column":1}},"2":{"start":{"line":36,"column":1},"end":{"line":45,"column":1}},"3":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"4":{"start":{"line":38,"column":4},"end":{"line":38,"column":50}},"5":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"6":{"start":{"line":41,"column":4},"end":{"line":41,"column":19}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":24}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":28}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Relational Operations"," */"," module.exports = function($u) {","/**"," * @method le"," * @summary Less than or equal to X <= Y"," * @description Less than or equal to X <= Y"," *"," * @param  {number|array|matrix} x left array"," * @param  {number|array|matrix} y right array"," * @return {number|array|matrix}"," *"," * @example"," * ubique.le(5,5);"," * // true"," * "," * ubique.le(5,[5,6,3]);"," * // [ true, true, false ]"," * "," * ubique.le(5,[[5,6],[3,5]]);"," * // [ [ true, true ], [ false, true ] ]"," * "," * ubique.le([5,6,3],5);"," * // [ true, false, true ]"," * "," * ubique.le([[5,6],[3,5]],5);"," * // [ [ true, false ], [ true, true ] ]"," * "," * ubique.le([5,6,3],[2,6,0]);"," * // [ false, true, false ]"," * "," * ubique.le([[5,6],[-1,2]],[[5,6],[3,5]]);"," * // [ [ true, true ], [ true, true ] ]"," */"," $u.le = function(x,y) {","  if (arguments.lenleh < 2) {","    throw new Error('not enough input arguments');","  }","  var _le = function(el){","    return el <= 0;","  }","  var d = $u.minus(x,y);","  return $u.arrayfun(d,_le);","}","}"],"l":{"4":1,"36":1,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/lt.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/lt.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":23}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":12},"end":{"line":40,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":46,"column":1}},"2":{"start":{"line":36,"column":1},"end":{"line":45,"column":1}},"3":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"4":{"start":{"line":38,"column":4},"end":{"line":38,"column":50}},"5":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"6":{"start":{"line":41,"column":4},"end":{"line":41,"column":18}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":24}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":28}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Relational Operations"," */"," module.exports = function($u) {","/**"," * @method lt"," * @summary Less than X < Y"," * @description Less than X < Y"," *"," * @param  {number|array|matrix} x left array"," * @param  {number|array|matrix} y right array"," * @return {number|array|matrix}"," *"," * @example"," * ubique.lt(5,5);"," * // false"," * "," * ubique.lt(5,[5,6,3]);"," * // [ false, true, false ]"," * "," * ubique.lt(5,[[5,6],[3,5]]);"," * // [ [ false, true ], [ false, false ] ]"," * "," * ubique.lt([5,6,3],5);"," * // [ false, false, true ]"," * "," * ubique.lt([[5,6],[3,5]],5);"," * // [ [ false, false ], [ true, false ] ]"," * "," * ubique.lt([5,6,3],[2,6,0]);"," * // [ false, false, false ]"," * "," * ubique.lt([[5,6],[-1,2]],[[5,6],[3,5]]);"," * // [ [ false, false ], [ true, true ] ]"," */"," $u.lt = function(x,y) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  var _lt = function(el){ ","    return el < 0;","  }","  var d = $u.minus(x,y);","  return $u.arrayfun(d,_lt);","}","}"],"l":{"4":1,"36":1,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/minus.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/minus.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":26}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":28},"end":{"line":39,"column":41}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":24},"end":{"line":43,"column":37}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":28},"end":{"line":50,"column":41}}},"6":{"name":"(anonymous_6)","line":54,"loc":{"start":{"line":54,"column":24},"end":{"line":54,"column":37}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":78,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":76,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":44,"column":3}},"6":{"start":{"line":32,"column":3},"end":{"line":34,"column":4}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":17}},"8":{"start":{"line":35,"column":3},"end":{"line":42,"column":4}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":15}},"10":{"start":{"line":37,"column":4},"end":{"line":40,"column":5}},"11":{"start":{"line":38,"column":5},"end":{"line":38,"column":30}},"12":{"start":{"line":39,"column":5},"end":{"line":39,"column":60}},"13":{"start":{"line":39,"column":42},"end":{"line":39,"column":57}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":13}},"15":{"start":{"line":43,"column":3},"end":{"line":43,"column":55}},"16":{"start":{"line":43,"column":38},"end":{"line":43,"column":53}},"17":{"start":{"line":45,"column":2},"end":{"line":55,"column":3}},"18":{"start":{"line":46,"column":3},"end":{"line":53,"column":4}},"19":{"start":{"line":47,"column":4},"end":{"line":47,"column":15}},"20":{"start":{"line":48,"column":4},"end":{"line":51,"column":5}},"21":{"start":{"line":49,"column":5},"end":{"line":49,"column":30}},"22":{"start":{"line":50,"column":5},"end":{"line":50,"column":60}},"23":{"start":{"line":50,"column":42},"end":{"line":50,"column":57}},"24":{"start":{"line":52,"column":4},"end":{"line":52,"column":13}},"25":{"start":{"line":54,"column":3},"end":{"line":54,"column":55}},"26":{"start":{"line":54,"column":38},"end":{"line":54,"column":53}},"27":{"start":{"line":56,"column":2},"end":{"line":62,"column":3}},"28":{"start":{"line":57,"column":3},"end":{"line":57,"column":14}},"29":{"start":{"line":58,"column":3},"end":{"line":60,"column":4}},"30":{"start":{"line":59,"column":4},"end":{"line":59,"column":23}},"31":{"start":{"line":61,"column":3},"end":{"line":61,"column":12}},"32":{"start":{"line":63,"column":2},"end":{"line":75,"column":1}},"33":{"start":{"line":64,"column":4},"end":{"line":74,"column":3}},"34":{"start":{"line":65,"column":5},"end":{"line":65,"column":16}},"35":{"start":{"line":66,"column":5},"end":{"line":70,"column":5}},"36":{"start":{"line":67,"column":6},"end":{"line":68,"column":26}},"37":{"start":{"line":69,"column":6},"end":{"line":69,"column":29}},"38":{"start":{"line":71,"column":4},"end":{"line":71,"column":13}},"39":{"start":{"line":73,"column":4},"end":{"line":73,"column":51}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":3},"end":{"line":32,"column":3}},{"start":{"line":32,"column":3},"end":{"line":32,"column":3}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":3},"end":{"line":35,"column":3}},{"start":{"line":35,"column":3},"end":{"line":35,"column":3}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":3},"end":{"line":46,"column":3}},{"start":{"line":46,"column":3},"end":{"line":46,"column":3}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"8":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":19}},{"start":{"line":56,"column":23},"end":{"line":56,"column":36}}]},"9":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"10":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":20}},{"start":{"line":63,"column":24},"end":{"line":63,"column":38}}]},"11":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"12":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":9},"end":{"line":64,"column":36}},{"start":{"line":64,"column":42},"end":{"line":64,"column":69}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method minus"," * @summary Subtraction X - Y"," * @description Subtraction X - Y. X and Y must have the same dimension unless one is a number"," * "," * @param  {number|array|matrix} x number or array of values"," * @param  {number|array|matrix} y number or array of values"," * @return {number|array|matrix}   "," *"," * @example"," * ubique.minus(5,6);"," * // -1"," * "," * ubique.minus([5,6,4],[3,-1,0]);"," * // [ 2, 7, 4 ]"," * "," * ubique.minus([5,6,4],10);"," * // [-5, -4, -6]"," * "," * ubique.minus([[5,6,5],[7,8,-1]],[[-1,3,-1],[4,5,9]]);"," * // [[ 6, 3, 6 ], [ 3, 3, -10 ]]"," */"," $u.minus = function(x,y) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isnumber(x)) {"," \t\tif ($u.isnumber(y)) {"," \t\t\treturn x - y;"," \t\t}"," \t\tif ($u.ismatrix(y)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(y);i++) {"," \t\t\t\tvar vec = $u.getrow(y,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return x - val;});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(y,function(val){return x - val;})"," \t}"," \tif ($u.isnumber(y)) {"," \t\tif ($u.ismatrix(x)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(x);i++) {"," \t\t\t\tvar vec = $u.getrow(x,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return val - y;});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(x,function(val){return val - y;})"," \t}"," \tif ($u.isarray(x) && $u.isarray(y)) {"," \t\tvar v = [];"," \t\tfor (var i = 0;i < x.length;i++) {"," \t\t\tv[i] = x[i] - y[i];"," \t\t}"," \t\treturn v;"," \t}"," \tif ($u.ismatrix(x) && $u.ismatrix(y)) {","    if (($u.nrows(x) === $u.nrows(y)) && ($u.ncols(x) === $u.ncols(y))) {","     var v = [];","     for (var i = 0;i < $u.nrows(x);i++) {","      var vx = $u.getrow(x,i),","      vy = $u.getrow(y,i);","      v[i] = $u.minus(vx,vy);","    }","    return v;","  } else {","    throw new Error('input dimensions must agree');","  }","}","}","","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"43":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"54":0,"56":0,"57":0,"58":0,"59":0,"61":0,"63":0,"64":0,"65":0,"66":0,"67":0,"69":0,"71":0,"73":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/mldivide.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/mldivide.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":16},"end":{"line":28,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":48,"column":1}},"2":{"start":{"line":28,"column":2},"end":{"line":46,"column":3}},"3":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"4":{"start":{"line":30,"column":6},"end":{"line":30,"column":52}},"5":{"start":{"line":32,"column":4},"end":{"line":45,"column":5}},"6":{"start":{"line":33,"column":6},"end":{"line":33,"column":17}},"7":{"start":{"line":35,"column":4},"end":{"line":45,"column":5}},"8":{"start":{"line":36,"column":6},"end":{"line":36,"column":29}},"9":{"start":{"line":38,"column":4},"end":{"line":45,"column":5}},"10":{"start":{"line":39,"column":6},"end":{"line":41,"column":7}},"11":{"start":{"line":40,"column":8},"end":{"line":40,"column":54}},"12":{"start":{"line":42,"column":6},"end":{"line":42,"column":36}},"13":{"start":{"line":44,"column":6},"end":{"line":44,"column":55}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":22}},{"start":{"line":32,"column":26},"end":{"line":32,"column":40}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"5":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"6":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","  /**","  * @method mldivide","  * @summary Matrix division X \\ Y","  * @description Matrix division X \\ Y. If X is NxN and Y is NxM, then","  * returns a matrix NxM. Y is multiplied with the inverse of X. X must be square.","  * ","  * @param  {number|array|matrix} x number or array of values","  * @param  {number|array|matrix} y number or array of values","  * @return {number|array|matrix}   ","  *","  * @example ","  * ubique.mldivide(5,6);","  * // 1.2","  * ","  * ubique.mldivide([[9, 5],[6, 1]],[[3, 2],[5, 2]]);","  * // [ [ 1.047619, 0.380952 ], [ -1.285714, -0.285714 ] ]","  * ","  * ubique.mldivide(5,[[9, 5],[6, 1]]);","  * // [ [ 1.8, 1 ], [ 1.2, 0.2 ] ]","  * ","  * ubique.mldivide([[9, 5],[6, 1]],[[5,6,5],[7,8,-1]]);","  * // [ [ 1.428571, 1.619048, -0.47619 ],[ -1.571429, -1.714286, 1.857143 ] ]","  */","  $u.mldivide = function(y,x) {","    if (arguments.length < 2) {","      throw new Error('not enough input arguments');","    }","    if ($u.isnumber(x) && $u.isnumber(y)) {","      return x/y;","    } else","    if ($u.isnumber(y)) {","      return $u.ldivide(y,x);","    } else ","    if ($u.issquare(y)) {","      if ($u.ncols(y) !== $u.nrows(x)) {","        throw new Error('matrix dimensions mismatch');","      }","      return $u.mtimes($u.inv(y),x);","    } else {","      throw new Error('first argument must be square');","    }","  }","","}"],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"40":0,"42":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/mod.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/mod.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":10},"end":{"line":27,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":35,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":33,"column":2}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":36}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":35}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method mod"," * @summary Modulus after division"," * @description Modulus after division. Element-wise for matrix"," * "," * @param  {number|array|matrix} x dividend"," * @param  {number|array|matrix} y divisor"," * @return {number|array|matrix}   "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * var b = [[-1,3,-1],[4,5,9]];"," * "," * ubique.mod([13,-7],2.2);"," * // [ 2, 1.8 ]"," * "," * ubique.mod([13,-7],[5,6]);"," * // [ 3, 5 ]"," * "," * ubique.mod(a,b);"," * // [[ 0, 0, 0 ], [ 3, 3, 8 ]]"," */"," $u.mod = function(x,y) {"," \tif (arguments.length < 2) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tvar n = $u.floor($u.rdivide(x,y));"," \treturn $u.minus(x,$u.times(n,y));"," }","","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/mpower.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/mpower.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":13},"end":{"line":18,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":36,"column":1}},"2":{"start":{"line":18,"column":1},"end":{"line":35,"column":2}},"3":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"4":{"start":{"line":20,"column":3},"end":{"line":20,"column":49}},"5":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"6":{"start":{"line":23,"column":3},"end":{"line":23,"column":52}},"7":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"8":{"start":{"line":26,"column":3},"end":{"line":26,"column":54}},"9":{"start":{"line":28,"column":2},"end":{"line":29,"column":8}},"10":{"start":{"line":30,"column":2},"end":{"line":33,"column":3}},"11":{"start":{"line":31,"column":3},"end":{"line":31,"column":26}},"12":{"start":{"line":32,"column":3},"end":{"line":32,"column":7}},"13":{"start":{"line":34,"column":2},"end":{"line":34,"column":13}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method mpower"," * @summary Matrix power X ^ Y"," * @description Matrix power X ^ Y. X is the square input matrix and y is the scalar exponent."," * "," * @param  {matrix} x base "," * @param  {number} y exponent "," * @return {matrix}   "," *"," * @example"," * ubique.mpower([[1,1,-1],[1,-2,3],[2,3,1]],3);"," * // [ [ -2, 11, -11 ], [ 11, -35, 33 ], [ 22, 33, -2 ] ]"," */"," $u.mpower = function(x,y) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif (!$u.issquare(x)) {"," \t\tthrow new Error('input must be a square matrix');"," \t}"," \tif (!$u.isnumber(y)) {"," \t\tthrow new Error('exponent must be a scalar value');"," \t}"," \tvar out = x,"," \tt = 1;"," \twhile (t < y) {"," \t\tout = $u.mtimes(x,out);"," \t\tt++;"," \t}"," \treturn out;"," }","}"],"l":{"4":1,"18":1,"19":0,"20":0,"22":0,"23":0,"25":0,"26":0,"28":0,"30":0,"31":0,"32":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/mrdivide.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/mrdivide.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":16},"end":{"line":31,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":51,"column":1}},"2":{"start":{"line":31,"column":2},"end":{"line":49,"column":3}},"3":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"4":{"start":{"line":33,"column":6},"end":{"line":33,"column":52}},"5":{"start":{"line":35,"column":4},"end":{"line":48,"column":5}},"6":{"start":{"line":36,"column":6},"end":{"line":36,"column":17}},"7":{"start":{"line":38,"column":4},"end":{"line":48,"column":5}},"8":{"start":{"line":39,"column":6},"end":{"line":39,"column":29}},"9":{"start":{"line":41,"column":4},"end":{"line":48,"column":5}},"10":{"start":{"line":42,"column":6},"end":{"line":44,"column":7}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":6},"end":{"line":45,"column":36}},"13":{"start":{"line":47,"column":6},"end":{"line":47,"column":56}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":22}},{"start":{"line":35,"column":26},"end":{"line":35,"column":40}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","  /**","  * @method mrdivide","  * @summary Matrix division X / Y","  * @description Matrix division X / Y. If X is MxN and Y is NxN, then","  * it returns a matrix MxN. X is multiplied with the inverse of Y. Y must be square.","  * ","  * @param  {number|array|matrix} x number or array of values","  * @param  {number|array|matrix} y number or array of values","  * @return {number|array|matrix}   ","  *","  * @example","  * ubique.mrdivide(5,6);","  * // 0.833333","  * ","  * ubique.mrdivide([5,6,3],6);","  * // [ 0.833333, 1, 0.5 ]","  * ","  * ubique.mrdivide([[9, 5], [6, 1]],5);","  * // [ [ 1.8, 1 ], [ 1.2, 0.2 ] ]","  * ","  * ubique.mrdivide([[9, 5], [6, 1]],[[3, 2], [5, 2]]);","  * // [ [ 1.75, 0.75 ], [ -1.75, 2.25 ] ]","  * ","  * ubique.mrdivide([[5,6,5],[7,8,-1]],[[1,1,-1],[1,-2,3],[2,3,1]]);","  * // [ [ -0.769231, 0.538462, 2.615385 ],[ 3.384615, 0.230769, 1.692308 ] ]","  */","  $u.mrdivide = function(x,y) {","    if (arguments.length < 2) {","      throw new Error('not enough input arguments');","    }","    if ($u.isnumber(x) && $u.isnumber(y)) {","      return x/y;","    } else","    if ($u.isnumber(y)) {","      return $u.rdivide(x,y);","    } else ","    if ($u.issquare(y)) {","      if ($u.ncols(x) !== $u.nrows(y)) {","        throw new Error('matrix dimensions mismatch');","      }","      return $u.mtimes(x,$u.inv(y));","    } else {","      throw new Error('second argument must be square');","    }","  }","","}"],"l":{"4":1,"31":1,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"43":0,"45":0,"47":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/mtimes.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/mtimes.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":52,"column":1}},"2":{"start":{"line":30,"column":1},"end":{"line":51,"column":2}},"3":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":32,"column":3},"end":{"line":32,"column":49}},"5":{"start":{"line":34,"column":2},"end":{"line":49,"column":3}},"6":{"start":{"line":35,"column":3},"end":{"line":35,"column":26}},"7":{"start":{"line":36,"column":3},"end":{"line":36,"column":26}},"8":{"start":{"line":37,"column":3},"end":{"line":39,"column":4}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":48}},"10":{"start":{"line":40,"column":3},"end":{"line":40,"column":42}},"11":{"start":{"line":41,"column":3},"end":{"line":47,"column":4}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":28}},"13":{"start":{"line":43,"column":4},"end":{"line":46,"column":5}},"14":{"start":{"line":44,"column":5},"end":{"line":44,"column":29}},"15":{"start":{"line":45,"column":5},"end":{"line":45,"column":43}},"16":{"start":{"line":48,"column":3},"end":{"line":48,"column":14}},"17":{"start":{"line":50,"column":2},"end":{"line":50,"column":23}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":21}},{"start":{"line":34,"column":25},"end":{"line":34,"column":40}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":3},"end":{"line":37,"column":3}},{"start":{"line":37,"column":3},"end":{"line":37,"column":3}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method mtimes"," * @summary Matrix multiplication X * Y"," * @description  Matrix multiplication X * Y. If X is MxP and Y is PxN, returns a matrix MxN"," * "," * @param  {number|array|matrix} x number or array of values"," * @param  {number|array|matrix} y number or array of values"," * @return {number|array|matrix}   "," *"," * @example"," * ubique.mtimes(5,6);"," * // 30"," * "," * ubique.mtimes([5,6,3],3);"," * // [ 15, 18, 9 ]"," * "," * ubique.mtimes([[5,6,5],[7,8,-1]],3);"," * // [ [ 15, 18, 15 ], [ 21, 24, -3 ] ]"," * "," * ubique.mtimes([[5,6,3]],[[3],[4],[5]]);"," * // [ [ 54 ] ]"," * "," * ubique.mtimes([[5,6,5],[7,8,-1]],[[5],[6],[3]]);"," * // [ [ 76 ], [ 80 ] ]"," */"," $u.mtimes = function(x,y) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif (!$u.isnumber(x) && !$u.isnumber(y)) {"," \t\tvar xsize = $u.size(x);"," \t\tvar ysize = $u.size(y);"," \t\tif (xsize[1] !== ysize[0]) {"," \t\t\tthrow new Error('inner dimension mismatch');"," \t\t}"," \t\tvar out = $u.matrix(xsize[0],ysize[1]);"," \t\tfor (var i = 0;i < xsize[0];i++) {"," \t\t\tvar xx = $u.getrow(x,i);"," \t\t\tfor (var j = 0;j < ysize[1];j++) {"," \t\t\t\tvar yy = $u.getcol(y,j);"," \t\t\t\tout[i][j] = $u.squeeze($u.dot(xx,yy));"," \t\t\t}"," \t\t}"," \t\treturn out;"," \t}"," \treturn $u.times(x,y);"," }","}",""],"l":{"4":1,"30":1,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"48":0,"50":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/ne.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/ne.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":23}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":12},"end":{"line":40,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":46,"column":1}},"2":{"start":{"line":36,"column":1},"end":{"line":45,"column":1}},"3":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"4":{"start":{"line":38,"column":4},"end":{"line":38,"column":50}},"5":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"6":{"start":{"line":41,"column":4},"end":{"line":41,"column":20}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":24}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":28}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Relational Operations"," */"," module.exports = function($u) {","/**"," * @method ne"," * @summary Inequality X !== Y"," * @description Inequality X !== Y"," *"," * @param  {number|array|matrix} x left array"," * @param  {number|array|matrix} y right array"," * @return {number|array|matrix}"," *"," * @example"," * ubique.ne(5,5);"," * // false"," * "," * ubique.ne(5,[5,6,3]);"," * // [ false, true, true ]"," * "," * ubique.ne(5,[[5,6],[3,5]]);"," * // [ [ false, true ], [ true, false ] ]"," * "," * ubique.ne([5,6,3],5);"," * // [ false, true, true ]"," * "," * ubique.ne([[5,6],[3,5]],5);"," * // [ [ false, true ], [ true, false ] ]"," * "," * ubique.ne([5,6,3],[2,6,0]);"," * // [ true, false, true ]"," * "," * ubique.ne([[5,6],[-1,2]],[[5,6],[3,5]]);"," * // [ [ false, false ], [ true, true ] ]"," */"," $u.ne = function(x,y) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  var _ne = function(el) { ","    return el !== 0;","  }","  var d = $u.minus(x,y);","  return $u.arrayfun(d,_ne);","}","}"],"l":{"4":1,"36":1,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/plus.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/plus.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":11},"end":{"line":30,"column":25}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":28},"end":{"line":42,"column":41}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":24},"end":{"line":46,"column":37}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":28},"end":{"line":53,"column":41}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":24},"end":{"line":57,"column":37}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":81,"column":1}},"2":{"start":{"line":30,"column":1},"end":{"line":79,"column":1}},"3":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":32,"column":3},"end":{"line":32,"column":49}},"5":{"start":{"line":34,"column":2},"end":{"line":47,"column":3}},"6":{"start":{"line":35,"column":3},"end":{"line":37,"column":4}},"7":{"start":{"line":36,"column":4},"end":{"line":36,"column":17}},"8":{"start":{"line":38,"column":3},"end":{"line":45,"column":4}},"9":{"start":{"line":39,"column":4},"end":{"line":39,"column":15}},"10":{"start":{"line":40,"column":4},"end":{"line":43,"column":5}},"11":{"start":{"line":41,"column":5},"end":{"line":41,"column":30}},"12":{"start":{"line":42,"column":5},"end":{"line":42,"column":60}},"13":{"start":{"line":42,"column":42},"end":{"line":42,"column":57}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":13}},"15":{"start":{"line":46,"column":3},"end":{"line":46,"column":55}},"16":{"start":{"line":46,"column":38},"end":{"line":46,"column":53}},"17":{"start":{"line":48,"column":2},"end":{"line":58,"column":3}},"18":{"start":{"line":49,"column":3},"end":{"line":56,"column":4}},"19":{"start":{"line":50,"column":4},"end":{"line":50,"column":15}},"20":{"start":{"line":51,"column":4},"end":{"line":54,"column":5}},"21":{"start":{"line":52,"column":5},"end":{"line":52,"column":30}},"22":{"start":{"line":53,"column":5},"end":{"line":53,"column":60}},"23":{"start":{"line":53,"column":42},"end":{"line":53,"column":57}},"24":{"start":{"line":55,"column":4},"end":{"line":55,"column":13}},"25":{"start":{"line":57,"column":3},"end":{"line":57,"column":55}},"26":{"start":{"line":57,"column":38},"end":{"line":57,"column":53}},"27":{"start":{"line":59,"column":2},"end":{"line":65,"column":3}},"28":{"start":{"line":60,"column":3},"end":{"line":60,"column":14}},"29":{"start":{"line":61,"column":3},"end":{"line":63,"column":4}},"30":{"start":{"line":62,"column":4},"end":{"line":62,"column":23}},"31":{"start":{"line":64,"column":3},"end":{"line":64,"column":12}},"32":{"start":{"line":66,"column":2},"end":{"line":78,"column":3}},"33":{"start":{"line":67,"column":5},"end":{"line":77,"column":5}},"34":{"start":{"line":68,"column":7},"end":{"line":68,"column":18}},"35":{"start":{"line":69,"column":7},"end":{"line":73,"column":7}},"36":{"start":{"line":70,"column":8},"end":{"line":71,"column":28}},"37":{"start":{"line":72,"column":8},"end":{"line":72,"column":30}},"38":{"start":{"line":74,"column":6},"end":{"line":74,"column":15}},"39":{"start":{"line":76,"column":6},"end":{"line":76,"column":53}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":3},"end":{"line":35,"column":3}},{"start":{"line":35,"column":3},"end":{"line":35,"column":3}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":3},"end":{"line":38,"column":3}},{"start":{"line":38,"column":3},"end":{"line":38,"column":3}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":3},"end":{"line":49,"column":3}},{"start":{"line":49,"column":3},"end":{"line":49,"column":3}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"8":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":19}},{"start":{"line":59,"column":23},"end":{"line":59,"column":36}}]},"9":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"10":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":20}},{"start":{"line":66,"column":24},"end":{"line":66,"column":38}}]},"11":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":5},"end":{"line":67,"column":5}},{"start":{"line":67,"column":5},"end":{"line":67,"column":5}}]},"12":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":10},"end":{"line":67,"column":37}},{"start":{"line":67,"column":43},"end":{"line":67,"column":70}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method plus"," * @summary Addition X + Y"," * @description Addition X + Y"," * "," * @param  {number|array|matrix} x number or array of values"," * @param  {number|array|matrix} y number or array of values"," * @return {number|array|matrix}   "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * var b = [[-1,3,-1],[4,5,9]];"," * "," * ubique.plus(5,6);"," * // 11"," * "," * ubique.plus([5,6,4],[3,-1,0]);"," * // [ 8, 5, 4 ]"," * "," * ubique.plus([5,6,4],10);"," * // [ 15, 16, 14 ]"," * "," * ubique.plus(a,b);"," * // [[ 4, 9, 4 ], [ 11, 13, 8 ]]"," */"," $u.plus = function(x,y) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isnumber(x)) {"," \t\tif ($u.isnumber(y)) {"," \t\t\treturn x + y;"," \t\t}"," \t\tif ($u.ismatrix(y)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(y);i++) {"," \t\t\t\tvar vec = $u.getrow(y,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return x + val;});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(y,function(val){return x + val;})"," \t}"," \tif ($u.isnumber(y)) {"," \t\tif ($u.ismatrix(x)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(x);i++) {"," \t\t\t\tvar vec = $u.getrow(x,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return val + y;});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(x,function(val){return val + y;})"," \t}"," \tif ($u.isarray(x) && $u.isarray(y)) {"," \t\tvar v = [];"," \t\tfor (var i = 0;i < x.length;i++) {"," \t\t\tv[i] = x[i] + y[i];"," \t\t}"," \t\treturn v;"," \t}"," \tif ($u.ismatrix(x) && $u.ismatrix(y)) {","     if (($u.nrows(x) === $u.nrows(y)) && ($u.ncols(x) === $u.ncols(y))) {","       var v = [];","       for (var i = 0;i < $u.nrows(x);i++) {","        var vx = $u.getrow(x,i),","        vy = $u.getrow(y,i);","        v[i] = $u.plus(vx,vy);","      }","      return v;","    } else {","      throw new Error('input dimensions must agree');","    }","  }","}","","}"],"l":{"4":1,"30":1,"31":0,"32":0,"34":0,"35":0,"36":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"55":0,"57":0,"59":0,"60":0,"61":0,"62":0,"64":0,"66":0,"67":0,"68":0,"69":0,"70":0,"72":0,"74":0,"76":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/power.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/power.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":12},"end":{"line":41,"column":26}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":28},"end":{"line":53,"column":41}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":24},"end":{"line":57,"column":37}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":28},"end":{"line":64,"column":41}}},"6":{"name":"(anonymous_6)","line":68,"loc":{"start":{"line":68,"column":24},"end":{"line":68,"column":37}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":88,"column":1}},"2":{"start":{"line":41,"column":1},"end":{"line":86,"column":2}},"3":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"4":{"start":{"line":43,"column":3},"end":{"line":43,"column":49}},"5":{"start":{"line":45,"column":2},"end":{"line":58,"column":3}},"6":{"start":{"line":46,"column":3},"end":{"line":48,"column":4}},"7":{"start":{"line":47,"column":4},"end":{"line":47,"column":25}},"8":{"start":{"line":49,"column":3},"end":{"line":56,"column":4}},"9":{"start":{"line":50,"column":4},"end":{"line":50,"column":15}},"10":{"start":{"line":51,"column":4},"end":{"line":54,"column":5}},"11":{"start":{"line":52,"column":5},"end":{"line":52,"column":30}},"12":{"start":{"line":53,"column":5},"end":{"line":53,"column":68}},"13":{"start":{"line":53,"column":42},"end":{"line":53,"column":65}},"14":{"start":{"line":55,"column":4},"end":{"line":55,"column":13}},"15":{"start":{"line":57,"column":3},"end":{"line":57,"column":63}},"16":{"start":{"line":57,"column":38},"end":{"line":57,"column":61}},"17":{"start":{"line":59,"column":2},"end":{"line":69,"column":3}},"18":{"start":{"line":60,"column":3},"end":{"line":67,"column":4}},"19":{"start":{"line":61,"column":4},"end":{"line":61,"column":15}},"20":{"start":{"line":62,"column":4},"end":{"line":65,"column":5}},"21":{"start":{"line":63,"column":5},"end":{"line":63,"column":30}},"22":{"start":{"line":64,"column":5},"end":{"line":64,"column":68}},"23":{"start":{"line":64,"column":42},"end":{"line":64,"column":65}},"24":{"start":{"line":66,"column":4},"end":{"line":66,"column":13}},"25":{"start":{"line":68,"column":3},"end":{"line":68,"column":63}},"26":{"start":{"line":68,"column":38},"end":{"line":68,"column":61}},"27":{"start":{"line":70,"column":2},"end":{"line":76,"column":3}},"28":{"start":{"line":71,"column":3},"end":{"line":71,"column":14}},"29":{"start":{"line":72,"column":3},"end":{"line":74,"column":4}},"30":{"start":{"line":73,"column":4},"end":{"line":73,"column":31}},"31":{"start":{"line":75,"column":3},"end":{"line":75,"column":12}},"32":{"start":{"line":77,"column":2},"end":{"line":85,"column":3}},"33":{"start":{"line":78,"column":3},"end":{"line":78,"column":14}},"34":{"start":{"line":79,"column":3},"end":{"line":83,"column":4}},"35":{"start":{"line":80,"column":4},"end":{"line":81,"column":24}},"36":{"start":{"line":82,"column":4},"end":{"line":82,"column":27}},"37":{"start":{"line":84,"column":3},"end":{"line":84,"column":12}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":3},"end":{"line":46,"column":3}},{"start":{"line":46,"column":3},"end":{"line":46,"column":3}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":3},"end":{"line":49,"column":3}},{"start":{"line":49,"column":3},"end":{"line":49,"column":3}}]},"5":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":3},"end":{"line":60,"column":3}},{"start":{"line":60,"column":3},"end":{"line":60,"column":3}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":19}},{"start":{"line":70,"column":23},"end":{"line":70,"column":36}}]},"9":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"10":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":20}},{"start":{"line":77,"column":24},"end":{"line":77,"column":38}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method power"," * @summary Element-wise power X. ^ Y"," * @description Element-wise power X. ^ Y"," * "," * @param  {number|array|matrix} x number or array of values"," * @param  {number|array|matrix} y number or array of values"," * @return {number|array|matrix}   "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * var b = [[-1,3,-1],[4,5,9]];"," * var c = [5,6,3];"," * var d = [0.5,-3,2.3];"," * "," * ubique.power(5,4);"," * // 625"," * "," * ubique.power(c,5);"," * // [ 3125, 7776, 243 ]"," * "," * ubique.power(5,c);"," * // [ 3125, 15625, 125 ]"," * "," * ubique.power(a,5);"," * // [[ 3125, 7776, 3125 ], [ 16807, 32768, -1 ]]"," * "," * ubique.power(5,a);"," * // [[ 3125, 15625, 3125 ], [ 78125, 3.90625e+5, 0.2 ]]"," * "," * ubique.power(c,d);"," * // [ 2.23607, 0.00462963, 12.5135 ]"," * "," * ubique.power(a,b);"," * // [[ 0.2, 216, 0.2 ], [ 2401, 32768, -1 ]]"," */"," $u.power = function(x,y) {"," \tif (arguments.length < 2) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isnumber(x)) {"," \t\tif ($u.isnumber(y)) {"," \t\t\treturn Math.pow(x,y);"," \t\t}"," \t\tif ($u.ismatrix(y)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(y);i++) {"," \t\t\t\tvar vec = $u.getrow(y,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return Math.pow(x,val);});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(y,function(val){return Math.pow(x,val);})"," \t}"," \tif ($u.isnumber(y)) {"," \t\tif ($u.ismatrix(x)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(x);i++) {"," \t\t\t\tvar vec = $u.getrow(x,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return Math.pow(val,y);});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(x,function(val){return Math.pow(val,y);})"," \t}"," \tif ($u.isarray(x) && $u.isarray(y)) {"," \t\tvar v = [];"," \t\tfor (var i = 0;i < x.length;i++) {"," \t\t\tv[i] = Math.pow(x[i],y[i]);"," \t\t}"," \t\treturn v;"," \t}"," \tif ($u.ismatrix(x) && $u.ismatrix(y)) {"," \t\tvar v = [];"," \t\tfor (var i = 0;i < $u.nrows(x);i++) {"," \t\t\tvar vx = $u.getrow(x,i),"," \t\t\tvy = $u.getrow(y,i);"," \t\t\tv[i] = $u.power(vx,vy);"," \t\t}"," \t\treturn v;"," \t}"," }","","}"],"l":{"4":1,"41":1,"42":0,"43":0,"45":0,"46":0,"47":0,"49":0,"50":0,"51":0,"52":0,"53":0,"55":0,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"66":0,"68":0,"70":0,"71":0,"72":0,"73":0,"75":0,"77":0,"78":0,"79":0,"80":0,"82":0,"84":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/prod.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/prod.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":27}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":38,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":37,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"6":{"start":{"line":29,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":17}},"8":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"9":{"start":{"line":32,"column":6},"end":{"line":32,"column":19}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":16}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":35}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":22},"end":{"line":28,"column":23}},{"start":{"line":28,"column":26},"end":{"line":28,"column":29}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method prod"," * @summary Product of array elements"," * @description Product of array elements"," * "," * @param  {array|matrix} x array of values"," * @param  {number} dim dimension, 1: column 0: row (def: 1)"," * @return {number|array}   "," *"," * @example"," * ubique.prod([5,6,3]);"," * // 90"," * "," * ubique.prod([[5,6,5],[7,8,-1]],0);"," * // [ [ 150 ], [ -56 ] ]"," * "," * ubique.prod([[5,6,5],[7,8,-1]],1);"," * // [ [ 35, 48, -5 ] ]"," */"," $u.prod = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  dim = dim == null ? 1 : dim;","  var _prod = function(a) {","    var prod = 1;","    for (var i = 0;i < a.length;i++) {","      prod *= a[i];","    }","    return prod;","  }","  return $u.vectorfun(dim,x,_prod);","}","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/rdivide.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/rdivide.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":14},"end":{"line":39,"column":28}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":28},"end":{"line":51,"column":41}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":24},"end":{"line":55,"column":37}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":28},"end":{"line":62,"column":41}}},"6":{"name":"(anonymous_6)","line":66,"loc":{"start":{"line":66,"column":24},"end":{"line":66,"column":37}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":85,"column":1}},"2":{"start":{"line":39,"column":1},"end":{"line":84,"column":2}},"3":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"4":{"start":{"line":41,"column":3},"end":{"line":41,"column":49}},"5":{"start":{"line":43,"column":2},"end":{"line":56,"column":3}},"6":{"start":{"line":44,"column":3},"end":{"line":46,"column":4}},"7":{"start":{"line":45,"column":4},"end":{"line":45,"column":17}},"8":{"start":{"line":47,"column":3},"end":{"line":54,"column":4}},"9":{"start":{"line":48,"column":4},"end":{"line":48,"column":15}},"10":{"start":{"line":49,"column":4},"end":{"line":52,"column":5}},"11":{"start":{"line":50,"column":5},"end":{"line":50,"column":30}},"12":{"start":{"line":51,"column":5},"end":{"line":51,"column":60}},"13":{"start":{"line":51,"column":42},"end":{"line":51,"column":57}},"14":{"start":{"line":53,"column":4},"end":{"line":53,"column":13}},"15":{"start":{"line":55,"column":3},"end":{"line":55,"column":55}},"16":{"start":{"line":55,"column":38},"end":{"line":55,"column":53}},"17":{"start":{"line":57,"column":2},"end":{"line":67,"column":3}},"18":{"start":{"line":58,"column":3},"end":{"line":65,"column":4}},"19":{"start":{"line":59,"column":4},"end":{"line":59,"column":15}},"20":{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},"21":{"start":{"line":61,"column":5},"end":{"line":61,"column":30}},"22":{"start":{"line":62,"column":5},"end":{"line":62,"column":60}},"23":{"start":{"line":62,"column":42},"end":{"line":62,"column":57}},"24":{"start":{"line":64,"column":4},"end":{"line":64,"column":13}},"25":{"start":{"line":66,"column":3},"end":{"line":66,"column":55}},"26":{"start":{"line":66,"column":38},"end":{"line":66,"column":53}},"27":{"start":{"line":68,"column":2},"end":{"line":74,"column":3}},"28":{"start":{"line":69,"column":3},"end":{"line":69,"column":14}},"29":{"start":{"line":70,"column":3},"end":{"line":72,"column":4}},"30":{"start":{"line":71,"column":4},"end":{"line":71,"column":23}},"31":{"start":{"line":73,"column":3},"end":{"line":73,"column":12}},"32":{"start":{"line":75,"column":2},"end":{"line":83,"column":3}},"33":{"start":{"line":76,"column":3},"end":{"line":76,"column":14}},"34":{"start":{"line":77,"column":3},"end":{"line":81,"column":4}},"35":{"start":{"line":78,"column":4},"end":{"line":79,"column":24}},"36":{"start":{"line":80,"column":4},"end":{"line":80,"column":29}},"37":{"start":{"line":82,"column":3},"end":{"line":82,"column":12}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":3},"end":{"line":44,"column":3}},{"start":{"line":44,"column":3},"end":{"line":44,"column":3}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":3},"end":{"line":47,"column":3}},{"start":{"line":47,"column":3},"end":{"line":47,"column":3}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":3},"end":{"line":58,"column":3}},{"start":{"line":58,"column":3},"end":{"line":58,"column":3}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"8":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":19}},{"start":{"line":68,"column":23},"end":{"line":68,"column":36}}]},"9":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"10":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":20}},{"start":{"line":75,"column":24},"end":{"line":75,"column":38}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method rdivide"," * @summary Right array division X. / Y"," * @description Divides each element of X by the corresponding element of Y. Inputs X and Y"," * must have the same size"," * "," * @param  {number|array|matrix} x number or array of values"," * @param  {number|array|matrix} y number or array of values"," * @return {number|array|matrix}   "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * var b = [-1,-2,-3];"," * var e = [[9, 5], [6, 1]];"," * var f = [[3, 2], [5, 2]];"," * "," * ubique.rdivide(5,6);"," * // 0.833333"," * "," * ubique.rdivide(a,3);"," * // [[ 1.66667, 2, 1.66667 ], [ 2.33333, 2.66667, -0.333333 ]]"," * "," * ubique.rdivide(3,[-1,-2,-3]);"," * // [ -3, -1.5, -1 ]"," * "," * ubique.rdivide([5,6,7],[-1,-2,-3]);"," * // [ -5, -3, -2.33333 ]"," * "," * ubique.rdivide(e,f);"," * // [[ 3, 2.5 ], [ 1.2, 0.5 ]]"," * "," * ubique.rdivide(e,3);"," * // [[ 3, 1.66667 ], [ 2, 0.333333 ]]"," */"," $u.rdivide = function(x,y) {"," \tif (arguments.length < 2) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isnumber(x)) {"," \t\tif ($u.isnumber(y)) {"," \t\t\treturn x / y;"," \t\t}"," \t\tif ($u.ismatrix(y)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(y);i++) {"," \t\t\t\tvar vec = $u.getrow(y,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return x / val;});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(y,function(val){return x / val;})"," \t}"," \tif ($u.isnumber(y)) {"," \t\tif ($u.ismatrix(x)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(x);i++) {"," \t\t\t\tvar vec = $u.getrow(x,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return val / y;});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(x,function(val){return val / y;})"," \t}"," \tif ($u.isarray(x) && $u.isarray(y)) {"," \t\tvar v = [];"," \t\tfor (var i = 0;i < x.length;i++) {"," \t\t\tv[i] = x[i] / y[i];"," \t\t}"," \t\treturn v;"," \t}"," \tif ($u.ismatrix(x) && $u.ismatrix(y)) {"," \t\tvar v = [];"," \t\tfor (var i = 0;i < $u.nrows(x);i++) {"," \t\t\tvar vx = $u.getrow(x,i),"," \t\t\tvy = $u.getrow(y,i);"," \t\t\tv[i] = $u.rdivide(vx,vy);"," \t\t}"," \t\treturn v;"," \t}"," }","}"],"l":{"4":1,"39":1,"40":0,"41":0,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"55":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"64":0,"66":0,"68":0,"69":0,"70":0,"71":0,"73":0,"75":0,"76":0,"77":0,"78":0,"80":0,"82":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/rem.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/rem.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":10},"end":{"line":24,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":32,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":30,"column":2}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":34}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":35}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method rem"," * @summary Remainder after division"," * @description Remainder after division. Element-wise for matrix"," * "," * @param  {number|array|matrix} x dividend"," * @param  {number|array|matrix} y divisor"," * @return {number|array|matrix}   "," *"," * @example"," * ubique.rem([13,-7],2.2);"," * // [ 2, -0.4 ]"," * "," * ubique.rem([13,-7],[5,6]);"," * // [ 3, -1 ]"," * "," * ubique.rem([[5,6,5],[7,8,-1]],[[-1,3,-1],[4,5,9]]);"," * // [ [ 0, 0, 0 ], [ 3, 3, -1 ] ]"," */"," $u.rem = function(x,y) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tvar n = $u.fix($u.rdivide(x,y));"," \treturn $u.minus(x,$u.times(n,y));"," }","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/round.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/round.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":26}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":15},"end":{"line":33,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":39,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":37,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":24}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":25}},"7":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":33}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":31}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":18},"end":{"line":31,"column":19}},{"start":{"line":31,"column":22},"end":{"line":31,"column":23}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {"," \t/**"," * @method round"," * @summary Round to nearest integer"," * @description Round to nearest integer. Element-wise for matrix"," * "," * @param  {number|array|matrix} x values"," * @param  {number} n number of decimal (def: 0)"," * @return {number|array|matrix}   "," *"," * @example"," * ubique.round(Math.PI,12);"," * // 3.14159265359"," * "," * ubique.round([-1.4543,4.5234],2);"," * // [ -1.45, 4.52 ]"," * "," * ubique.round([-1.9,-0.2,3.4,5.6,7.0]);"," * // [ -2, -0, 3, 6, 7 ]"," * "," * ubique.round([[1.45,-2.3],[1.1,-4.3]]);"," * // [ [ 1, -2 ], [ 1, -4 ] ]"," */"," $u.round = function(x,n) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tn = n == null ? 0 : n;"," \tvar p = Math.pow(10,n);"," \tvar _round = function(a) {","    return Math.round(a * p) / p;","  }","  return $u.arrayfun(x,_round);","}","","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/sum.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/sum.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":10},"end":{"line":24,"column":26}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":13},"end":{"line":29,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":39,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":37,"column":2}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"6":{"start":{"line":29,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":30,"column":3},"end":{"line":30,"column":15}},"8":{"start":{"line":31,"column":3},"end":{"line":33,"column":4}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":16}},"10":{"start":{"line":34,"column":3},"end":{"line":34,"column":14}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":34}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":22},"end":{"line":28,"column":23}},{"start":{"line":28,"column":26},"end":{"line":28,"column":29}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method sum"," * @summary Sum of array elements"," * @description Sum of array elements"," * "," * @param  {array|matrix} x array of values"," * @param  {number} dim dimension, 1: column 0: row (def: 0)"," * @return {number|array}   "," *"," * @example"," * ubique.sum([5,6,3]);"," * // 14"," * "," * ubique.sum([[5,6,5],[7,8,-1]],0);"," * // [ [ 16 ], [ 14 ] ]"," * "," * ubique.sum([[5,6,5],[7,8,-1]],1);"," * // [ [ 12, 14, 4 ] ]"," */"," $u.sum = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tdim = dim == null ? 0 : dim;"," \tvar _sum = function(a) {"," \t\tvar sum = 0;"," \t\tfor (var i = 0;i < a.length;i++) {"," \t\t\tsum += a[i];"," \t\t}"," \t\treturn sum;"," \t}"," \treturn $u.vectorfun(dim,x,_sum);"," }","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/times.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/times.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":26}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":28},"end":{"line":39,"column":41}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":24},"end":{"line":43,"column":37}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":28},"end":{"line":50,"column":41}}},"6":{"name":"(anonymous_6)","line":54,"loc":{"start":{"line":54,"column":24},"end":{"line":54,"column":37}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":76,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":74,"column":2}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":73,"column":3}},"6":{"start":{"line":32,"column":3},"end":{"line":34,"column":4}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":17}},"8":{"start":{"line":35,"column":3},"end":{"line":42,"column":4}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":15}},"10":{"start":{"line":37,"column":4},"end":{"line":40,"column":5}},"11":{"start":{"line":38,"column":5},"end":{"line":38,"column":30}},"12":{"start":{"line":39,"column":5},"end":{"line":39,"column":60}},"13":{"start":{"line":39,"column":42},"end":{"line":39,"column":57}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":13}},"15":{"start":{"line":43,"column":3},"end":{"line":43,"column":55}},"16":{"start":{"line":43,"column":38},"end":{"line":43,"column":53}},"17":{"start":{"line":45,"column":2},"end":{"line":73,"column":3}},"18":{"start":{"line":46,"column":3},"end":{"line":53,"column":4}},"19":{"start":{"line":47,"column":4},"end":{"line":47,"column":15}},"20":{"start":{"line":48,"column":4},"end":{"line":51,"column":5}},"21":{"start":{"line":49,"column":5},"end":{"line":49,"column":30}},"22":{"start":{"line":50,"column":5},"end":{"line":50,"column":60}},"23":{"start":{"line":50,"column":42},"end":{"line":50,"column":57}},"24":{"start":{"line":52,"column":4},"end":{"line":52,"column":13}},"25":{"start":{"line":54,"column":3},"end":{"line":54,"column":55}},"26":{"start":{"line":54,"column":38},"end":{"line":54,"column":53}},"27":{"start":{"line":56,"column":2},"end":{"line":73,"column":3}},"28":{"start":{"line":57,"column":3},"end":{"line":57,"column":14}},"29":{"start":{"line":58,"column":3},"end":{"line":60,"column":4}},"30":{"start":{"line":59,"column":4},"end":{"line":59,"column":23}},"31":{"start":{"line":61,"column":3},"end":{"line":61,"column":12}},"32":{"start":{"line":63,"column":2},"end":{"line":73,"column":3}},"33":{"start":{"line":64,"column":3},"end":{"line":64,"column":14}},"34":{"start":{"line":65,"column":3},"end":{"line":69,"column":4}},"35":{"start":{"line":66,"column":4},"end":{"line":67,"column":24}},"36":{"start":{"line":68,"column":4},"end":{"line":68,"column":27}},"37":{"start":{"line":70,"column":3},"end":{"line":70,"column":12}},"38":{"start":{"line":72,"column":3},"end":{"line":72,"column":46}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":3},"end":{"line":32,"column":3}},{"start":{"line":32,"column":3},"end":{"line":32,"column":3}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":3},"end":{"line":35,"column":3}},{"start":{"line":35,"column":3},"end":{"line":35,"column":3}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":3},"end":{"line":46,"column":3}},{"start":{"line":46,"column":3},"end":{"line":46,"column":3}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"8":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":19}},{"start":{"line":56,"column":23},"end":{"line":56,"column":36}}]},"9":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"10":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":20}},{"start":{"line":63,"column":24},"end":{"line":63,"column":38}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method times"," * @summary Array multiply X. * Y"," * @description  Element-by-element multiplication. X and Y must have the same dimensions unless ones is a number"," * "," * @param  {number|array|matrix} x number or array of values"," * @param  {number|array|matrix} y number or array of values"," * @return {number|array|matrix}   "," *"," * @example"," * ubique.times(5,6);"," * // 30"," * "," * ubique.times([5,6,4],[3,-1,0]);"," * // [ 15, -6, 0 ]"," * "," * ubique.times([5,6,4],10);"," * // [ 50, 60, 40 ]"," * "," * ubique.times([[5,6,5],[7,8,-1]],[[-1,3,-1],[4,5,9]]);"," * // [ [ -5, 18, -5 ], [ 28, 40, -9 ] ]"," */"," $u.times = function(x,y) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isnumber(x)) {"," \t\tif ($u.isnumber(y)) {"," \t\t\treturn x * y;"," \t\t}"," \t\tif ($u.ismatrix(y)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(y);i++) {"," \t\t\t\tvar vec = $u.getrow(y,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return x * val;});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(y,function(val){return x * val;})"," \t} else"," \tif ($u.isnumber(y)) {"," \t\tif ($u.ismatrix(x)) {"," \t\t\tvar v = [];"," \t\t\tfor (var i = 0;i < $u.nrows(x);i++) {"," \t\t\t\tvar vec = $u.getrow(x,i);"," \t\t\t\tv[i] = $u.arrayfun(vec,function(val){return val * y;});"," \t\t\t}"," \t\t\treturn v;"," \t\t}"," \t\treturn $u.arrayfun(x,function(val){return val * y;})"," \t} else"," \tif ($u.isarray(x) && $u.isarray(y)) {"," \t\tvar v = [];"," \t\tfor (var i = 0;i < x.length;i++) {"," \t\t\tv[i] = x[i] * y[i];"," \t\t}"," \t\treturn v;"," \t} else"," \tif ($u.ismatrix(x) && $u.ismatrix(y)) {"," \t\tvar v = [];"," \t\tfor (var i = 0;i < $u.nrows(x);i++) {"," \t\t\tvar vx = $u.getrow(x,i),"," \t\t\tvy = $u.getrow(y,i);"," \t\t\tv[i] = $u.times(vx,vy);"," \t\t}"," \t\treturn v;"," \t} else {"," \t\tthrow new Error('unknown input arguments');"," \t}"," }","","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"43":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"54":0,"56":0,"57":0,"58":0,"59":0,"61":0,"63":0,"64":0,"65":0,"66":0,"68":0,"70":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/uminus.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/uminus.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":13},"end":{"line":23,"column":25}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":23},"end":{"line":27,"column":34}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":30,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":28,"column":1}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":3},"end":{"line":25,"column":49}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":52}},"6":{"start":{"line":27,"column":35},"end":{"line":27,"column":49}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method uminus"," * @summary Unary minus -X"," * @description Unary minus -X"," * "," * @param  {number|array|matrix} x number or array of values"," * @return {number|array|matrix}"," *"," * @example"," * ubique.uminus(-5);"," * // 5"," * "," * ubique.uminus([5,6]);"," * // [ -5, -6 ]"," * "," * ubique.uminus([[5,6],[-1,-3]]);"," * // [ [ -5, -6 ], [ 1, 3 ] ]"," */"," $u.uminus = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  return $u.arrayfun(x,function(a){return -1 * a;});","}","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/unique.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elemop/unique.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":13},"end":{"line":28,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":55,"column":1}},"2":{"start":{"line":28,"column":1},"end":{"line":54,"column":1}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":50}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":33}},"6":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":22}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":31}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":30}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":30}},"11":{"start":{"line":40,"column":2},"end":{"line":45,"column":3}},"12":{"start":{"line":41,"column":4},"end":{"line":44,"column":5}},"13":{"start":{"line":42,"column":6},"end":{"line":42,"column":32}},"14":{"start":{"line":43,"column":6},"end":{"line":43,"column":32}},"15":{"start":{"line":46,"column":2},"end":{"line":53,"column":3}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":18}},"17":{"start":{"line":49,"column":2},"end":{"line":53,"column":3}},"18":{"start":{"line":50,"column":4},"end":{"line":50,"column":27}},"19":{"start":{"line":52,"column":4},"end":{"line":52,"column":57}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":24},"end":{"line":32,"column":25}},{"start":{"line":32,"column":28},"end":{"line":32,"column":32}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]}},"code":["/**"," * Set Operations"," */"," module.exports = function($u) {","/**"," * @method unique"," * @summary Unique values in array or matrix"," * @description Unique values in array or matrix. Use mergsort to sort values, returns"," * a matrix with 2 array, the unique values and the unique indexes."," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {boolean} flag flag 0: export unique values, 1: export values and indexes(def: 0)"," * @return {array|matrix}"," *"," * @example"," * ubique.unique([9,-3,2,-12,0,1,0,1,2,3,4,5]);"," * // [ -3, -3, 0, 1, 2, 3, 4, 5, 9 ]"," *"," * ubique.unique([9,-3,2,-12,0,1,0,1,2,3,4,5],1);"," * // [ [ -3, -3, 0, 1, 2, 3, 4, 5, 9 ], [ 3, 1, 4, 5, 2, 9, 10, 11, 0 ] ]"," * "," * ubique.unique([[5,4],[5,3],[6,3]]);"," * // [ 3, 4, 5, 6 ]"," *"," * ubique.unique([[5,4],[5,3],[6,3]],1);"," * // [ [ 3, 4, 5, 6 ], [ 3, 1, 0, 4 ] ]"," */"," $u.unique = function(x,flag) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  flag = flag == null ? 0 : flag;","  if ($u.ismatrix) {","    x = $u.flatten(x); // flatten by rows","  }","  var sorted = $u.mergesort(x);","  var uvalue = [sorted[0][1]];","  var uindex = [sorted[1][0]];","","  for (var i = 1;i < sorted[0].length; i++) {","    if (sorted[0][i] !== sorted[0][i - 1]) {","      uvalue.push(sorted[0][i]);","      uindex.push(sorted[1][i]);","    }","  }","  if (flag === 0) {","    return uvalue;","  } else","  if (flag === 1) {","    return [uvalue,uindex];","  } else {","    throw new Error('flag can be only 0 (default) or 1');","  }","}","}",""],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"46":0,"47":0,"49":0,"50":0,"52":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/abs.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/abs.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":22}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":34,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":32,"column":2}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":3},"end":{"line":25,"column":49}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":21}},"6":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"7":{"start":{"line":29,"column":3},"end":{"line":29,"column":17}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":28}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["/**"," * Complex Numbers"," */"," module.exports = function($u) {","/**"," * @method abs"," * @summary Absolute value"," * @description Absolute value"," * "," * @param  {number|array|matrix} x number or array of values"," * @return {number|array|matrix}   "," *"," * @example"," * ubique.abs(-0.5);"," * // -1"," * "," * ubique.abs([0.1,-0.5]);"," * // [0.1, 0.5]"," * "," * ubique.abs([[5,-2],[-3,4]]);"," * // [[5, 2], [3, 4]]"," */"," $u.abs = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tvar fun = Math.abs;"," \tif ($u.isnumber(x)) {"," \t\treturn fun(x);"," \t}"," \treturn $u.arrayfun(x,fun);"," }","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/erf.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/erf.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":22}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":27,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":25,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":24}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["/**"," * Special Functions"," */"," module.exports = function($u) {","/**"," * @method  erf"," * @summary Error function"," * @description Error function"," * "," * Approximation with maximal error 1.2x10^-7"," * erf(x) = 2/sqrt(pi) * integral from 0 to x of exp(-t^2) dt"," * "," * @param  {number} x real value"," * @return {number}"," * "," * @example"," * ubique.erf(0.5);"," * // 0.5204999077232426"," */"," $u.erf = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return 1 - $u.erfc(x);","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/erfc.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/erfc.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":11},"end":{"line":20,"column":23}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":40,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":36,"column":24}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":25}},"7":{"start":{"line":38,"column":14},"end":{"line":38,"column":24}},"8":{"start":{"line":39,"column":2},"end":{"line":39,"column":11}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]}},"code":["/**"," * Special Functions"," */"," module.exports = function($u) {","/**"," * @method erfc"," * @summary Complementary error function"," * @description Complementary error function"," *"," * erfc(x) = 2/sqrt(pi) * integral from x to inf of exp(-t^2) dt"," * erfc(x) = 1 - erf(x)"," * "," * @param  {number} x must be real"," * @return {number}"," * "," * @example"," * ubique.erfc(0.5);"," * // 0.47950009227675744"," */"," $u.erfc = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  var z = Math.abs(x),","  t = 1 / (0.5 * z + 1),","  a1 = t * 0.17087277 + -0.82215223,","  a2 = t * a1 + 1.48851587,","  a3 = t * a2 + -1.13520398,","  a4 = t * a3 + 0.27886807,","  a5 = t * a4 + -0.18628806,","  a6 = t * a5 + 0.09678418,","  a7 = t * a6 + 0.37409196,","  a8 = t * a7 + 1.00002368,","  a9 = t * a8,","  a10 = -z * z - 1.26551223 + a9,","  a = t * Math.exp(a10);","","  if (x < 0) {a = 2 - a;}","  return a;","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"38":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/erfcinv.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/erfcinv.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":36,"column":1}},"2":{"start":{"line":19,"column":1},"end":{"line":34,"column":1}},"3":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":54}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":35}},"6":{"start":{"line":23,"column":17},"end":{"line":23,"column":34}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":34}},"8":{"start":{"line":24,"column":17},"end":{"line":24,"column":33}},"9":{"start":{"line":25,"column":4},"end":{"line":27,"column":41}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":85}},"11":{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},"12":{"start":{"line":30,"column":8},"end":{"line":30,"column":28}},"13":{"start":{"line":31,"column":8},"end":{"line":31,"column":66}},"14":{"start":{"line":33,"column":4},"end":{"line":33,"column":28}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"4":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":19},"end":{"line":26,"column":20}},{"start":{"line":26,"column":23},"end":{"line":26,"column":28}}]},"5":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":21},"end":{"line":33,"column":22}},{"start":{"line":33,"column":25},"end":{"line":33,"column":27}}]}},"code":["/**"," * Special Functions"," */"," module.exports = function($u) {","/**"," * @method  erfcinv"," * @summary Inverse complementary error function"," * @description Inverse complementary error function"," * "," * It satisfies y = erfc(x) for 2 >= y >= 0 with -Inf <= x <= Inf"," * "," * @param  {number} y real value in range [2,0]"," * @return {number}   "," *"," * @example"," * ubique.erfcinv(1.5);"," * // -0.476936236121904"," */"," $u.erfcinv = function(y) {","    if (arguments.length === 0) {","        throw new Error('not enough input arguments');","    }","    if (y >= 2) {return -Infinity;}","    if (y <= 0) {return Infinity;}","    var z = 0,","    _y = (y < 1) ? y : 2 - y,","    t = Math.sqrt(-2 * Math.log(_y / 2));","    x = -0.70711 * ((2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t);","    for (var i = 0; i < 2; i++) {","        z = $u.erfc(x) - _y;","        x += z / (1.12837916709551257 * Math.exp(-x * x) - x * z);","    }","    return (y < 1) ? x : -x;","}","","}"],"l":{"4":1,"19":1,"20":0,"21":0,"23":0,"24":0,"25":0,"28":0,"29":0,"30":0,"31":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/erfinv.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/erfinv.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":13},"end":{"line":19,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":69,"column":1}},"2":{"start":{"line":19,"column":1},"end":{"line":67,"column":1}},"3":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":54}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":47}},"6":{"start":{"line":24,"column":4},"end":{"line":62,"column":5}},"7":{"start":{"line":24,"column":18},"end":{"line":24,"column":32}},"8":{"start":{"line":24,"column":32},"end":{"line":24,"column":41}},"9":{"start":{"line":25,"column":9},"end":{"line":62,"column":5}},"10":{"start":{"line":25,"column":22},"end":{"line":25,"column":35}},"11":{"start":{"line":25,"column":35},"end":{"line":25,"column":44}},"12":{"start":{"line":26,"column":9},"end":{"line":62,"column":5}},"13":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"14":{"start":{"line":28,"column":8},"end":{"line":28,"column":45}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":28}},"16":{"start":{"line":30,"column":8},"end":{"line":30,"column":15}},"17":{"start":{"line":31,"column":8},"end":{"line":31,"column":43}},"18":{"start":{"line":32,"column":8},"end":{"line":32,"column":35}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":35}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":43}},"21":{"start":{"line":35,"column":8},"end":{"line":35,"column":24}},"22":{"start":{"line":36,"column":8},"end":{"line":36,"column":22}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":15}},"24":{"start":{"line":38,"column":11},"end":{"line":62,"column":5}},"25":{"start":{"line":39,"column":8},"end":{"line":39,"column":18}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":44}},"27":{"start":{"line":41,"column":8},"end":{"line":41,"column":35}},"28":{"start":{"line":42,"column":8},"end":{"line":42,"column":34}},"29":{"start":{"line":43,"column":8},"end":{"line":43,"column":44}},"30":{"start":{"line":44,"column":8},"end":{"line":44,"column":35}},"31":{"start":{"line":45,"column":8},"end":{"line":45,"column":34}},"32":{"start":{"line":46,"column":8},"end":{"line":46,"column":35}},"33":{"start":{"line":47,"column":8},"end":{"line":47,"column":24}},"34":{"start":{"line":48,"column":8},"end":{"line":48,"column":25}},"35":{"start":{"line":49,"column":8},"end":{"line":49,"column":15}},"36":{"start":{"line":51,"column":8},"end":{"line":51,"column":25}},"37":{"start":{"line":52,"column":8},"end":{"line":52,"column":26}},"38":{"start":{"line":53,"column":8},"end":{"line":53,"column":28}},"39":{"start":{"line":54,"column":8},"end":{"line":54,"column":15}},"40":{"start":{"line":55,"column":8},"end":{"line":55,"column":43}},"41":{"start":{"line":56,"column":8},"end":{"line":56,"column":35}},"42":{"start":{"line":57,"column":8},"end":{"line":57,"column":35}},"43":{"start":{"line":58,"column":8},"end":{"line":58,"column":44}},"44":{"start":{"line":59,"column":8},"end":{"line":59,"column":24}},"45":{"start":{"line":60,"column":8},"end":{"line":60,"column":21}},"46":{"start":{"line":61,"column":8},"end":{"line":61,"column":15}},"47":{"start":{"line":63,"column":4},"end":{"line":63,"column":70}},"48":{"start":{"line":64,"column":4},"end":{"line":64,"column":70}},"49":{"start":{"line":66,"column":4},"end":{"line":66,"column":13}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":9},"end":{"line":25,"column":9}},{"start":{"line":25,"column":9},"end":{"line":25,"column":9}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":9}},{"start":{"line":26,"column":9},"end":{"line":26,"column":9}}]},"5":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":11},"end":{"line":38,"column":11}},{"start":{"line":38,"column":11},"end":{"line":38,"column":11}}]}},"code":["/**"," * Special Functions"," */"," module.exports = function($u) {","/**"," * @method  erfinv"," * @summary Inverse error function"," * @description Inverse error function"," * "," * The inverse error function satisfies y = erf(x), for -1 <= y <= 1 and -inf <= x <= inf"," * "," * @param  {number} y real value in range [-1,1]"," * @return {number}   "," *"," * @example"," * ubique.erfinv(0.1);"," * // 0.08885596505119545"," */"," $u.erfinv = function(y) {","    if (arguments.length === 0) {","        throw new Error('not enough input arguments');","    }","    var x,x1,x2,x3,x4,x5,x6,x7,x8,x9,z,z1,z2,z3","    if (y <= -1) {x = -Infinity;return x;}","    else if (y >= 1) {x = Infinity;return x;}","    else if (y < -0.7) {","        z1 = (1 + y) / 2;","        z2 = Math.log(z1) / Math.log(Math.E);","        z3 = Math.sqrt(-z2);","        z = z3;","        x1 = 1.641345311 * z + 3.429567803;","        x2 = x1 * z + -1.624906493;","        x3 = x2 * z + -1.970840454;","        x4 = 1.637067800 * z + 3.543889200;","        x5 = x4 * z + 1;","        x6 = -x3 / x5;","        x = x6;","    } else if (y < 0.7) {","        z = y * y;","        x1 = -0.140543331 * z + 0.914624893;","        x2 = x1 * z + -1.645349621;","        x3 = x2 * z + 0.886226899;","        x4 = 0.012229801 * z + -0.329097515;","        x5 = x4 * z + -0.329097515;","        x6 = x5 * z + 1.442710462;","        x7 = x6 * z + -2.118377725;","        x8 = x7 * z + 1;","        x9 = y * x3 / x8;","        x = x9;","    } else {","        z1 = (1 + y) / 2;","        z2 = Math.log(z1);","        z3 = Math.sqrt(-z2);","        z = z3;","        x1 = 1.641345311 * z + 3.429567803;","        x2 = x1 * z + -1.624906493;","        x3 = x2 * z + -1.970840454;","        x4 = 1.637067800 * z +  3.543889200;","        x5 = x4 * z + 1;","        x6 = x3 / x5;","        x = x6;","    }","    x = x - ($u.erf(x) - y) / (2/Math.sqrt(Math.PI) * Math.exp(-x*x));","    x = x - ($u.erf(x) - y) / (2/Math.sqrt(Math.PI) * Math.exp(-x*x));","","    return x;","}","","}"],"l":{"4":1,"19":1,"20":0,"21":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"66":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/exp.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/exp.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":22}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":34,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":32,"column":2}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":3},"end":{"line":25,"column":49}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":21}},"6":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"7":{"start":{"line":29,"column":3},"end":{"line":29,"column":17}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":27}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["/**"," * Exponents and Logarithms"," */"," module.exports = function($u) {","/**"," * @method exp"," * @summary Exponential value"," * @description Exponential value"," * "," * @param  {number|array|matrix} x element"," * @return {number|array|matrix}   "," *"," * @example  "," * ubique.exp(6);"," * // 403.429"," * "," * ubique.exp([5,6,3]);"," * // [148.413, 403.429, 20.0855]"," * "," * ubqie.exp([[5,6,5],[7,8,-1]]);"," * // [[148.413, 403.429, 148.413], [1096.63, 2980.96, 0.367879]]"," */"," $u.exp = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tvar fun = Math.exp;"," \tif ($u.isnumber(x)) {"," \t\treturn fun(x);"," \t}"," \treturn $u.arrayfun(x,fun)"," }","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/log.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/log.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":22}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":34,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":32,"column":2}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":3},"end":{"line":25,"column":49}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":21}},"6":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"7":{"start":{"line":29,"column":3},"end":{"line":29,"column":17}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":27}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["/**"," * Exponents and Logarithms"," */"," module.exports = function($u) {","/**"," * @method log"," * @summary Natural logarithm"," * @description Natural logarithm"," * "," * @param  {number|array|matrix} x element"," * @return {number|array|matrix}   "," *"," * @example  "," * ubique.log(6);"," * // 1.79176"," * "," * ubique.log([5,6,3]);"," * // [ 1.60944, 1.79176, 1.09861 ]"," * "," * ubique.log([[5,6,5],[7,8,2]]);"," * // [ [ 1.6094, 1.7918, 1.6094 ], [ 1.9459, 2.0794, 0.6931 ] ]"," */"," $u.log = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tvar fun = Math.log;"," \tif ($u.isnumber(x)) {"," \t\treturn fun(x);"," \t}"," \treturn $u.arrayfun(x,fun)"," }","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/sign.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/sign.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":23}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":14},"end":{"line":27,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":46,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":44,"column":2}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":3},"end":{"line":25,"column":49}},"5":{"start":{"line":27,"column":2},"end":{"line":39,"column":3}},"6":{"start":{"line":28,"column":3},"end":{"line":38,"column":4}},"7":{"start":{"line":29,"column":4},"end":{"line":34,"column":5}},"8":{"start":{"line":30,"column":5},"end":{"line":30,"column":14}},"9":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"10":{"start":{"line":33,"column":5},"end":{"line":33,"column":15}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":13}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":15}},"13":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"14":{"start":{"line":41,"column":3},"end":{"line":41,"column":19}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":29}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":3},"end":{"line":28,"column":3}},{"start":{"line":28,"column":3},"end":{"line":28,"column":3}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["/**"," * Complex Numbers"," */"," module.exports = function($u) {","/**"," * @method sign"," * @summary Signum function"," * @description Signum function"," * "," * @param  {number|array|matrix} x element"," * @return {number|array|matrix}   "," *"," * @example"," * ubique.sign(-0.5);"," * // -1"," * "," * ubique.sign([0.1,-0.5]);"," * // [1, -1]"," * "," * ubique.sign([[5,-2],[-3,4]]);"," * // [[1, -1], [-1, 1]]"," */"," $u.sign = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tvar _sign = function(val) {"," \t\tif ($u.isnumber(val)) {"," \t\t\tif (val > 0) {"," \t\t\t\treturn 1;"," \t\t\t} else"," \t\t\tif (val < 0) {"," \t\t\t\treturn -1;"," \t\t\t}"," \t\t\treturn 0;"," \t\t} else {"," \t\t\treturn NaN;"," \t\t}"," \t}"," \tif ($u.isnumber(x)) {"," \t\treturn _sign(x);"," \t}"," \treturn $u.arrayfun(x,_sign)"," }","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"35":0,"37":0,"40":0,"41":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/sqrt.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/elmath/sqrt.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":11},"end":{"line":21,"column":23}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":32,"column":1}},"2":{"start":{"line":21,"column":1},"end":{"line":30,"column":2}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":3},"end":{"line":23,"column":49}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":22}},"6":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"7":{"start":{"line":27,"column":3},"end":{"line":27,"column":17}},"8":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]}},"code":["/**"," * Exponents and Logarithms"," */"," module.exports = function($u) {","/**"," * @method log"," * @summary Square root"," * @description Square root"," * "," * @param  {number|array|matrix} x element"," * @return {number|array|matrix}   "," *"," * @example  "," * ubique.sqrt(6);"," * // 2.44949"," * ubique.sqrt([5,6,3]);"," * // [ 2.23607, 2.44949, 1.73205 ]"," * ubique.sqrt([[5,6,5],[7,8,2]]);"," * // [ [ 2.2361, 2.4495, 2.2361 ], [ 2.6458, 2.8284, 1.4142 ] ]"," */"," $u.sqrt = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tvar fun = Math.sqrt;"," \tif ($u.isnumber(x)) {"," \t\treturn fun(x);"," \t}"," \treturn $u.arrayfun(x,fun)"," }","","}"],"l":{"4":1,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/linalgebra/det.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/linalgebra/det.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":22}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":40,"column":2}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":3},"end":{"line":22,"column":49}},"5":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"6":{"start":{"line":25,"column":3},"end":{"line":25,"column":45}},"7":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"8":{"start":{"line":28,"column":3},"end":{"line":28,"column":43}},"9":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"10":{"start":{"line":31,"column":3},"end":{"line":31,"column":41}},"11":{"start":{"line":33,"column":2},"end":{"line":35,"column":18}},"12":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"13":{"start":{"line":37,"column":3},"end":{"line":37,"column":30}},"14":{"start":{"line":39,"column":2},"end":{"line":39,"column":13}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":20}},{"start":{"line":24,"column":24},"end":{"line":24,"column":37}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]}},"code":["/**"," * Matrix Analysis"," */"," module.exports = function($u) {","/**"," * @method det"," * @summary Matrix determinant"," * @description Matrix determinant with LU decomposition method"," *"," * @param  {matrix} x square matrix"," * @return {number}   "," * "," * @example"," * ubique.det([[1,5],[6,2]]);"," * // -28"," * "," * ubique.det([[2,2],[2,3]]);"," * // 2"," */"," $u.det = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isnumber(x) || $u.isarray(x)) {"," \t\tthrow new Error('input must be a matrix');"," \t}"," \tif (!$u.issquare(x)) {"," \t\tthrow new Error('matrix must be square')"," \t}"," \tif ($u.issingular(x)) {"," \t\tthrow new Error('matrix is singular');"," \t}"," \tvar n = $u.ncols(x),"," \tlumat = $u.lu(x),","    out = lumat.S;"," \tfor (var i = 0;i < n;i++) {"," \t\tout = out * lumat.LU[i][i];"," \t}"," \treturn out;"," }","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"30":0,"31":0,"33":0,"36":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/linalgebra/inv.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/linalgebra/inv.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":11},"end":{"line":20,"column":23}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":36,"column":1}},"2":{"start":{"line":20,"column":2},"end":{"line":34,"column":3}},"3":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"4":{"start":{"line":22,"column":6},"end":{"line":22,"column":52}},"5":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"6":{"start":{"line":25,"column":6},"end":{"line":25,"column":47}},"7":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"8":{"start":{"line":28,"column":6},"end":{"line":28,"column":17}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":24}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":22}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":28}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]}},"code":["/**"," * Linear Equations"," */"," module.exports = function($u) {","  /**","  * @method inv","  * @summary Matrix inverse","  * @description Inverse of a square matrix","  * ","  * @param  {number|array|matrix} x number or array of values","  * @return {number|array|matrix}   ","  *","  * @example","  * ubique.inv([[3, 2], [5, 2]]);","  * // [ [ -0.5, 0.5 ], [ 1.25, -0.75 ] ]","  * ","  * ubique.inv([[1,1,-1],[1,-2,3],[2,3,1]]);","  * // [ [ 0.846154, 0.307692, -0.076923 ], [ -0.384615, -0.230769, 0.307692 ], [ -0.538462, 0.076923, 0.230769 ] ]","  */","  $u.inv = function(x) {","    if (arguments.length === 0) {","      throw new Error('not enough input arguments');","    }","    if (!$u.issquare(x)) {","      throw new Error('matrix must be square');","    }","    if ($u.isnumber(x)) {","      return 1/x;","    }","    var m = $u.nrows(x);","    var I = $u.eye(m);","    return $u.linsolve(x,I);","","  }","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"30":0,"31":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/linalgebra/linsolve.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/linalgebra/linsolve.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":16},"end":{"line":27,"column":30}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":16},"end":{"line":56,"column":33}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":89,"column":1}},"2":{"start":{"line":27,"column":2},"end":{"line":88,"column":3}},"3":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"4":{"start":{"line":29,"column":6},"end":{"line":29,"column":52}},"5":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"6":{"start":{"line":32,"column":5},"end":{"line":32,"column":53}},"7":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"8":{"start":{"line":35,"column":6},"end":{"line":35,"column":47}},"9":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"10":{"start":{"line":38,"column":6},"end":{"line":38,"column":17}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":23}},"12":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"13":{"start":{"line":42,"column":5},"end":{"line":42,"column":43}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":20}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":25}},"16":{"start":{"line":46,"column":4},"end":{"line":46,"column":25}},"17":{"start":{"line":47,"column":4},"end":{"line":47,"column":34}},"18":{"start":{"line":49,"column":4},"end":{"line":54,"column":5}},"19":{"start":{"line":50,"column":6},"end":{"line":50,"column":29}},"20":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"21":{"start":{"line":53,"column":6},"end":{"line":53,"column":34}},"22":{"start":{"line":56,"column":4},"end":{"line":77,"column":5}},"23":{"start":{"line":57,"column":6},"end":{"line":57,"column":14}},"24":{"start":{"line":59,"column":6},"end":{"line":65,"column":7}},"25":{"start":{"line":60,"column":8},"end":{"line":60,"column":19}},"26":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"27":{"start":{"line":62,"column":10},"end":{"line":62,"column":33}},"28":{"start":{"line":64,"column":8},"end":{"line":64,"column":19}},"29":{"start":{"line":68,"column":6},"end":{"line":68,"column":29}},"30":{"start":{"line":69,"column":6},"end":{"line":75,"column":7}},"31":{"start":{"line":70,"column":8},"end":{"line":70,"column":19}},"32":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"33":{"start":{"line":72,"column":10},"end":{"line":72,"column":33}},"34":{"start":{"line":74,"column":8},"end":{"line":74,"column":30}},"35":{"start":{"line":76,"column":6},"end":{"line":76,"column":15}},"36":{"start":{"line":79,"column":4},"end":{"line":86,"column":5}},"37":{"start":{"line":80,"column":6},"end":{"line":80,"column":32}},"38":{"start":{"line":81,"column":6},"end":{"line":85,"column":7}},"39":{"start":{"line":82,"column":8},"end":{"line":82,"column":45}},"40":{"start":{"line":84,"column":8},"end":{"line":84,"column":59}},"41":{"start":{"line":87,"column":4},"end":{"line":87,"column":15}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"5":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":22}},{"start":{"line":37,"column":26},"end":{"line":37,"column":40}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"7":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"8":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"9":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":6}},{"start":{"line":81,"column":6},"end":{"line":81,"column":6}}]}},"code":["/**"," * Linear Equations"," */"," module.exports = function($u) {","  /**","  * @method linsolve","  * @summary Solve linear system of equations Ax = b","  * @description Solve linear system of equations Ax = b using LU factorization with ","  * rows pivoting","  * ","  * @param  {matrix} A square matrix","  * @param  {array|matrix} b vector or matrix","  * @return {array|matrix}   ","  *","  * @example","  * var transp = ubique.transpose;","  *","  * ubique.linsolve([[1,1,-1],[1,-2,3],[2,3,1]],transp([5,6,3]));","  * [ 5.846154, -2.384615, -1.538462 ]","  * ","  * ubique.linsolve([[1,1,-1],[1,-2,3],[2,3,1]],[[4],[-6],[7]]);","  * // [1, 2, -1]","  * ","  * ubique.linsolve([[1,1,-1],[1,-2,3],[2,3,1]],ubique.eye(3));","  * // [[0.846154, 0.307692, -0.0769231], [-0.384615, -0.230769, 0.307692], [-0.538462, 0.0769231, 0.230769]]","  */","  $u.linsolve = function(A,b) {","    if (arguments.length <= 1) {","      throw new Error('not enough input arguments');","    }","    if ($u.nrows(A) !== $u.nrows(b)) {","    \tthrow new Error('matrix dimensions must agree');","    }","    if (!$u.issquare(A)) {","      throw new Error('matrix must be square');","    }","    if ($u.isnumber(A) && $u.isnumber(b)) {","      return b/A;","    }","    var lud = $u.lu(A);","    if ($u.issingular(lud.LU)) {","    \tthrow new Error('matrix is singular');","    }","    var LU = lud.LU;","    var m = $u.nrows(LU);","    var bn = $u.ncols(b);","    var bidx = $u.colon(0,bn - 1);","","    if ($u.isarray(b)) {","      x = $u.subset(b,lud.P);","    } else","    if ($u.ismatrix(b)) {","      x = $u.subset(b,lud.P,bidx);","    }","    ","    var solve = function(LU,m,x) {","      sum = 0;","      // Solve Ly = b using forward substitution","      for (var i = 1;i < m;i++) {","        sum = x[i];","        for (var j = 0;j < i;j++){","          sum -= LU[i][j] * x[j];","        }","        x[i] = sum;","      }","","      // Solve Ux = y using back substitution","      x[m-1] /= LU[m-1][m-1];","      for (var i = m-2;i >= 0;i--) {","        sum = x[i];","        for (var j = i+1;j < m;j++) {","          sum -= LU[i][j] * x[j];","        }","        x[i] = sum / LU[i][i];","      }","      return x;","    }","    ","    for (var h = 0;h < bn;h++) {","      var tcol = $u.getcol(x,h);","      if (h === 0) {","        out = $u.transpose(solve(LU,m,tcol));","      } else {","        out = $u.cat(1,out,$u.transpose(solve(LU,m,tcol)));","      }","    }","    return out;","  }","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"47":0,"49":0,"50":0,"52":0,"53":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"64":0,"68":0,"69":0,"70":0,"71":0,"72":0,"74":0,"76":0,"79":0,"80":0,"81":0,"82":0,"84":0,"87":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/linalgebra/lu.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/linalgebra/lu.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":9},"end":{"line":39,"column":21}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":12},"end":{"line":45,"column":24}}},"4":{"name":"(anonymous_4)","line":98,"loc":{"start":{"line":98,"column":12},"end":{"line":98,"column":24}}},"5":{"name":"(anonymous_5)","line":120,"loc":{"start":{"line":120,"column":14},"end":{"line":120,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":145,"column":1}},"2":{"start":{"line":39,"column":1},"end":{"line":141,"column":1}},"3":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"4":{"start":{"line":41,"column":3},"end":{"line":41,"column":49}},"5":{"start":{"line":45,"column":2},"end":{"line":95,"column":3}},"6":{"start":{"line":46,"column":3},"end":{"line":46,"column":24}},"7":{"start":{"line":47,"column":3},"end":{"line":47,"column":24}},"8":{"start":{"line":48,"column":3},"end":{"line":48,"column":24}},"9":{"start":{"line":49,"column":3},"end":{"line":49,"column":31}},"10":{"start":{"line":50,"column":3},"end":{"line":50,"column":19}},"11":{"start":{"line":51,"column":3},"end":{"line":51,"column":18}},"12":{"start":{"line":52,"column":3},"end":{"line":52,"column":18}},"13":{"start":{"line":54,"column":3},"end":{"line":93,"column":4}},"14":{"start":{"line":56,"column":4},"end":{"line":56,"column":28}},"15":{"start":{"line":58,"column":4},"end":{"line":68,"column":5}},"16":{"start":{"line":60,"column":5},"end":{"line":60,"column":29}},"17":{"start":{"line":62,"column":5},"end":{"line":62,"column":31}},"18":{"start":{"line":63,"column":5},"end":{"line":63,"column":15}},"19":{"start":{"line":64,"column":5},"end":{"line":66,"column":6}},"20":{"start":{"line":65,"column":6},"end":{"line":65,"column":31}},"21":{"start":{"line":67,"column":5},"end":{"line":67,"column":30}},"22":{"start":{"line":70,"column":4},"end":{"line":70,"column":14}},"23":{"start":{"line":71,"column":4},"end":{"line":75,"column":5}},"24":{"start":{"line":72,"column":5},"end":{"line":74,"column":6}},"25":{"start":{"line":73,"column":6},"end":{"line":73,"column":12}},"26":{"start":{"line":76,"column":4},"end":{"line":86,"column":5}},"27":{"start":{"line":77,"column":5},"end":{"line":81,"column":6}},"28":{"start":{"line":78,"column":6},"end":{"line":78,"column":23}},"29":{"start":{"line":79,"column":6},"end":{"line":79,"column":26}},"30":{"start":{"line":80,"column":6},"end":{"line":80,"column":19}},"31":{"start":{"line":82,"column":5},"end":{"line":82,"column":20}},"32":{"start":{"line":83,"column":5},"end":{"line":83,"column":21}},"33":{"start":{"line":84,"column":5},"end":{"line":84,"column":16}},"34":{"start":{"line":85,"column":5},"end":{"line":85,"column":24}},"35":{"start":{"line":88,"column":4},"end":{"line":92,"column":5}},"36":{"start":{"line":89,"column":5},"end":{"line":91,"column":6}},"37":{"start":{"line":90,"column":6},"end":{"line":90,"column":27}},"38":{"start":{"line":94,"column":3},"end":{"line":94,"column":39}},"39":{"start":{"line":98,"column":2},"end":{"line":117,"column":3}},"40":{"start":{"line":99,"column":3},"end":{"line":100,"column":19}},"41":{"start":{"line":101,"column":3},"end":{"line":105,"column":4}},"42":{"start":{"line":102,"column":4},"end":{"line":102,"column":27}},"43":{"start":{"line":104,"column":4},"end":{"line":104,"column":27}},"44":{"start":{"line":106,"column":3},"end":{"line":115,"column":4}},"45":{"start":{"line":107,"column":4},"end":{"line":114,"column":5}},"46":{"start":{"line":108,"column":5},"end":{"line":113,"column":6}},"47":{"start":{"line":109,"column":6},"end":{"line":109,"column":25}},"48":{"start":{"line":111,"column":5},"end":{"line":113,"column":6}},"49":{"start":{"line":112,"column":6},"end":{"line":112,"column":19}},"50":{"start":{"line":116,"column":3},"end":{"line":116,"column":13}},"51":{"start":{"line":120,"column":4},"end":{"line":136,"column":5}},"52":{"start":{"line":121,"column":5},"end":{"line":122,"column":21}},"53":{"start":{"line":123,"column":5},"end":{"line":127,"column":6}},"54":{"start":{"line":124,"column":6},"end":{"line":124,"column":29}},"55":{"start":{"line":126,"column":6},"end":{"line":126,"column":29}},"56":{"start":{"line":128,"column":5},"end":{"line":134,"column":6}},"57":{"start":{"line":129,"column":6},"end":{"line":133,"column":7}},"58":{"start":{"line":130,"column":7},"end":{"line":132,"column":8}},"59":{"start":{"line":131,"column":8},"end":{"line":131,"column":27}},"60":{"start":{"line":135,"column":5},"end":{"line":135,"column":15}},"61":{"start":{"line":139,"column":4},"end":{"line":139,"column":21}},"62":{"start":{"line":140,"column":4},"end":{"line":140,"column":74}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"2":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":5},"end":{"line":72,"column":5}},{"start":{"line":72,"column":5},"end":{"line":72,"column":5}}]},"3":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"4":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"5":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":13}},{"start":{"line":88,"column":17},"end":{"line":88,"column":31}}]},"6":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":3},"end":{"line":101,"column":3}},{"start":{"line":101,"column":3},"end":{"line":101,"column":3}}]},"7":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":5},"end":{"line":108,"column":5}},{"start":{"line":108,"column":5},"end":{"line":108,"column":5}}]},"8":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":5},"end":{"line":111,"column":5}},{"start":{"line":111,"column":5},"end":{"line":111,"column":5}}]},"9":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":5},"end":{"line":123,"column":5}},{"start":{"line":123,"column":5},"end":{"line":123,"column":5}}]},"10":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":7},"end":{"line":130,"column":7}},{"start":{"line":130,"column":7},"end":{"line":130,"column":7}}]}},"code":["/**"," * Matrix Decomposition"," */"," module.exports = function($u) {","/**"," * @method lu"," * @summary LU matrix factorization"," * @description LU matrix factorization based on Doolittle algorithm. The LU decomposition with pivoting always exists, even if the matrix is singular.  "," * Returns an object:  "," * "," * LU (lu matrix) "," * L (lower triangular matrix)"," * U (upper triangular matrix)"," * P (pivot vector)"," * S (pivot sign) +1 or -1"," * "," * @param  {matrix} x input matrix"," * @return {object}    .LU (lu matrix) "," *                     .L (lower triangular matrix)"," *                     .U (upper triangular matrix)"," *                     .P (pivot vector)"," *                     .S (pivot sign) +1 or -1"," *"," * @example"," * ubique.lu([[5,6,5],[7,8,-1]]);"," * // { LU: [ [ 7, 8, -1 ], [ 0.714286, 0.285714, 5.714286 ] ],"," * //    L: [ [ 1, 0 ], [ 0.714286, 1 ] ],"," * //    U: [ [ 7, 8, -1 ], [ 0, 0.285714, 5.714286 ] ],"," * //    P: [ 1, 0 ],"," * //    S: -1;}"," *"," * ubique.lu([[0, 5], [6, 0]]);"," * // { LU: [ [ 6, 0 ], [ 0, 5 ] ],"," * //    L: [ [ 1, 0 ], [ 0, 1 ] ],"," * //    U: [ [ 6, 0 ], [ 0, 5 ] ],"," * //    P: [ 1, 0 ],"," * //    S: -1;}"," */"," $u.lu = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}",""," \t// LU decomposition"," \tvar lud = function(a) {"," \t\tvar _a = $u.clone(a);"," \t\tvar m = $u.nrows(_a);"," \t\tvar n = $u.ncols(_a);"," \t\tvar piv = $u.colon(0,m - 1);"," \t\tvar pivsign = 1;"," \t\tvar _arow = [];"," \t\tvar _acol = [];",""," \t\tfor (var j = 0; j < n; j++) {",""," \t\t\t_acol = $u.getcol(_a,j);",""," \t\t\tfor (var i = 0; i < m; i++) {",""," \t\t\t\t_arow = $u.getrow(_a,i);",""," \t\t\t\tvar kmax = Math.min(i, j);"," \t\t\t\tvar s = 0;"," \t\t\t\tfor (var k = 0; k < kmax; k++) {"," \t\t\t\t\ts += _arow[k] * _acol[k];"," \t\t\t\t}"," \t\t\t\t_arow[j] = _acol[i] -= s;"," \t\t\t}",""," \t\t\tvar p = j;"," \t\t\tfor (var i = j + 1; i < m; i++) {"," \t\t\t\tif (Math.abs(_acol[i]) > Math.abs(_acol[p])) {"," \t\t\t\t\tp = i;"," \t\t\t\t}"," \t\t\t}"," \t\t\tif (p !== j) {"," \t\t\t\tfor (var k = 0; k < n; k++) {"," \t\t\t\t\tvar t = _a[p][k];"," \t\t\t\t\t_a[p][k] = _a[j][k];"," \t\t\t\t\t_a[j][k] = t;"," \t\t\t\t}"," \t\t\t\tvar k = piv[p];"," \t\t\t\tpiv[p] = piv[j];"," \t\t\t\tpiv[j] = k;"," \t\t\t\tpivsign = -pivsign;"," \t\t\t}",""," \t\t\tif (j < m && _a[j][j] !== 0) {"," \t\t\t\tfor (var i = j + 1; i < m; i++) {"," \t\t\t\t\t_a[i][j] /= _a[j][j];"," \t\t\t\t}"," \t\t\t}"," \t\t}"," \t\treturn {'Y':_a,'P':piv,'S':pivsign};"," \t}",""," \t// Lower triangular matrix L"," \tvar ltm = function(L) {"," \t\tvar m = $u.nrows(L),"," \t\tn = $u.ncols(L);"," \t\tif (m < n) {"," \t\t\tvar _L = $u.zeros(m,m);"," \t\t} else {"," \t\t\tvar _L = $u.zeros(m,n);"," \t\t}"," \t\tfor (var i = 0; i < $u.nrows(_L); i++) {"," \t\t\tfor (var j = 0; j < $u.ncols(_L); j++) {"," \t\t\t\tif (i > j) {"," \t\t\t\t\t_L[i][j] = L[i][j];"," \t\t\t\t} else "," \t\t\t\tif (i == j) {"," \t\t\t\t\t_L[i][j] = 1;"," \t\t\t\t}"," \t\t\t}"," \t\t}"," \t\treturn _L;"," \t}","","    // Upper triangular matrix U","    var utm = function(U) {","    \tvar m = $u.nrows(U),","    \tn = $u.ncols(U);","    \tif (m < n) {","    \t\tvar _U = $u.zeros(m,n);","    \t} else {","    \t\tvar _U = $u.zeros(n,n);","    \t}","    \tfor (var i = 0; i < m; i++) {","    \t\tfor (var j = 0; j < n; j++) {","    \t\t\tif (i <= j) {","    \t\t\t\t_U[i][j] = U[i][j];","    \t\t\t}","    \t\t}","    \t}","    \treturn _U;","    }","","    // LU matrix","    var _LU = lud(x);","    return {'LU':_LU.Y,'L':ltm(_LU.Y),'U':utm(_LU.Y),'P':_LU.P,'S':_LU.S};","}","","","","}"],"l":{"4":1,"39":1,"40":0,"41":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"56":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"67":0,"70":0,"71":0,"72":0,"73":0,"76":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"85":0,"88":0,"89":0,"90":0,"94":0,"98":0,"99":0,"101":0,"102":0,"104":0,"106":0,"107":0,"108":0,"109":0,"111":0,"112":0,"116":0,"120":0,"121":0,"123":0,"124":0,"126":0,"128":0,"129":0,"130":0,"131":0,"135":0,"139":0,"140":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/array.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/array.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":41,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":40,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"5":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":69}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":33}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":15}},"9":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":17}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":13}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":22},"end":{"line":34,"column":26}},{"start":{"line":34,"column":29},"end":{"line":34,"column":32}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method array"," * @summary Create an array with custom elements"," * @description Create an array with custom elements"," * "," * @param  {number} n number of elements"," * @param  {number|string|boolean} val values of the array "," * @return {array}       "," *"," * @example"," * ubique.array(3);"," * // [ null, null, null ]"," * "," * ubique.array(3,-1);"," * // [-1, -1, -1]"," * "," * ubique.array(3,'y');"," * // [ 'y', 'y', 'y' ]"," * "," * ubique.array(4,true);"," * // [ true, true, true, true ]"," */"," $u.array = function(n,val) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  if (!$u.isnumber(n)) {","    throw new Error('number of elements must be a positive integer');","  }","  val = val == null ? null : val;","  var arr = [];","  for (var i = 0; i < n; i++) {","    arr[i] = val;","  }","  return arr;","}","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/cat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/cat.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":73,"loc":{"start":{"line":73,"column":10},"end":{"line":73,"column":21}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":166,"column":1}},"2":{"start":{"line":73,"column":1},"end":{"line":164,"column":1}},"3":{"start":{"line":74,"column":2},"end":{"line":74,"column":24}},"4":{"start":{"line":75,"column":2},"end":{"line":75,"column":31}},"5":{"start":{"line":76,"column":2},"end":{"line":76,"column":15}},"6":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"7":{"start":{"line":78,"column":4},"end":{"line":78,"column":50}},"8":{"start":{"line":80,"column":2},"end":{"line":80,"column":21}},"9":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"10":{"start":{"line":82,"column":4},"end":{"line":82,"column":65}},"11":{"start":{"line":85,"column":2},"end":{"line":140,"column":1}},"12":{"start":{"line":86,"column":4},"end":{"line":138,"column":3}},"13":{"start":{"line":87,"column":5},"end":{"line":87,"column":28}},"14":{"start":{"line":88,"column":5},"end":{"line":137,"column":5}},"15":{"start":{"line":89,"column":6},"end":{"line":91,"column":7}},"16":{"start":{"line":90,"column":8},"end":{"line":90,"column":27}},"17":{"start":{"line":92,"column":6},"end":{"line":102,"column":7}},"18":{"start":{"line":93,"column":8},"end":{"line":93,"column":24}},"19":{"start":{"line":95,"column":6},"end":{"line":102,"column":7}},"20":{"start":{"line":96,"column":8},"end":{"line":96,"column":22}},"21":{"start":{"line":98,"column":6},"end":{"line":102,"column":7}},"22":{"start":{"line":99,"column":8},"end":{"line":99,"column":30}},"23":{"start":{"line":101,"column":8},"end":{"line":101,"column":60}},"24":{"start":{"line":104,"column":4},"end":{"line":137,"column":5}},"25":{"start":{"line":105,"column":6},"end":{"line":107,"column":7}},"26":{"start":{"line":106,"column":8},"end":{"line":106,"column":25}},"27":{"start":{"line":108,"column":6},"end":{"line":118,"column":7}},"28":{"start":{"line":109,"column":8},"end":{"line":109,"column":24}},"29":{"start":{"line":111,"column":6},"end":{"line":118,"column":7}},"30":{"start":{"line":112,"column":8},"end":{"line":112,"column":22}},"31":{"start":{"line":114,"column":6},"end":{"line":118,"column":7}},"32":{"start":{"line":115,"column":8},"end":{"line":115,"column":30}},"33":{"start":{"line":117,"column":8},"end":{"line":117,"column":60}},"34":{"start":{"line":120,"column":4},"end":{"line":137,"column":5}},"35":{"start":{"line":121,"column":6},"end":{"line":123,"column":7}},"36":{"start":{"line":122,"column":8},"end":{"line":122,"column":23}},"37":{"start":{"line":124,"column":6},"end":{"line":134,"column":7}},"38":{"start":{"line":125,"column":8},"end":{"line":125,"column":24}},"39":{"start":{"line":127,"column":6},"end":{"line":134,"column":7}},"40":{"start":{"line":128,"column":8},"end":{"line":128,"column":22}},"41":{"start":{"line":130,"column":6},"end":{"line":134,"column":7}},"42":{"start":{"line":131,"column":8},"end":{"line":131,"column":30}},"43":{"start":{"line":133,"column":8},"end":{"line":133,"column":60}},"44":{"start":{"line":136,"column":6},"end":{"line":136,"column":49}},"45":{"start":{"line":139,"column":2},"end":{"line":139,"column":13}},"46":{"start":{"line":142,"column":0},"end":{"line":163,"column":1}},"47":{"start":{"line":143,"column":2},"end":{"line":143,"column":15}},"48":{"start":{"line":144,"column":2},"end":{"line":161,"column":3}},"49":{"start":{"line":145,"column":4},"end":{"line":145,"column":27}},"50":{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},"51":{"start":{"line":147,"column":6},"end":{"line":147,"column":20}},"52":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"53":{"start":{"line":150,"column":6},"end":{"line":150,"column":18}},"54":{"start":{"line":152,"column":4},"end":{"line":160,"column":5}},"55":{"start":{"line":153,"column":6},"end":{"line":153,"column":26}},"56":{"start":{"line":155,"column":6},"end":{"line":159,"column":7}},"57":{"start":{"line":156,"column":8},"end":{"line":156,"column":25}},"58":{"start":{"line":157,"column":8},"end":{"line":157,"column":33}},"59":{"start":{"line":158,"column":8},"end":{"line":158,"column":21}},"60":{"start":{"line":162,"column":2},"end":{"line":162,"column":13}}},"branchMap":{"1":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"2":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"3":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":15}},{"start":{"line":81,"column":19},"end":{"line":81,"column":28}}]},"4":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":5},"end":{"line":88,"column":5}},{"start":{"line":88,"column":5},"end":{"line":88,"column":5}}]},"6":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":6}},{"start":{"line":89,"column":6},"end":{"line":89,"column":6}}]},"7":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":6},"end":{"line":92,"column":6}},{"start":{"line":92,"column":6},"end":{"line":92,"column":6}}]},"8":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":6},"end":{"line":95,"column":6}},{"start":{"line":95,"column":6},"end":{"line":95,"column":6}}]},"9":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":10},"end":{"line":95,"column":25}},{"start":{"line":95,"column":29},"end":{"line":95,"column":48}}]},"10":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":6},"end":{"line":98,"column":6}},{"start":{"line":98,"column":6},"end":{"line":98,"column":6}}]},"11":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":10},"end":{"line":98,"column":26}},{"start":{"line":98,"column":30},"end":{"line":98,"column":49}}]},"12":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"13":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":6}},{"start":{"line":105,"column":6},"end":{"line":105,"column":6}}]},"14":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":6}},{"start":{"line":108,"column":6},"end":{"line":108,"column":6}}]},"15":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":10},"end":{"line":108,"column":26}},{"start":{"line":108,"column":30},"end":{"line":108,"column":49}}]},"16":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]},"17":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":10},"end":{"line":111,"column":25}},{"start":{"line":111,"column":29},"end":{"line":111,"column":60}}]},"18":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":6}},{"start":{"line":114,"column":6},"end":{"line":114,"column":6}}]},"19":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":10},"end":{"line":114,"column":26}},{"start":{"line":114,"column":30},"end":{"line":114,"column":61}}]},"20":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"21":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]},"22":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":6},"end":{"line":124,"column":6}},{"start":{"line":124,"column":6},"end":{"line":124,"column":6}}]},"23":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":10},"end":{"line":124,"column":26}},{"start":{"line":124,"column":30},"end":{"line":124,"column":49}}]},"24":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":6}},{"start":{"line":127,"column":6},"end":{"line":127,"column":6}}]},"25":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":10},"end":{"line":127,"column":25}},{"start":{"line":127,"column":29},"end":{"line":127,"column":60}}]},"26":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]},"27":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":10},"end":{"line":130,"column":26}},{"start":{"line":130,"column":30},"end":{"line":130,"column":61}}]},"28":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":0},"end":{"line":142,"column":0}},{"start":{"line":142,"column":0},"end":{"line":142,"column":0}}]},"29":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"30":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"31":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method cat"," * @summary Concatenate arrays and matrices"," * @description Concatenate arrays and matrices along specified dimension as first argument."," * Number size 1x1, Array size 1xN, Matrix size MxN"," *              "," * @param  {number|array|matrix...} args variable arguments (0:rows, 1:columns)"," * @return {array|matrix}     "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * var b = [[-1,3,-1],[4,5,9]];"," * var c = [5,6,3];"," * var d = [0.5,-3,2.3];"," * var f = [[3, 2], [5, 2]];"," *"," * // Vertical Concatenation (DIM = 0)"," * "," * ubique.cat(0,1,2,3,4);"," * // [ [ 1 ], [ 2 ], [ 3 ], [ 4 ] ]"," *"," * ubique.cat(0,1,2,[3],4);"," * // [ [ 1 ], [ 2 ], [ 3 ], [ 4 ] ]"," *"," * ubique.cat(0,1,2,[[3],[4]]);"," * // [ [ 1 ], [ 2 ], [ 3 ], [ 4 ] ]"," *"," * ubique.cat(0,[1],2,3,[4]);"," * // [ [ 1 ], [ 2 ], [ 3 ], [ 4 ] ]"," *"," * ubique.cat(0,c,d);"," * // [ [ 5, 6, 3 ], [ 0.5, -3, 2.3 ] ]"," *"," * ubique.cat(0,c,d,a);"," * // [ [ 5, 6, 3 ], [ 0.5, -3, 2.3 ], [ 5, 6, 5 ], [ 7, 8, -1 ] ]"," *"," * ubique.cat(0,[[1]],[2],3,4);"," * // [ [ 1 ], [ 2 ], [ 3 ], [ 4 ] ]"," *"," * ubique.cat(0,a,c);"," * // [ [ 5, 6, 5 ], [ 7, 8, -1 ], [ 5, 6, 3 ] ]"," *"," * // Horizontal Concatenation (DIM = 1)"," *"," * ubique.cat(1,1,2,3,4);"," * // [ [ 1, 2, 3, 4 ] ]"," *"," * ubique.cat(1,1,2,[3],4);"," * // [ [ 1, 2, 3, 4 ] ]"," *"," * ubique.cat(1,1,2,[3,4]);"," * // [ [ 1 ], [ 2 ], [ 3 ], [ 4 ] ]"," *"," * ubique.cat(1,[1],2,3,4);"," * // [ [ 1 ], [ 2 ], [ 3 ], [ 4 ] ]"," * "," * ubique.cat(1,[[1]],2,3,4);"," * // [ [ 1 ], [ 2 ], [ 3 ], [ 4 ] ]"," * "," * ubique.cat(1,c,5);"," * // [ [ 5, 6, 3, 5 ] ]"," * "," * ubique.cat(1,c,d);"," * // [ [ 5, 6, 3, 0.5, -3, 2.3 ] ]"," * "," * ubique.cat(1,[[2,3,4,5]],c,d);"," * // [ [ 2, 3, 4, 5, 5, 6, 3, 0.5, -3, 2.3 ] ]"," */"," $u.cat = function() {"," \tvar _args = arguments;"," \tvar nargs = arguments.length;","  var out = [];","  if (nargs < 2) {","    throw new Error('not enough input arguments');","  }","  var dim = _args[0];","  if (dim !== 0 && dim !== 1) {","    throw new Error('dimension must be 0 (rows) or 1 (columns)');","  }","","  if (dim === 0) {","    for (var i = 1;i < nargs - 1;i++) {","     var tmp = _args[i + 1];","     if ($u.isnumber(_args[1])) {  // number","      if (i === 1) {","        out = [[_args[1]]];","      }","      if ($u.isnumber(tmp)) {","        out.push([tmp]);","      } else","      if ($u.isarray(tmp) && $u.ncols(tmp) === 1) {","        out.push(tmp);","      } else","      if ($u.ismatrix(tmp) && $u.ncols(tmp) === 1) {","        out = out.concat(tmp);","      } else {","        throw new Error('concatenation dimension mismatch');","      }","    } else ","    if ($u.isarray(_args[1])) { // array","      if (i === 1) {","        out = [_args[1]]; ","      }","      if ($u.isnumber(tmp) && $u.ncols(out) === 1) {","        out.push([tmp]);","      } else","      if ($u.isarray(tmp) && $u.ncols(tmp) === $u.ncols(out)) {","        out.push(tmp);","      } else","      if ($u.ismatrix(tmp) && $u.ncols(tmp) === $u.ncols(out)) {","        out = out.concat(tmp);","      } else {","        throw new Error('concatenation dimension mismatch');","      }","    } else ","    if ($u.ismatrix(_args[1])) { // matrix","      if (i === 1) {","        out = _args[1]; ","      }","      if ($u.isnumber(tmp) && $u.ncols(out) === 1) {","        out.push([tmp]);","      } else","      if ($u.isarray(tmp) && $u.ncols(tmp) === $u.ncols(out)) {","        out.push(tmp);","      } else","      if ($u.ismatrix(tmp) && $u.ncols(tmp) === $u.ncols(out)) {","        out = out.concat(tmp);","      } else {","        throw new Error('concatenation dimension mismatch');","      }","    } else {","      throw new Error('unknown input arguments');","    }","  }","  return out;","}","","if (dim === 1) {","  var out = [];","  for (var i = 0;i < nargs - 1;i++) {","    var tmp = _args[i + 1];","    if ($u.isnumber(tmp)) {","      tmp = [[tmp]];","    }","    if ($u.isarray(tmp)) {","      tmp = [tmp];","    }","    if (i === 0) {","      out = $u.clone(tmp);","    } else {","      for (var j = 0;j < $u.nrows(out);j++) {","        var row = out[j];","        row = row.concat(tmp[j]);","        out[j] = row;","      }","    }","  }","  return out;","}","}","","}"],"l":{"4":1,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"80":0,"81":0,"82":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"92":0,"93":0,"95":0,"96":0,"98":0,"99":0,"101":0,"104":0,"105":0,"106":0,"108":0,"109":0,"111":0,"112":0,"114":0,"115":0,"117":0,"120":0,"121":0,"122":0,"124":0,"125":0,"127":0,"128":0,"130":0,"131":0,"133":0,"136":0,"139":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"149":0,"150":0,"152":0,"153":0,"155":0,"156":0,"157":0,"158":0,"162":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/clone.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/clone.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":47,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":46,"column":2}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":3},"end":{"line":22,"column":49}},"5":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"6":{"start":{"line":25,"column":3},"end":{"line":25,"column":12}},"7":{"start":{"line":27,"column":2},"end":{"line":33,"column":3}},"8":{"start":{"line":28,"column":3},"end":{"line":28,"column":33}},"9":{"start":{"line":29,"column":3},"end":{"line":31,"column":4}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":18}},"11":{"start":{"line":32,"column":3},"end":{"line":32,"column":14}},"12":{"start":{"line":34,"column":2},"end":{"line":44,"column":3}},"13":{"start":{"line":35,"column":3},"end":{"line":36,"column":28}},"14":{"start":{"line":37,"column":3},"end":{"line":42,"column":4}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"16":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"17":{"start":{"line":40,"column":5},"end":{"line":40,"column":25}},"18":{"start":{"line":43,"column":3},"end":{"line":43,"column":14}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method clone"," * @summary Create a clone of the input array or matrix"," * @description Create a clone of the input array or matrix"," * "," * @param  {array|matrix} x array or matrix"," * @return {array|matrix}       "," *"," * @example"," * ubique.clone([[-1,3,-1],[4,5,9]]);"," * // [ [ -1, 3, -1 ], [ 4, 5, 9 ] ]"," * "," * ubique.clone([5,6,3]);"," * // [ 5, 6, 3 ]"," */"," $u.clone = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isnumber(x)) {"," \t\treturn x;"," \t}"," \tif ($u.isarray(x)) {"," \t\tvar out = new Array(x.length);"," \t\tfor (var i = 0; i < x.length; i++) {"," \t\t\tout[i] = x[i];"," \t\t}"," \t\treturn out;"," \t}"," \tif ($u.ismatrix(x)) {"," \t\tvar size = $u.size(x),"," \t\tout = new Array(size[0]);"," \t\tfor (var i = 0;i < size[0];i++) {"," \t\t\tout[i] = new Array(size[1]);"," \t\t\tfor (j = 0; j < size[1]; j++) {"," \t\t\t\tout[i][j] = x[i][j];"," \t\t\t}"," \t\t}"," \t\treturn out;"," \t}",""," }","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"29":0,"30":0,"32":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/colon.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/colon.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":45,"column":1}},"2":{"start":{"line":28,"column":1},"end":{"line":43,"column":2}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":3},"end":{"line":30,"column":49}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":24}},"6":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":34,"column":3},"end":{"line":34,"column":13}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":30}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":15}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":13}},"11":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"12":{"start":{"line":40,"column":3},"end":{"line":40,"column":27}},"13":{"start":{"line":42,"column":2},"end":{"line":42,"column":13}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":18},"end":{"line":32,"column":19}},{"start":{"line":32,"column":22},"end":{"line":32,"column":23}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"4":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":13}},{"start":{"line":33,"column":18},"end":{"line":33,"column":23}},{"start":{"line":33,"column":27},"end":{"line":33,"column":32}},{"start":{"line":33,"column":38},"end":{"line":33,"column":43}},{"start":{"line":33,"column":47},"end":{"line":33,"column":52}}]}},"code":["/**"," * Indexing"," */"," module.exports = function($u) {","/**"," * @method colon"," * @summary Array of numbers from L to U with step S"," * @description Array of numbers from L to U with step S"," * "," * @param  {number} l lower value of the array"," * @param  {number} u upper value of the array"," * @param  {number} s step value (def: 1)"," * @return {array}"," *"," * @example"," * ubique.colon(1,10,1);"," * // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"," * "," * ubique.colon(10,1,1);"," * //  []"," * "," * ubique.colon(-5,5,2);"," * // [-5, -3, -1, 1, 3, 5]"," * "," * ubique.colon(-7,14,2);"," * // [-7, -5, -3, -1, 1, 3, 5, 7, 9, 11, 13]"," */"," $u.colon = function(l,u,s) {"," \tif (arguments.length < 2) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \ts = s == null ? 1 : s;"," \tif (s === 0 || (s > 0 && l > u) || (s < 0 && l < u)) {"," \t\treturn [];"," \t}"," \tvar t = $u.fix((u - l) / s);"," \tvar out = [];"," \tout[0] = l;"," \tfor (var i = 1; i <= t; i++ ) {"," \t\tout[i] = out[i - 1] + s;"," \t}"," \treturn out;"," }","","}"],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/diag.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/diag.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":11},"end":{"line":38,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":73,"column":1}},"2":{"start":{"line":38,"column":1},"end":{"line":71,"column":1}},"3":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"4":{"start":{"line":40,"column":4},"end":{"line":40,"column":50}},"5":{"start":{"line":42,"column":2},"end":{"line":42,"column":24}},"6":{"start":{"line":43,"column":2},"end":{"line":43,"column":21}},"7":{"start":{"line":44,"column":2},"end":{"line":70,"column":1}},"8":{"start":{"line":45,"column":4},"end":{"line":45,"column":21}},"9":{"start":{"line":46,"column":4},"end":{"line":46,"column":46}},"10":{"start":{"line":47,"column":4},"end":{"line":54,"column":4}},"11":{"start":{"line":48,"column":6},"end":{"line":50,"column":6}},"12":{"start":{"line":49,"column":7},"end":{"line":49,"column":33}},"13":{"start":{"line":51,"column":5},"end":{"line":53,"column":6}},"14":{"start":{"line":52,"column":7},"end":{"line":52,"column":33}},"15":{"start":{"line":55,"column":3},"end":{"line":55,"column":14}},"16":{"start":{"line":57,"column":1},"end":{"line":70,"column":1}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":15}},"18":{"start":{"line":59,"column":2},"end":{"line":66,"column":3}},"19":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"20":{"start":{"line":61,"column":6},"end":{"line":61,"column":33}},"21":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"22":{"start":{"line":64,"column":6},"end":{"line":64,"column":33}},"23":{"start":{"line":67,"column":2},"end":{"line":67,"column":13}},"24":{"start":{"line":69,"column":2},"end":{"line":69,"column":35}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":18},"end":{"line":42,"column":19}},{"start":{"line":42,"column":22},"end":{"line":42,"column":23}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":5},"end":{"line":51,"column":5}},{"start":{"line":51,"column":5},"end":{"line":51,"column":5}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},{"start":{"line":57,"column":1},"end":{"line":57,"column":1}}]},"7":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"8":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {"," /**"," * @method diag"," * @summary Diagonal matrix and get diagonals of a matrix"," * @description  Diagonal matrix (for array) and get diagonals of a matrix (for matrix)"," * "," * @param  {array|matrix} x array or matrix values"," * @param  {number} k k-th diagonal. 0: main diagonal, k > 0 above, k < 0 below (def: 0)"," * @return {array|matrix}   "," *"," * @example"," * // build diag matrix"," * ubique.diag([5,6,-3]);"," * // [ [ 5, 0, 0 ], [ 0, 6, 0 ], [ 0, 0, -3 ] ]"," * "," * ubique.diag([5,6,-3],1);"," * // [ [ 0, 5, 0, 0 ],[ 0, 0, 6, 0 ],[ 0, 0, 0, -3 ],[ 0, 0, 0, 0 ] ]"," * "," * ubique.diag([5,6,-3],-1);"," * // [ [ 0, 0, 0, 0 ],[ 5, 0, 0, 0 ],[ 0, 6, 0, 0 ],[ 0, 0, -3, 0 ] ]"," *"," * // get diag values from matrix"," * ubique.diag([[5, 0, 0], [0, 6, 0], [0, 0, -3]]);"," * // [ 5, 6, -3 ]"," * "," * ubique.diag([[0, 5, 0, 0], [0, 0, 6, 0], [0, 0, 0, -3], [0, 0, 0, 0]],1);"," * // [ 5, 6, -3 ]"," * "," * ubique.diag([[0, 0, 0, 0], [5, 0, 0, 0], [0, 6, 0, 0], [0, 0, -3, 0]],-1);"," * // [ 5, 6, -3 ]"," * "," * ubique.diag([[5, 0, 0], [0, 6, 0], [0, 0, -3]],2);"," * // [0]"," */"," $u.diag = function(x,k) {","  if (arguments.length < 1) {","    throw new Error('not enough input arguments');","  }","  k = k == null ? 0 : k;","  var abs = Math.abs;","  if ($u.isarray(x)) {","    var n = x.length;","    var out = $u.zeros(n + abs(k),n + abs(k));","    for (var i = 0;i < n;i++) {","      if (k >= 0) {","       out[i][i + abs(k)] = x[i];","     }","     if (k < 0) {","       out[i + abs(k)][i] = x[i];","     }","   }","   return out;"," } else"," if ($u.ismatrix(x)) {","  var out = [];","  for (var i = 0;i < $u.nrows(x) - abs(k);i++) {","    if (k >= 0) {","      out.push(x[i][i + abs(k)]);","    }","    if (k < 0) {","      out.push(x[i + abs(k)][i]);","    }","  }","  return out;","} else {","  throw new Error('unknown input');","}","}","","}"],"l":{"4":1,"38":1,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0,"55":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"67":0,"69":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/end.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/end.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":10},"end":{"line":24,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":49,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":47,"column":2}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":31}},"6":{"start":{"line":29,"column":2},"end":{"line":46,"column":44}},"7":{"start":{"line":30,"column":3},"end":{"line":30,"column":12}},"8":{"start":{"line":32,"column":2},"end":{"line":46,"column":44}},"9":{"start":{"line":33,"column":3},"end":{"line":33,"column":23}},"10":{"start":{"line":35,"column":2},"end":{"line":46,"column":44}},"11":{"start":{"line":36,"column":3},"end":{"line":38,"column":4}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":48}},"13":{"start":{"line":39,"column":3},"end":{"line":39,"column":47}},"14":{"start":{"line":40,"column":3},"end":{"line":44,"column":4}},"15":{"start":{"line":41,"column":4},"end":{"line":41,"column":15}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":20}},"17":{"start":{"line":46,"column":2},"end":{"line":46,"column":44}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":22},"end":{"line":28,"column":24}},{"start":{"line":28,"column":27},"end":{"line":28,"column":30}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"5":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"6":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":3},"end":{"line":36,"column":3}},{"start":{"line":36,"column":3},"end":{"line":36,"column":3}}]},"7":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":7},"end":{"line":36,"column":25}},{"start":{"line":36,"column":30},"end":{"line":36,"column":38}},{"start":{"line":36,"column":42},"end":{"line":36,"column":49}}]},"8":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":3},"end":{"line":40,"column":3}},{"start":{"line":40,"column":3},"end":{"line":40,"column":3}}]}},"code":["/**"," * Indexing"," */"," module.exports = function($u) {","/**"," * @method end"," * @summary Last index in array or matrix"," * @description Last index in array or matrix. Indexing is in the range [0...N-1]"," *  "," * @param  {array|matrix} x values"," * @param  {number} dim\t(only for matrix) -1: [rows,columns], 0: rows, 1: column (def: -1)"," * @return {number|array}   "," * "," * @example"," * ubique.end([5,6,3]);"," * // 2"," * "," * ubique.end([[4,5,0],[-1,2,-3]]);"," * // [1, 2]"," * "," * ubique.end([[4,5,0],[-1,2,-3]],0);"," * // 1"," */"," $u.end = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tdim = dim == null ? -1 : dim;"," \tif ($u.isnumber(x)) {"," \t\treturn x;"," \t} else "," \tif ($u.isarray(x)) {"," \t\treturn x.length - 1;"," \t} else"," \tif ($u.ismatrix(x)) {"," \t\tif (!$u.isinteger(dim) || (dim < -1 || dim > 1)) {"," \t\t\tthrow new Error('dimension must be -1,0,1');"," \t\t}"," \t\tvar idx = [$u.nrows(x) - 1,$u.ncols(x) - 1];"," \t\tif (dim === -1) {"," \t\t\treturn idx;"," \t\t} else {"," \t\t\treturn idx[dim];"," \t\t}"," \t} else "," \tthrow new Error('unkown input arguments'); \t"," }","","}","",""],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"32":0,"33":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"43":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/eye.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/eye.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":30}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":10},"end":{"line":29,"column":21}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":49,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":48,"column":1}},"3":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":50}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":49}},"6":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"8":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":35}},"11":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":13}},"13":{"start":{"line":44,"column":2},"end":{"line":46,"column":2}},"14":{"start":{"line":45,"column":3},"end":{"line":45,"column":20}},"15":{"start":{"line":47,"column":1},"end":{"line":47,"column":15}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]}},"code":["/**","* Array Creation and Concatenation","*/","module.exports = function($u) {","/**"," * @method eye"," * @summary Identity matrix"," * @description Identity matrix"," * "," * @param  {number|array|...} args variable input arguments (max 2)"," * @return {number|matrix}     "," *"," * @example"," * ubique.eye(0);"," * // []"," * "," * ubique.eye(1);"," * // [ [ 1 ] ]"," * "," * ubique.eye(2);"," * // [ [ 1, 0 ], [ 0, 1 ] ]"," * "," * ubique.eye([2,1]);"," * // [ [ 1 ], [ 0 ] ]"," * "," * ubique.eye(2,3);"," * // [ [ 1, 0, 0 ], [ 0, 1, 0 ] ]"," */"," $u.eye = function() {","  if (arguments.length === 0 ) {","    throw new Error('not enough input arguments');","  }","  var _args = $u.argsarray.apply(null,arguments);","  if ($u.ismatrix(_args)) {","    _args = _args[0];","  }","  if (_args.length === 1) {","    _args = [_args[0],_args[0]];","  }","  var matrix =  $u.matrix(_args,0);","  if ($u.isnumber(matrix)) {","    return 1;","  }","  for (var i = 0;i < Math.min.apply(Math,$u.size(matrix));i++) {","   matrix[i][i] = 1;"," }"," return matrix;","}","}"],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"42":0,"44":0,"45":0,"47":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/falses.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/falses.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":13},"end":{"line":29,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":43,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":41,"column":1}},"3":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":50}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":49}},"6":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"8":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":32}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method falses"," * @summary Create array of all false"," * @description Create array of all false"," * "," * @param  {number|array|...} args variable input arguments (max 2)"," * @return {number|matrix}     "," *"," * @example"," * ubique.falses(0);"," * // []"," * "," * ubique.falses(1);"," * // [ [ false ] ]"," * "," * ubique.falses(2);"," * // [ [ false, false ], [ false, false ] ]"," * "," * ubique.falses([2,1]);"," * // [ [ false ], [ false ] ]"," * "," * ubique.falses(2,3);"," * // [ [ false, false, false ], [ false, false, false ] ]"," */"," $u.falses = function() {","  if (arguments.length === 0 ) {","    throw new Error('not enough input arguments');","  }","  var _args = $u.argsarray.apply(null,arguments);","  if ($u.ismatrix(_args)) {","    _args = _args[0];","  }","  if (_args.length === 1) {","    _args = [_args[0],_args[0]];","  }","  return $u.matrix(_args,false);","}","","}"],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/find.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/find.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":11},"end":{"line":20,"column":23}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":22},"end":{"line":31,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":35,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":34,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":52}},"7":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":22}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":35}},"10":{"start":{"line":31,"column":2},"end":{"line":33,"column":4}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":26}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]}},"code":["/**"," * Indexing"," */"," module.exports = function($u) {","/**"," * @method find"," * @summary Find indices of nonzero elements"," * @description Find indices of nonzero elements"," *"," * @param  {array|matrix} x values"," * @return {array|matrix}   "," *"," * @example"," * ubique.find([0.3,-0.4,0.5,0.9].map(function(a){return a > 0}));"," * // [ 0, 2, 3 ]"," * "," * ubique.find([[true,true],[false,true]]);"," * // [ 0, 1, 3 ]"," */"," $u.find = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  if ($u.isnumber(x)) {","    throw Error('input must be an array or matrix');","  }","  if ($u.ismatrix(x)) {","    x = $u.flatten(x); // flatten by rows","  }","  var dummy = $u.colon(0,x.length);","  return dummy.filter(function(el) {","    return x[el] === true;","  })","}","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"30":0,"31":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/fix.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/fix.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":22}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":13},"end":{"line":27,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":33,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":31,"column":2}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":3},"end":{"line":25,"column":49}},"5":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"6":{"start":{"line":28,"column":3},"end":{"line":28,"column":47}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":29}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":18},"end":{"line":28,"column":30}},{"start":{"line":28,"column":33},"end":{"line":28,"column":46}}]}},"code":["/**"," * Arithmetic Operations"," */"," module.exports = function($u) {","/**"," * @method fix"," * @summary Round toward zero"," * @description Round toward zero"," * "," * @param  {number|array|matrix} x number or array of values"," * @return {number|array|matrix}"," *"," * @example"," * ubique.fix(3.78);"," * // 3"," * "," * ubique.fix([4.51,-1.4]);"," * // [ 4, -1 ]"," * "," * ubique.fix([[4.51,-1.4],[3.78,0.01]]);"," * // [ [ 4, -1 ], [ 3, 0 ] ]"," */"," $u.fix = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tvar _fix = function(a) {"," \t\treturn a < 0 ? Math.ceil(a) : Math.floor(a);"," \t}"," \treturn $u.arrayfun(x,_fix);"," }","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0,"28":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/flatten.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/flatten.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":14},"end":{"line":27,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":49,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":48,"column":2}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"6":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"7":{"start":{"line":33,"column":3},"end":{"line":33,"column":12}},"8":{"start":{"line":35,"column":2},"end":{"line":47,"column":3}},"9":{"start":{"line":36,"column":3},"end":{"line":38,"column":4}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":24}},"11":{"start":{"line":39,"column":3},"end":{"line":39,"column":43}},"12":{"start":{"line":40,"column":3},"end":{"line":44,"column":4}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":27}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":13}},"15":{"start":{"line":46,"column":3},"end":{"line":46,"column":46}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"4":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":20}},{"start":{"line":32,"column":24},"end":{"line":32,"column":37}}]},"5":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"6":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":3},"end":{"line":36,"column":3}},{"start":{"line":36,"column":3},"end":{"line":36,"column":3}}]},"7":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":3},"end":{"line":40,"column":3}},{"start":{"line":40,"column":3},"end":{"line":40,"column":3}}]}},"code":["/**"," * Sorting and Reshaping Arrays"," */"," module.exports = function($u) {","/**"," * @method flatten"," * @summary Flatten a matrix"," * @description Flatten a matrix and returns an array. The concatenation is made by columns (default)"," * "," * @param  {matrix} x matrix of elements"," * @param  {number} dim dimension selected, 1: column 0: row (def: 0)"," * @return {array}  "," *"," * @example"," * ubique.flatten([[5,6],[7,8]]);"," * // [ 5, 7, 6, 8 ]"," *"," * // flatten by rows"," * ubique.flatten([[1,1,-1],[1,-2,3],[2,3,1]]);"," * // [ 1, 1, -1, 1, -2, 3, 2, 3, 1 ]"," *"," * // flatten by columns"," * ubique.flatten([[1,1,-1],[1,-2,3],[2,3,1]],1);"," * // [ 1, 1, 2, 1, -2, 3, -1, 3, 1 ]"," * "," */"," $u.flatten = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tdim = dim == null ? 0 : dim;"," \tif ($u.isnumber(x) || $u.isarray(x)) {"," \t\treturn x;"," \t}"," \tif ($u.ismatrix(x)) {"," \t\tif (dim === 1) {"," \t\t\tx = $u.transpose(x);"," \t\t}"," \t\tx = Array.prototype.concat.apply([], x);"," \t\tif (x.some(Array.isArray)) {"," \t\t\treturn this.flatten(x);"," \t\t} else {"," \t\t\treturn x;"," \t\t}"," \t} else {"," \t\tthrow new Error('unknown input arguments');"," \t}"," }","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"43":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/flipdim.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/flipdim.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":14},"end":{"line":27,"column":30}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":17},"end":{"line":32,"column":29}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":52,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":51,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"6":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":33}},"8":{"start":{"line":35,"column":2},"end":{"line":49,"column":3}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":13}},"10":{"start":{"line":38,"column":2},"end":{"line":49,"column":3}},"11":{"start":{"line":39,"column":4},"end":{"line":43,"column":5}},"12":{"start":{"line":40,"column":6},"end":{"line":40,"column":25}},"13":{"start":{"line":42,"column":6},"end":{"line":42,"column":15}},"14":{"start":{"line":45,"column":2},"end":{"line":49,"column":3}},"15":{"start":{"line":46,"column":4},"end":{"line":46,"column":41}},"16":{"start":{"line":48,"column":4},"end":{"line":48,"column":47}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]}},"code":["/**"," * Sorting and Reshaping Arrays"," */"," module.exports = function($u) {","/**"," * @method flipdim"," * @summary Flip order of elements in array or matrix"," * @description Flip order of elements in array or matrix"," * "," * @param  {array|matrix} x array or matrix of elements"," * @param  {number} dim dimension to apply reverse ordering 0: rows, 1: column (def: 1)"," * @return {array|matrix}     "," * "," * @example"," * ubique.flipdim([5,6,3],1);"," * // [3, 6, 5]"," * "," * ubique.flipdim([5,6,3],0);"," * // [5, 6, 3]"," * "," * ubique.flipdim([[5,6,5],[7,8,-1]]);"," * // [ [ 5, 6, 5 ], [ -1, 8, 7 ] ]"," * "," * ubique.flipdim([[5,6,5],[7,8,-1]],0);"," * // [ [ 7, 8, -1 ], [ 5, 6, 5 ] ]"," */"," $u.flipdim = function(x,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  dim = dim == null ? 1 : dim;","  var _flipdim = function(a) {","    return $u.clone(a.reverse());","  }","  if ($u.isnumber(x)) {","    return x;","  } else ","  if ($u.isarray(x)) {","    if (dim === 1) {","      return _flipdim(x);","    } else {","      return x;","    }","  } else ","  if ($u.ismatrix(x)) {","    return $u.vectorfun(1-dim,x,_flipdim)","  } else {","    throw new Error('unknown input arguments');","  }","","}","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"40":0,"42":0,"45":0,"46":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/fliplr.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/fliplr.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":13},"end":{"line":17,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":24,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":22,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":3},"end":{"line":19,"column":49}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":25}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]}},"code":["/**"," * Sorting and Reshaping Arrays"," */"," module.exports = function($u) {","/**"," * @method fliplr"," * @summary Flip matrix left to right"," * @description Flip matrix left to right"," * "," * @param  {array|matrix} x array or matrix of lements"," * @return {array|matrix}   "," *"," * @example"," * ubique.fliplr([[1,4],[2,5],[3,6]]);"," * // [ [ 4, 1 ], [ 5, 2 ], [ 6, 3 ] ]"," */"," $u.fliplr = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \treturn $u.flipdim(x,1);"," }","","}",""],"l":{"4":1,"17":1,"18":0,"19":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/flipud.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/flipud.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":13},"end":{"line":17,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":24,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":22,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":2}},"4":{"start":{"line":19,"column":3},"end":{"line":19,"column":49}},"5":{"start":{"line":21,"column":1},"end":{"line":21,"column":24}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]}},"code":["/**"," * Sorting and Reshaping Arrays"," */"," module.exports = function($u) {","/**"," * @method flipud "," * @summary Flip matrix up to down"," * @description Flip matrix up to down"," * "," * @param  {array|matrix} x array or matrix of lements"," * @return {array|matrix}   "," *"," * @example"," * ubique.flipud([[1,4],[2,5],[3,6]]);"," * // [ [ 3, 6 ], [ 2, 5 ], [ 1, 4 ] ]"," */"," $u.flipud = function(x) {","  if (arguments.length === 0) {","   throw new Error('not enough input arguments');"," }"," return $u.flipdim(x,0);","}","","}"],"l":{"4":1,"17":1,"18":0,"19":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/getcol.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/getcol.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":13},"end":{"line":21,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":39,"column":1}},"2":{"start":{"line":21,"column":1},"end":{"line":37,"column":1}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":50}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":24}},"6":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":46}},"8":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":74}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":13}},"11":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":19}},"13":{"start":{"line":36,"column":2},"end":{"line":36,"column":11}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":18},"end":{"line":25,"column":19}},{"start":{"line":25,"column":22},"end":{"line":25,"column":23}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"5":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":22}},{"start":{"line":29,"column":26},"end":{"line":29,"column":31}},{"start":{"line":29,"column":35},"end":{"line":29,"column":51}}]}},"code":["/**"," * Indexing"," */"," module.exports = function($u) {","/**"," * @method getcol"," * @summary Get a column of a matrix"," * @description Get a column of a matrix"," * "," * @param  {matrix} x matrix of elements"," * @param  {number} n column number (indexing from 0 to n - 1)"," * @return {array}   "," *"," * @example"," * ubique.getcol([[5,6,5],[7,8,-1]],0);"," * // [ 5, 7 ]"," * "," * ubique.getcol([[5,6,5],[7,8,-1]],2);"," * // [ 5, -1 ]"," */"," $u.getcol = function(x,n) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  n = n == null ? 0 : n;","  if ($u.isarray(x)) {","    throw new Error('input must be a matrix');","  }","  if (!$u.isinteger(n) || n < 0 || n >= $u.ncols(x)) {","    throw new Error('col must be an integer between 0 and N - 1 columns');","  }","  var v = [];","  for (var i = 0;i < x.length;i++) {","    v[i] = x[i][n];","  }","  return v;","}","","}"],"l":{"4":1,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/getrow.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/getrow.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":13},"end":{"line":21,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":35,"column":1}},"2":{"start":{"line":21,"column":1},"end":{"line":33,"column":2}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":50}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":24}},"6":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"7":{"start":{"line":27,"column":3},"end":{"line":27,"column":45}},"8":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":71}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":14}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":18},"end":{"line":25,"column":19}},{"start":{"line":25,"column":22},"end":{"line":25,"column":23}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"5":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":22}},{"start":{"line":29,"column":26},"end":{"line":29,"column":31}},{"start":{"line":29,"column":35},"end":{"line":29,"column":51}}]}},"code":["/**"," * Indexing"," */"," module.exports = function($u) {","/**"," * @method getrow"," * @summary Get a row of matrix"," * @description  Get a row of a matrix"," * "," * @param  {matrix} x matrix of elements"," * @param  {number} n row number (indexing from 0 to n - 1)"," * @return {array}   "," *"," * @example"," * ubique.getrow([[5,6,5],[7,8,-1]],0);"," * // [ 5, 6, 5 ]"," * "," * ubique.getrow([[5,6,5],[7,8,-1]],1);"," * // [ 7, 8, -1 ]"," */"," $u.getrow = function(x,n) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  n = n == null ? 0 : n;","  if ($u.isarray(x)) {","   throw new Error('input must be a matrix');","  }","  if (!$u.isinteger(n) || n < 0 || n >= $u.nrows(x)) {","    throw new Error('row must be an integer between 0 and N - 1 rows');","  }","  return x[n];"," }","","}"],"l":{"4":1,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"29":0,"30":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/horzcat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/horzcat.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":14},"end":{"line":21,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":26,"column":1}},"2":{"start":{"line":21,"column":1},"end":{"line":24,"column":2}},"3":{"start":{"line":22,"column":3},"end":{"line":22,"column":50}},"4":{"start":{"line":23,"column":3},"end":{"line":23,"column":48}}},"branchMap":{},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method horzcat"," * @summary Concatenate arrays or matrices horizontally"," * @description Concatenate arrays or matrices horizontally"," *              "," * @param  {array|matrix|...} args variable arguments (args1,args2,...)"," * @return {array|matrix}     "," *"," * @example"," * ubique.horzcat([[5,6,5],[7,8,-1]],[[-1,3,-1],[4,5,9]]);"," * // [ [ 5, 6, 5, -1, 3, -1 ], [ 7, 8, -1, 4, 5, 9 ] ]"," * "," * ubique.horzcat(5,6,7);"," * // [ [ 5, 6, 7 ] ]"," * "," */"," $u.horzcat = function() {","   var _args = $u.argsarray.apply(null,arguments);","   return $u.cat.apply(null,[].concat(1,_args));"," }","","}"],"l":{"4":1,"21":1,"22":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/ind2sub.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/ind2sub.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":14},"end":{"line":27,"column":35}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":17},"end":{"line":31,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":45,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":43,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"5":{"start":{"line":31,"column":2},"end":{"line":34,"column":3}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":32}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":35}},"8":{"start":{"line":35,"column":2},"end":{"line":41,"column":3}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":17}},"10":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"11":{"start":{"line":38,"column":6},"end":{"line":38,"column":40}},"12":{"start":{"line":40,"column":4},"end":{"line":40,"column":15}},"13":{"start":{"line":42,"column":2},"end":{"line":42,"column":30}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]}},"code":["/**"," * Indexing"," */"," module.exports = function($u) {","/**"," * @method ind2sub"," * @summary Multiple subscripts from linear index"," * @description Multiple subscripts from linear index. Returns an array or matrix with "," * the equivalent row and column of the corresponding index. "," * "," * @param  {array|matrix} size size of array or matrix"," * @param  {number|array} index linear indexing [0...N-1]"," * @return {array|matrix}       "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * "," * ubique.ind2sub(ubique.size(a),5);"," * // [1, 2]"," * "," * ubique.ind2sub(ubique.size(a),[0,1,2]);"," * // [[0, 0], [1, 0], [0, 1]]"," * "," * ubique.ind2sub(ubique.size([5,6,3]),2);"," * // [2, 0]"," */"," $u.ind2sub = function(size,index) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  var _ind2sub = function(siz,idx) {","    var v = $u.rem(idx, siz[0]);","    return [v ,(idx - v) / siz[0]];","  }","  if ($u.isarray(index)) {","    var out = [];","    for (var i = 0;i < index.length;i++) {","      out.push(_ind2sub(size,index[i]));","    }","    return out;","  }","  return _ind2sub(size,index);","}","","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/iscolumn.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/iscolumn.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":15},"end":{"line":17,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":27,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":25,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":3},"end":{"line":19,"column":49}},"5":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"6":{"start":{"line":22,"column":3},"end":{"line":22,"column":15}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":15}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":21}},{"start":{"line":21,"column":25},"end":{"line":21,"column":42}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**"," * @method iscolumn"," * @summary True for column vector"," * @description True for column vector"," *              "," * @param  {matrix} x input matrix"," * @return {Boolean}   "," *"," * @example"," * ubique.iscolumn([[2],[2]]);"," * // true"," */"," $u.iscolumn = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.nrows(x) > 1 && $u.ncols(x) === 1) {"," \t\treturn true;"," \t}"," \treturn false;"," }","","}"],"l":{"4":1,"17":1,"18":0,"19":0,"21":0,"22":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/isrow.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/isrow.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":27,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":25,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":3},"end":{"line":19,"column":49}},"5":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"6":{"start":{"line":22,"column":3},"end":{"line":22,"column":15}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":15}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":23}},{"start":{"line":21,"column":27},"end":{"line":21,"column":42}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**"," * @method isrow"," * @summary True for row vector"," * @description True for row vector"," *              "," * @param  {matrix} x input matrix"," * @return {Boolean}   "," *"," * @example"," * ubique.isrow([[2,2]]);"," * // true"," */"," $u.isrow = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.nrows(x) === 1 && $u.ncols(x) > 1) {"," \t\treturn true;"," \t}"," \treturn false;"," }","","}"],"l":{"4":1,"17":1,"18":0,"19":0,"21":0,"22":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/issquare.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/issquare.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":15},"end":{"line":17,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":27,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":25,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":3},"end":{"line":19,"column":49}},"5":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"6":{"start":{"line":22,"column":3},"end":{"line":22,"column":15}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":15}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**"," * @method issquare"," * @summary True for square matrix"," * @description True for square matrix"," *              "," * @param  {matrix} x input matrix"," * @return {Boolean}   "," *"," * @example"," * ubique.issquare([[9, 5], [6, 1]]);"," * // true"," */"," $u.issquare = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.nrows(x) === $u.ncols(x)) {"," \t\treturn true;"," \t}"," \treturn false;"," }","","}"],"l":{"4":1,"17":1,"18":0,"19":0,"21":0,"22":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/length.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/length.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":30,"column":1}},"2":{"start":{"line":23,"column":0},"end":{"line":28,"column":1}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":50}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":41}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**","* @method length","* @summary length of vector or largest array dimension","* @description  length of vector or largest array dimension","* ","* @param  {array|matrix} x array of elements","* @return {number}","*","* @example","* ubique.length([3,5,6]);","* // 3","* ","* ubique.length(5);","* // 1","* ","* ubique.length([[5,4],[-1,2]]);","* // 2","*/","$u.length = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return Math.max.apply(null,$u.size(x));","}","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/linspace.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/linspace.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":15},"end":{"line":19,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":34,"column":1}},"2":{"start":{"line":19,"column":1},"end":{"line":32,"column":1}},"3":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"4":{"start":{"line":21,"column":4},"end":{"line":21,"column":50}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":25}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":13}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":31}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":11}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":15}},"10":{"start":{"line":28,"column":2},"end":{"line":30,"column":2}},"11":{"start":{"line":29,"column":3},"end":{"line":29,"column":23}},"12":{"start":{"line":31,"column":1},"end":{"line":31,"column":10}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":18},"end":{"line":23,"column":20}},{"start":{"line":23,"column":23},"end":{"line":23,"column":24}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method linspace"," * @summary Create linearly spaced arrays"," * @description  Create linearly spaced arrays"," *            "," * @param  {number} a lower bound"," * @param  {number} b upper bound"," * @param  {number} n number of points"," * @return {array}"," *"," * @example"," * ubique.linspace(1,10,5);"," * // [ 1, 3.25, 5.5, 7.75, 10 ]"," */"," $u.linspace = function(a,b,n) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  n = n == null ? 10 : n;","  var v = [];","  var step = (b - a) / (n - 1);","  v[0] = a;","  v[n - 1] = b;","  for (var i = 0;i < n;i++) {","   v[i] = a + step * i;"," }"," return v;","}","","}"],"l":{"4":1,"19":1,"20":0,"21":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/logspace.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/logspace.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":15},"end":{"line":19,"column":31}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":32},"end":{"line":24,"column":45}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":27,"column":1}},"2":{"start":{"line":19,"column":1},"end":{"line":25,"column":1}},"3":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"4":{"start":{"line":21,"column":4},"end":{"line":21,"column":50}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":25}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":72}},"7":{"start":{"line":24,"column":46},"end":{"line":24,"column":69}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":18},"end":{"line":23,"column":20}},{"start":{"line":23,"column":23},"end":{"line":23,"column":24}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method logspace"," * @summary Create logarithmically spaced arrays"," * @description  Create logarithmically spaced arrays"," *            "," * @param  {number} a lower bound"," * @param  {number} b upper bound"," * @param  {number} n number of points"," * @return {array}"," *"," * @example"," * ubique.logspace(0,1,5);"," * // [ 1, 1.778279, 3.162278, 5.623413, 10 ]"," */"," $u.logspace = function(a,b,n) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  n = n == null ? 10 : n;","  return $u.linspace(a,b,n).map(function(val){return Math.pow(10,val)});","}","","}"],"l":{"4":1,"19":1,"20":0,"21":0,"23":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/matrix.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/matrix.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":13},"end":{"line":41,"column":24}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":16},"end":{"line":48,"column":34}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":100,"column":1}},"2":{"start":{"line":41,"column":1},"end":{"line":98,"column":1}},"3":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"4":{"start":{"line":43,"column":3},"end":{"line":43,"column":49}},"5":{"start":{"line":45,"column":2},"end":{"line":45,"column":48}},"6":{"start":{"line":46,"column":2},"end":{"line":46,"column":26}},"7":{"start":{"line":48,"column":2},"end":{"line":57,"column":3}},"8":{"start":{"line":49,"column":4},"end":{"line":49,"column":17}},"9":{"start":{"line":50,"column":4},"end":{"line":55,"column":5}},"10":{"start":{"line":51,"column":6},"end":{"line":51,"column":18}},"11":{"start":{"line":52,"column":6},"end":{"line":54,"column":7}},"12":{"start":{"line":53,"column":8},"end":{"line":53,"column":24}},"13":{"start":{"line":56,"column":4},"end":{"line":56,"column":15}},"14":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"15":{"start":{"line":59,"column":4},"end":{"line":59,"column":16}},"16":{"start":{"line":61,"column":2},"end":{"line":97,"column":3}},"17":{"start":{"line":62,"column":4},"end":{"line":82,"column":5}},"18":{"start":{"line":63,"column":6},"end":{"line":65,"column":7}},"19":{"start":{"line":64,"column":8},"end":{"line":64,"column":20}},"20":{"start":{"line":66,"column":6},"end":{"line":66,"column":43}},"21":{"start":{"line":68,"column":4},"end":{"line":82,"column":5}},"22":{"start":{"line":69,"column":6},"end":{"line":75,"column":7}},"23":{"start":{"line":70,"column":8},"end":{"line":74,"column":9}},"24":{"start":{"line":71,"column":10},"end":{"line":71,"column":22}},"25":{"start":{"line":73,"column":10},"end":{"line":73,"column":53}},"26":{"start":{"line":76,"column":6},"end":{"line":78,"column":7}},"27":{"start":{"line":77,"column":8},"end":{"line":77,"column":20}},"28":{"start":{"line":79,"column":6},"end":{"line":79,"column":49}},"29":{"start":{"line":81,"column":6},"end":{"line":81,"column":44}},"30":{"start":{"line":84,"column":2},"end":{"line":97,"column":3}},"31":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"32":{"start":{"line":86,"column":6},"end":{"line":86,"column":43}},"33":{"start":{"line":88,"column":4},"end":{"line":88,"column":50}},"34":{"start":{"line":90,"column":2},"end":{"line":97,"column":3}},"35":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"36":{"start":{"line":92,"column":6},"end":{"line":92,"column":18}},"37":{"start":{"line":94,"column":4},"end":{"line":94,"column":44}},"38":{"start":{"line":96,"column":4},"end":{"line":96,"column":49}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"4":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"5":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":6}},{"start":{"line":63,"column":6},"end":{"line":63,"column":6}}]},"6":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"7":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"8":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"10":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":10},"end":{"line":76,"column":26}},{"start":{"line":76,"column":30},"end":{"line":76,"column":46}}]},"11":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"12":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"13":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":28}},{"start":{"line":85,"column":32},"end":{"line":85,"column":52}}]},"14":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"15":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"16":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":21}},{"start":{"line":91,"column":25},"end":{"line":91,"column":38}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method matrix"," * @summary Create a matrix object"," * @description Create a matrix object with minimum 1 argument, max 3 arguments. The first arg can be a number or array, the last one is the value to"," * replicate in the matrix. Default value is NULL. Example: a matrix(2) returns an array of array with dimension 2x2, a matrix(2,3) or matrix([2,3]) a matrix "," * with dimension 2x3 and values equal to NULL."," * "," * @param  {number|string|boolean|array|...} args variable input arguments (max 3)"," * @return {matrix}       "," *"," * @example"," * ubique.matrix(0);"," * // [ [] ]"," *"," * ubique.matrix([0,0]);"," * // [ [] ]"," * "," * ubique.matrix(2);"," * // [ [ null, null ], [ null, null ] ]"," * "," * ubique.matrix([2,3]);"," * // [ [ null, null, null ], [ null, null, null ] ]"," * "," * ubique.matrix(2,3);"," * // [ [ null, null, null ], [ null, null, null ] ]"," * "," * ubique.matrix([2,3],-1);"," * // [ [ -1, -1, -1 ], [ -1, -1, -1 ] ]"," * "," *"," * ubique.matrix(3,1,'matrix');"," * // [ [ 'matrix' ], [ 'matrix' ], [ 'matrix' ] ]"," *"," * ubique.matrix(0,5,true);"," * // [ [] ]"," */"," $u.matrix = function() {"," \tif (arguments.length === 0 ) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  var args = $u.argsarray.apply(null,arguments);","  var nargs = args.length;","","  var _matrix = function(x,y,val) {","    var mat = [];","    for (var i = 0; i < x; i++) {","      mat[i] = [];","      for (var j = 0; j < y; j++) {","        mat[i][j] = val;","      }","    }","    return mat;","  }","  if ($u.isempty(args)) {","    return [[]];","  }","  if (nargs === 1) {","    if ($u.isnumber(args[0])) {","      if (args[0] === 0) {","        return [[]];","      }","      return _matrix(args[0],args[0],null);","    } else","    if ($u.isarray(args[0])) {","      if (args[0].length === 1) {","        if (args[0][0] === 0) {","          return [[]];","        } else {","          return _matrix(args[0][0],args[0][0],null);","        }","      }","      if (args[0][0] === 0 || args[0][1] === 0) {","        return [[]];","      }","      return _matrix(args[0][0],args[0][1],null);","    } else {","      throw new Error('unknwon input type');","    }","  } else","  if (nargs === 2) {","    if ($u.isnumber(args[0]) && $u.isnumber(args[1])) {","      return _matrix(args[0],args[1],null);","    }","    return _matrix(args[0][0],args[0][1],args[1]);","  } else","  if (nargs === 3) {","    if (args[0] === 0 || args[1] === 0) {","      return [[]];","    }","    return _matrix(args[0],args[1],args[2]);","  } else {","    throw new Error('too manny input arguments');","  }","}","","}",""],"l":{"4":1,"41":1,"42":0,"43":0,"45":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"56":0,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0,"66":0,"68":0,"69":0,"70":0,"71":0,"73":0,"76":0,"77":0,"79":0,"81":0,"84":0,"85":0,"86":0,"88":0,"90":0,"91":0,"92":0,"94":0,"96":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/mergesort.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/mergesort.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":16},"end":{"line":34,"column":33}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":14},"end":{"line":55,"column":41}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":87,"column":1}},"2":{"start":{"line":34,"column":1},"end":{"line":86,"column":1}},"3":{"start":{"line":35,"column":2},"end":{"line":35,"column":18}},"4":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"5":{"start":{"line":37,"column":4},"end":{"line":37,"column":50}},"6":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"7":{"start":{"line":40,"column":4},"end":{"line":40,"column":35}},"8":{"start":{"line":42,"column":2},"end":{"line":42,"column":24}},"9":{"start":{"line":43,"column":2},"end":{"line":43,"column":26}},"10":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"11":{"start":{"line":45,"column":4},"end":{"line":45,"column":13}},"12":{"start":{"line":47,"column":2},"end":{"line":47,"column":29}},"13":{"start":{"line":48,"column":2},"end":{"line":48,"column":29}},"14":{"start":{"line":49,"column":2},"end":{"line":49,"column":29}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":32}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":31}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":21}},"18":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"19":{"start":{"line":55,"column":2},"end":{"line":84,"column":3}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":20}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":17}},"22":{"start":{"line":58,"column":4},"end":{"line":74,"column":5}},"23":{"start":{"line":59,"column":6},"end":{"line":66,"column":7}},"24":{"start":{"line":60,"column":8},"end":{"line":60,"column":49}},"25":{"start":{"line":62,"column":6},"end":{"line":66,"column":7}},"26":{"start":{"line":63,"column":8},"end":{"line":63,"column":49}},"27":{"start":{"line":65,"column":8},"end":{"line":65,"column":65}},"28":{"start":{"line":67,"column":6},"end":{"line":73,"column":7}},"29":{"start":{"line":68,"column":8},"end":{"line":68,"column":38}},"30":{"start":{"line":69,"column":8},"end":{"line":69,"column":35}},"31":{"start":{"line":71,"column":8},"end":{"line":71,"column":38}},"32":{"start":{"line":72,"column":8},"end":{"line":72,"column":35}},"33":{"start":{"line":75,"column":4},"end":{"line":78,"column":5}},"34":{"start":{"line":76,"column":6},"end":{"line":76,"column":36}},"35":{"start":{"line":77,"column":6},"end":{"line":77,"column":33}},"36":{"start":{"line":79,"column":4},"end":{"line":82,"column":5}},"37":{"start":{"line":80,"column":6},"end":{"line":80,"column":36}},"38":{"start":{"line":81,"column":6},"end":{"line":81,"column":33}},"39":{"start":{"line":83,"column":4},"end":{"line":83,"column":24}},"40":{"start":{"line":85,"column":2},"end":{"line":85,"column":71}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"3":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":9},"end":{"line":43,"column":13}},{"start":{"line":43,"column":17},"end":{"line":43,"column":25}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"5":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":11},"end":{"line":58,"column":26}},{"start":{"line":58,"column":30},"end":{"line":58,"column":45}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"8":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]}},"code":["/**"," * Sorting and Reshaping Arrays"," */"," module.exports = function($u) {","/**"," * @method mergesort"," * @summary Sort array in ascending/descending order"," * @description  Mergesort is a divide and conquer algorithm that was invented by John von Neumann."," * A merge sort works as follows:"," * "," * 1 - Divide the unsorted list into n sublists, each containing 1 element (a list of 1 element is considered sorted)."," * 2 - Repeatedly merge sublists to produce new sorted sublists until there is only 1 sublist remaining. This will be the sorted list."," * "," * Source: [Merge sort](http://en.wikipedia.org/wiki/Merge_sort)"," *"," * Returns sorted values with sorted indexes as array of array (matrix)"," * "," * @param  {array} x array of elements"," * @param  {string} mode sorting direction, \"ascend\" (default) or \"descend\""," * @return {matrix}   "," *"," * @example"," * // mergesort with input values and indexes"," * ubique.mergesort([[9,-3,2,-12,0,1],[0,1,2,3,4,5]]);"," * // [ [ -12, -3, 0, 1, 2, 9 ], [ 3, 1, 4, 5, 2, 0 ] ]"," *"," * // with only an array of input values"," * ubique.mergesort([9,-3,2,-12,0,1]);"," * // [ [ -12, -3, 0, 1, 2, 9 ], [ 3, 1, 4, 5, 2, 0 ] ]"," * "," * ubique.mergesort([9,-3,2,-12,0,1],'descend');"," * // [ [ 9, 2, 1, 0, -3, -12 ], [ 0, 2, 5, 4, 1, 3 ] ]"," */"," $u.mergesort = function(x,mode) {","  var self = this;","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  if ($u.isarray(x)) {","    x = [x,$u.colon(0,x.length-1)];","  }","  var len = x[0].length;","  mode = mode || 'ascend';","  if (len < 2) {","    return x;","  }","  var cx = parseInt(len / 2);","  var sx = x[0].slice(0, cx);","  var sxi = x[1].slice(0,cx);","  var dx  = x[0].slice(cx, len);","  var dxi = x[1].slice(cx,len);","  var _sx = [sx,sxi];","  var _dx = [dx,dxi];","","  var merge = function(sxarr,dxarr,mode) {","    var sorted = [];","    var idx = [];","    while (sxarr[0].length && dxarr[0].length) {","      if (mode === 'ascend') {","        var compare = sxarr[0][0] <= dxarr[0][0];","      } else ","      if (mode === 'descend') {","        var compare = sxarr[0][0] >= dxarr[0][0];","      } else {","        throw new Error('sorting must be \"ascend\" or \"descend\"');","      }","      if (compare) {","        sorted.push(sxarr[0].shift());","        idx.push(sxarr[1].shift());","      } else {","        sorted.push(dxarr[0].shift());","        idx.push(dxarr[1].shift());","      }","    }","    while (sxarr[0].length) {","      sorted.push(sxarr[0].shift());","      idx.push(sxarr[1].shift());","    }","    while (dxarr[0].length) {","      sorted.push(dxarr[0].shift());","      idx.push(dxarr[1].shift());","    }","    return [sorted,idx];","  }","  return merge(self.mergesort(_sx,mode),self.mergesort(_dx,mode),mode);","}","}",""],"l":{"4":1,"34":1,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"65":0,"67":0,"68":0,"69":0,"71":0,"72":0,"75":0,"76":0,"77":0,"79":0,"80":0,"81":0,"83":0,"85":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/ncols.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/ncols.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":27,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":25,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":23}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**"," * @method ncols"," * @summary Number of columns in vector|matrix MxN"," * @description Number of columns in vector|matrix. Array ~ Row vector, returns N."," * "," * @param  {array|matrix} x array of elements"," * @return {number}   "," *"," * @example"," * ubique.ncols([5,6,7]);"," * // 3"," * "," * ubique.ncols([[3,2,7],[4,5,6]]);"," * //  3"," */"," $u.ncols = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return $u.size(x)[1];","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/ndims.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/ndims.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":11},"end":{"line":20,"column":23}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":27,"column":1}},"2":{"start":{"line":20,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":31}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**","* @method ndims","* @summary Number of array dimensions","* @description Number of array dimensions","* ","* @param  {array|matrix} x array of elements","* @return {number}  ","*","* @example","* ubique.ndims([3,5,6]);","* // 2","* ","* ubique.ndims([[3,2,7],[4,5,6]]);","* // 2","*/","$u.ndims = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return $u.length($u.size(x));","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/nrows.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/nrows.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":27,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":25,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":23}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**"," * @method nrows"," * @summary Number of rows in vector|matrix MxN"," * @description Number of rows in vector|matrix. Array ~ Row vector, returns 1."," * "," * @param  {array|matrix} x array of elements"," * @return {number}  "," *"," * @example"," * ubique.nrows([5,6,7]);"," * // 1"," * "," * ubique.nrows([[3,2,7],[4,5,6]]);"," * // 2"," */"," $u.nrows = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  return $u.size(x)[0];","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/numel.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/numel.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":28,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":26,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":24}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":27}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","\t/**"," * @method numel"," * @summary Number of elements in an array"," * @description Number of elements in an array"," * "," * @param  {array|matrix} x array of elements"," * @return {number} "," *"," * @example"," * ubique.numel([3,5,6]);"," * // 3"," * "," * ubique.numel([[3,2,7],[4,5,6]]);"," * // 6"," */"," $u.numel = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  var size = $u.size(x);","  return size[0] * size[1];","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/ones.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/ones.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":11},"end":{"line":29,"column":22}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":43,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":41,"column":1}},"3":{"start":{"line":30,"column":1},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":50}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":49}},"6":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"8":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":28}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},{"start":{"line":30,"column":1},"end":{"line":30,"column":1}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method ones"," * @summary Create array of all ones"," * @description Create array of all ones"," * "," * @param  {number|array|...} args variable input arguments (max 2)"," * @return {number|matrix}     "," *"," * @example"," * ubique.ones(0);"," * // []"," * "," * ubique.ones(1);"," * // [ [ 1 ] ]"," * "," * ubique.ones(2);"," * // [ [ 1, 1 ], [ 1, 1 ] ]"," * "," * ubique.ones([2,1]);"," * // [ [ 1 ], [ 1 ] ]"," * "," * ubique.ones(2,3);"," * // [ [ 1, 1, 1 ], [ 1, 1, 1 ] ]"," */"," $u.ones = function() {"," if (arguments.length === 0 ) {","    throw new Error('not enough input arguments');","  }","  var _args = $u.argsarray.apply(null,arguments);","  if ($u.ismatrix(_args)) {","    _args = _args[0];","  }","  if (_args.length === 1) {","    _args = [_args[0],_args[0]];","  }","  return $u.matrix(_args,1);","}","","}"],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/rand.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/rand.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":11},"end":{"line":29,"column":22}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":14},"end":{"line":32,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":66,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":65,"column":2}},"3":{"start":{"line":30,"column":2},"end":{"line":31,"column":27}},"4":{"start":{"line":32,"column":2},"end":{"line":41,"column":3}},"5":{"start":{"line":33,"column":3},"end":{"line":33,"column":26}},"6":{"start":{"line":34,"column":3},"end":{"line":39,"column":4}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":26}},"8":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"9":{"start":{"line":37,"column":5},"end":{"line":37,"column":31}},"10":{"start":{"line":40,"column":3},"end":{"line":40,"column":14}},"11":{"start":{"line":42,"column":2},"end":{"line":64,"column":47}},"12":{"start":{"line":43,"column":3},"end":{"line":43,"column":24}},"13":{"start":{"line":45,"column":2},"end":{"line":64,"column":47}},"14":{"start":{"line":46,"column":3},"end":{"line":53,"column":4}},"15":{"start":{"line":47,"column":4},"end":{"line":47,"column":36}},"16":{"start":{"line":49,"column":3},"end":{"line":53,"column":4}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":42}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":42}},"19":{"start":{"line":55,"column":2},"end":{"line":64,"column":47}},"20":{"start":{"line":56,"column":3},"end":{"line":58,"column":4}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":36}},"22":{"start":{"line":59,"column":3},"end":{"line":59,"column":50}},"23":{"start":{"line":61,"column":2},"end":{"line":64,"column":47}},"24":{"start":{"line":62,"column":3},"end":{"line":62,"column":44}},"25":{"start":{"line":64,"column":2},"end":{"line":64,"column":47}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":3},"end":{"line":46,"column":3}},{"start":{"line":46,"column":3},"end":{"line":46,"column":3}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":3},"end":{"line":49,"column":3}},{"start":{"line":49,"column":3},"end":{"line":49,"column":3}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":3},"end":{"line":56,"column":3}},{"start":{"line":56,"column":3},"end":{"line":56,"column":3}}]},"7":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":7},"end":{"line":56,"column":28}},{"start":{"line":56,"column":32},"end":{"line":56,"column":53}}]},"8":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method rand"," * @summary Uniformly distribuited pseudorandom numbers"," * @description Uniformly distribuited pseudorandom numbers"," * "," * @param  {number|array|...} args variable input arguments (max 2)"," * @return {number|matrix}    "," *"," * @example"," * ubique.rand();"," * // 0.1455961789470166"," * ubique.rand(0);"," * // []"," * ubique.rand(1);"," * // [[0.12391899712383747]]"," * ubique.rand(2);"," * // [[0.33334478829056025, 0.09839745867066085],[0.6006140187382698, 0.3131265211850405]]"," * ubique.rand([2,1]);"," * // [[0.40439655422233045], [0.7663801296148449]]"," * ubique.rand(1,2);"," * // [[0.16782891773618758, 0.5958379742223769]]"," * ubique.rand(2,3);"," * // [[0.890318026766181, 0.7398379456717521, 0.6165686929598451], [0.7234933257568628, 0.9895968120545149, 0.875643968814984]]"," */"," $u.rand = function() {"," \tvar _args = arguments,"," \tnargs = arguments.length;"," \tvar _rand = function(x,y) {"," \t\tvar out = new Array(x);"," \t\tfor (var i = 0;i < x;i++) {"," \t\t\tout[i] = new Array(y);"," \t\t\tfor (j = 0; j < y; j++) {"," \t\t\t\tout[i][j] = Math.random();"," \t\t\t}"," \t\t}"," \t\treturn out;"," \t}"," \tif (nargs === 0) {"," \t\treturn Math.random();"," \t} else"," \tif (nargs === 1) {"," \t\tif ($u.isnumber(_args[0])) {"," \t\t\treturn _rand(_args[0],_args[0]);"," \t\t} else "," \t\tif ($u.isarray(_args[0])) {"," \t\t\treturn _rand(_args[0][0],_args[0][1]);"," \t\t} else {"," \t\t\tthrow new Error('unknwon input type');"," \t\t}"," \t} else"," \tif (nargs === 2) {"," \t\tif ($u.isnumber(_args[0]) && $u.isnumber(_args[1])) {"," \t\t\treturn _rand(_args[0],_args[1]);"," \t\t}"," \t\treturn _rand(_args[0][0],_args[0][1],_args[1]);"," \t} else"," \tif (nargs === 3) {"," \t\treturn _rand(_args[0],_args[1],_args[2]);"," \t} else"," \tthrow new Error('too manny input arguments');"," }","}"],"l":{"4":1,"29":1,"30":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"40":0,"42":0,"43":0,"45":0,"46":0,"47":0,"49":0,"50":0,"52":0,"55":0,"56":0,"57":0,"59":0,"61":0,"62":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/repmat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/repmat.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":29}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":54,"column":1}},"2":{"start":{"line":30,"column":1},"end":{"line":52,"column":2}},"3":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":32,"column":3},"end":{"line":32,"column":49}},"5":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"6":{"start":{"line":35,"column":3},"end":{"line":35,"column":9}},"7":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"8":{"start":{"line":38,"column":3},"end":{"line":38,"column":19}},"9":{"start":{"line":40,"column":2},"end":{"line":40,"column":24}},"10":{"start":{"line":41,"column":2},"end":{"line":41,"column":43}},"11":{"start":{"line":42,"column":2},"end":{"line":50,"column":3}},"12":{"start":{"line":43,"column":3},"end":{"line":49,"column":4}},"13":{"start":{"line":44,"column":4},"end":{"line":48,"column":5}},"14":{"start":{"line":45,"column":5},"end":{"line":47,"column":6}},"15":{"start":{"line":46,"column":6},"end":{"line":46,"column":62}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":13}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":20}},{"start":{"line":37,"column":24},"end":{"line":37,"column":37}},{"start":{"line":37,"column":41},"end":{"line":37,"column":56}}]}},"code":["/**"," * Sorting and Reshaping Arrays"," */"," module.exports = function($u) {","/**"," * @method  repmat"," * @summary Replicate and tile array"," * @description  Replicate and tile array"," *"," * @param  {number|array|matrix|boolean} x value assigned to every elements of array or matrix"," * @param  {number} m number of matrix rows"," * @param  {number} n number of matrix columns"," * @return {matrix}     "," *"," * @example"," * var l = [[1,1,-1],[1,-2,3],[2,3,1]];"," * "," * ubique.repmat(10,3);"," * // [ [ 10, 10, 10 ], [ 10, 10, 10 ], [ 10, 10, 10 ] ]"," * "," * ubique.repmat(0.5,3,2);"," * // [ [ 0.5, 0.5 ], [ 0.5, 0.5 ], [ 0.5, 0.5 ] ]"," * "," * ubique.repmat([5,6,3],1,2);"," * // [ [ 5, 6, 3, 5, 6, 3 ] ]"," * "," * ubique.repmat([[9, 5],[6, 1]],2);"," * // [ [ 9, 5, 9, 5 ], [ 6, 1, 6, 1 ], [ 9, 5, 9, 5 ], [ 6, 1, 6, 1 ] ]"," */"," $u.repmat = function(x,m,n) {"," \tif (arguments.length < 2) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif (arguments.length === 2) {"," \t\tn = m;"," \t}"," \tif ($u.isnumber(x) || $u.isarray(x) || $u.islogical(x)) {"," \t\tx = $u.tomat(x);"," \t}"," \tvar size = $u.size(x);"," \tvar out = $u.matrix(size[0]*m,size[1]*n);"," \tfor (var i = 0; i < m; i++) {"," \t\tfor (var j = 0; j < n; j++) {"," \t\t\tfor (var ii = 0; ii < size[0]; ii++) {"," \t\t\t\tfor (var jj = 0; jj < size[1]; jj++) {"," \t\t\t\t\tout[(i * size[0]) + ii][(j * size[1]) + jj] = x[ii][jj];"," \t\t\t\t}"," \t\t\t}"," \t\t}"," \t}"," \treturn out;"," }","","}"],"l":{"4":1,"30":1,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"51":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/reshape.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/reshape.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":14},"end":{"line":35,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":72,"column":1}},"2":{"start":{"line":35,"column":1},"end":{"line":71,"column":2}},"3":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"4":{"start":{"line":37,"column":3},"end":{"line":37,"column":49}},"5":{"start":{"line":39,"column":2},"end":{"line":39,"column":33}},"6":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"7":{"start":{"line":41,"column":3},"end":{"line":41,"column":57}},"8":{"start":{"line":43,"column":2},"end":{"line":43,"column":26}},"9":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}},"10":{"start":{"line":45,"column":2},"end":{"line":45,"column":29}},"11":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"12":{"start":{"line":47,"column":3},"end":{"line":47,"column":64}},"13":{"start":{"line":49,"column":2},"end":{"line":69,"column":3}},"14":{"start":{"line":50,"column":3},"end":{"line":50,"column":12}},"15":{"start":{"line":52,"column":2},"end":{"line":69,"column":3}},"16":{"start":{"line":53,"column":3},"end":{"line":57,"column":4}},"17":{"start":{"line":54,"column":4},"end":{"line":54,"column":13}},"18":{"start":{"line":56,"column":4},"end":{"line":56,"column":27}},"19":{"start":{"line":59,"column":2},"end":{"line":69,"column":3}},"20":{"start":{"line":60,"column":3},"end":{"line":60,"column":32}},"21":{"start":{"line":61,"column":3},"end":{"line":61,"column":32}},"22":{"start":{"line":62,"column":3},"end":{"line":65,"column":4}},"23":{"start":{"line":63,"column":4},"end":{"line":63,"column":34}},"24":{"start":{"line":64,"column":4},"end":{"line":64,"column":33}},"25":{"start":{"line":66,"column":3},"end":{"line":66,"column":14}},"26":{"start":{"line":68,"column":3},"end":{"line":68,"column":46}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":24},"end":{"line":39,"column":25}},{"start":{"line":39,"column":28},"end":{"line":39,"column":32}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":22}},{"start":{"line":40,"column":26},"end":{"line":40,"column":42}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"7":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":3},"end":{"line":53,"column":3}},{"start":{"line":53,"column":3},"end":{"line":53,"column":3}}]},"9":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":7},"end":{"line":53,"column":18}},{"start":{"line":53,"column":22},"end":{"line":53,"column":33}}]},"10":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]}},"code":["/**"," * Sorting and Reshaping Arrays"," */"," module.exports = function($u) {"," /**"," * @method  reshape"," * @summary Reshape array or matrix with custom values"," * @description  Reshape array or matrix with custom values based on rows values of X"," *"," * @param  {array|matrix} x array or matrix of elements"," * @param  {number} m number of rows for the new matrix"," * @param  {number} n number of cols for the new matrix"," * @param  {number} flag flag 0: rowwise element, 1: columnwise (def: 0)"," * @return {matrix}     "," *"," * @example "," * ubique.reshape([5,6,3],3,1);"," * // [ [ 5 ], [ 6 ], [ 3 ] ]"," *"," * ubique.reshape([5,6,3],1,3);"," * // [ 5, 6, 3 ]"," * "," * ubique.reshape([[-1,3,-1],[4,5,9]],3,2);"," * // [ [ -1, 4 ], [ 3, 5 ], [ -1, 9 ] ]"," *"," * ubique.reshape([[-1,3,-1],[4,5,9]],3,2,1);"," * // [ [ -1, 5 ], [ 4, -1 ], [ 3, 9 ] ]"," * "," * ubique.reshape([[-1,3,-1],[4,5,9]],6,1);"," * // [ [ -1 ], [ 3 ], [ -1 ], [ 4 ], [ 5 ], [ 9 ] ]"," *"," * ubique.reshape([[-1,3,-1],[4,5,9]],6,1,1);"," * // [ [ -1 ], [ 4 ], [ 3 ], [ 5 ], [ -1 ], [ 9 ] ]"," */"," $u.reshape = function(x,m,n,flag) {"," \tif (arguments.length < 3) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  flag = flag == null ? 0 : flag;"," \tif (!$u.isinteger(m) || !$u.isinteger(n)) {"," \t\tthrow new Error('dimensions must be integer numbers');"," \t}"," \tvar nrows = $u.nrows(x);"," \tvar ncols = $u.ncols(x);"," \tvar totsiz = nrows * ncols;"," \tif ((m * n) !== totsiz ) {"," \t\tthrow new Error('total number of elements must be the same');"," \t}"," \tif ($u.isnumber(x)) {"," \t\treturn x;"," \t} else "," \tif ($u.isarray(x)) {"," \t\tif (m === nrows && n === ncols) {"," \t\t\treturn x;"," \t\t} else {"," \t\t\treturn $u.transpose(x);"," \t\t}"," \t} else "," \tif ($u.ismatrix(x)) {"," \t\tvar out = $u.matrix(m,n,NaN);"," \t\tvar vec = $u.flatten(x,flag); // flatten by rows"," \t\tfor (var i = 0;i < m * n;i++) {"," \t\t\tvar idx = $u.ind2sub([m,n],i);"," \t\t\tout[idx[0]][idx[1]] = vec[i];"," \t\t}"," \t\treturn out;"," \t} else {"," \t\tthrow new Error('unknown input arguments');"," \t}",""," }","}"],"l":{"4":1,"35":1,"36":0,"37":0,"39":0,"40":0,"41":0,"43":0,"44":0,"45":0,"46":0,"47":0,"49":0,"50":0,"52":0,"53":0,"54":0,"56":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"66":0,"68":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/setcol.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/setcol.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":13},"end":{"line":23,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":40,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":38,"column":1}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":50}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"6":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":24}},"8":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":74}},"10":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":24}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":13}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":18},"end":{"line":27,"column":19}},{"start":{"line":27,"column":22},"end":{"line":27,"column":23}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"5":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":22}},{"start":{"line":31,"column":26},"end":{"line":31,"column":31}},{"start":{"line":31,"column":35},"end":{"line":31,"column":53}}]}},"code":["/**"," * Indexing"," */"," module.exports = function($u) {","/**"," * @method setcol"," * @summary Set a column of a matrix"," * @description Set a column of a matrix. If X is an array, it is auto-converted to"," * a column vector."," * "," * @param  {array|vector} x array or vector Mx1"," * @param  {matrix} mat matrix MxN of values"," * @param  {number} n column number (indexing from 0 to n - 1)"," * @return {matrix}   "," *"," * @example"," * ubique.setcol([2,0],[[5,6,5],[7,8,-1]],0);"," * // [ [ 2, 6, 5 ], [ 0, 8, -1 ] ]"," *"," * ubique.setcol([9,21],[[5,6,5],[7,8,-1]],2);"," * // [ [ 5, 6, 9 ], [ 7, 8, 21 ] ]"," */"," $u.setcol = function(x,mat,n) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  n = n == null ? 0 : n;","  if ($u.isarray(x)) {","    x = $u.transpose(x);","  }","  if (!$u.isinteger(n) || n < 0 || n >= $u.ncols(mat)) {","    throw new Error('col must be an integer between 0 and N - 1 columns');","  }","  for (var i = 0;i < $u.nrows(mat);i++) {","    mat[i][n] = x[i][0];","  }","  return mat;","}","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/setrow.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/setrow.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":13},"end":{"line":23,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":40,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":38,"column":2}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":50}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"6":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"7":{"start":{"line":29,"column":3},"end":{"line":29,"column":11}},"8":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":71}},"10":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":24}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":13}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":18},"end":{"line":27,"column":19}},{"start":{"line":27,"column":22},"end":{"line":27,"column":23}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"5":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":22}},{"start":{"line":31,"column":26},"end":{"line":31,"column":31}},{"start":{"line":31,"column":35},"end":{"line":31,"column":53}}]}},"code":["/**"," * Indexing"," */"," module.exports = function($u) {","/**"," * @method setrow"," * @summary Set a row of matrix"," * @description Set a row of a matrix.If X is an array, it is auto-converted to"," * a row vector."," * "," * @param  {array|vector} x array or vector 1xN"," * @param  {matrix} mat matrix MxN of values"," * @param  {number} n column number (indexing from 0 to n - 1)"," * @return {matrix}   "," *"," * @example"," * ubique.setrow([2,0,-2],[[5,6,5],[7,8,-1]],0);"," * // [ [ 2, 0, -2 ], [ 7, 8, -1 ] ]"," *"," * ubique.setrow([9,21,57],[[5,6,5],[7,8,-1]],1);"," * // [ [ 5, 6, 5 ], [ 9, 21, 57 ] ]"," */"," $u.setrow = function(x,mat,n) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  n = n == null ? 0 : n;","  if ($u.isarray(x)) {","   x = [x];","  }","  if (!$u.isinteger(n) || n < 0 || n >= $u.nrows(mat)) {","    throw new Error('row must be an integer between 0 and N - 1 rows');","  }","  for (var i = 0;i < $u.ncols(mat);i++) {","    mat[n][i] = x[0][i];","  }","  return mat;"," }","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/size.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/size.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":11},"end":{"line":33,"column":23}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":59,"column":1}},"2":{"start":{"line":33,"column":1},"end":{"line":57,"column":1}},"3":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"4":{"start":{"line":35,"column":3},"end":{"line":35,"column":49}},"5":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"6":{"start":{"line":38,"column":3},"end":{"line":38,"column":41}},"7":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"8":{"start":{"line":41,"column":4},"end":{"line":41,"column":24}},"9":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"10":{"start":{"line":44,"column":4},"end":{"line":44,"column":18}},"11":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"12":{"start":{"line":47,"column":4},"end":{"line":47,"column":24}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":21}},"14":{"start":{"line":50,"column":2},"end":{"line":50,"column":16}},"15":{"start":{"line":51,"column":2},"end":{"line":55,"column":2}},"16":{"start":{"line":52,"column":3},"end":{"line":52,"column":18}},"17":{"start":{"line":53,"column":3},"end":{"line":53,"column":12}},"18":{"start":{"line":54,"column":3},"end":{"line":54,"column":18}},"19":{"start":{"line":56,"column":1},"end":{"line":56,"column":13}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"3":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":18}},{"start":{"line":37,"column":22},"end":{"line":37,"column":39}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"7":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":9},"end":{"line":51,"column":29}},{"start":{"line":51,"column":33},"end":{"line":51,"column":48}}]}},"code":["/**"," * Array Dimensions"," */"," module.exports = function($u) {","/**"," * @method size"," * @summary Size of N-D array"," * @description Size of N-D array. N-D array is equal to MxN matrix, "," * 1-D Array is equal to 1xN, Number is equal to 1x1 array"," * "," * @param  {string|number|array|matrix} x array of elements"," * @return {array}  "," *"," * @example"," * ubique.size([[[[5,6,5],[7,8,-1]]]]);"," * // [ 1, 1, 2, 3 ]"," * "," * ubique.size([[3,2,7],[4,5,6]]);"," * //  [ 2, 3 ]"," * "," * ubique.size([5,4,4]);"," * // [ 1, 3 ]"," * "," * ubique.size(5);"," * // [ 1, 1 ]"," * "," * ubique.size('ubique');"," * // [ 1, 6 ]"," * "," * ubique.size([['first','second']]);"," * // [ 1, 2 ]"," */"," $u.size = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isnull(x) || $u.isundefined(x)) {"," \t\tthrow new Error('unknown input type');"," \t}","  if ($u.isstring(x)) {","    return [1,x.length];","  }","  if ($u.isnumber(x)) {","    return [1, 1];","  }","  if ($u.isarray(x)) {","    return [1,x.length];","  }","  var siz = x.length;","  var _siz = [];","  while (!$u.isundefined(siz) && !$u.isstring(x)) {","   _siz.push(siz);","   x = x[0];","   siz = x.length;"," } "," return _siz;","}","","}"],"l":{"4":1,"33":1,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0,"46":0,"47":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/sort.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/sort.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":32}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":14},"end":{"line":32,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":45,"column":1}},"2":{"start":{"line":26,"column":1},"end":{"line":43,"column":1}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":3},"end":{"line":28,"column":49}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":40}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"7":{"start":{"line":32,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":35}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":18}},"10":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":13}},"12":{"start":{"line":39,"column":2},"end":{"line":41,"column":2}},"13":{"start":{"line":40,"column":3},"end":{"line":40,"column":24}},"14":{"start":{"line":42,"column":1},"end":{"line":42,"column":39}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":24},"end":{"line":30,"column":32}},{"start":{"line":30,"column":35},"end":{"line":30,"column":39}}]},"3":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]}},"code":["/**"," * Sorting and Reshaping Arrays"," */"," module.exports = function($u) {","/**"," * @method sort"," * @summary Sort array elements in ascending/descending order"," * @description Sort array elements in ascending/descending order. For matrix it is possibile to sort"," * along a dimension. Based on Merge Sort algorithm"," * "," * @param   {array|matrix} x array of elements"," * @param   {string} mode sorting direction, 'ascend' (default) or 'descend'"," * @param   {number} dim dimension along which to sort, 0: rows, 1: colums (def: 1)"," * @return  {array}      "," *"," * @example"," * ubique.sort([0,5,-1,3,-4,9,0],'ascend');"," * // [ -4, -1, 0, 0, 3, 5, 9 ]"," *"," * ubique.sort([[-1,3,-1],[4,5,9]],'descend');"," * // [ [ 4, 5, 9 ], [ -1, 3, -1 ] ]"," * "," * ubique.sort([[-1,3,-1],[4,5,9]],'descend',0);"," * // [ [ 3, -1, -1 ], [ 9, 5, 4 ] ]"," */"," $u.sort = function(x,mode,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  mode = mode == null ? 'ascend' : mode;","  dim = dim == null ? 1 : dim;","  var _sort = function(a,mode) {","    var out = $u.mergesort(a,mode);","    return out[0];","  }","  if ($u.isnumber(x)) {","    return x;","  }","  if ($u.isarray(x)) {","   return _sort(x,mode);"," }"," return $u.vectorfun(dim,x,_sort,mode);","}","","}"],"l":{"4":1,"26":1,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"39":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/squeeze.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/squeeze.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":24,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":40,"column":2}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"6":{"start":{"line":29,"column":3},"end":{"line":29,"column":47}},"7":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"8":{"start":{"line":32,"column":3},"end":{"line":32,"column":12}},"9":{"start":{"line":34,"column":2},"end":{"line":34,"column":24}},"10":{"start":{"line":35,"column":2},"end":{"line":38,"column":3}},"11":{"start":{"line":36,"column":3},"end":{"line":36,"column":12}},"12":{"start":{"line":37,"column":3},"end":{"line":37,"column":21}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":11}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"4":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":20}},{"start":{"line":31,"column":24},"end":{"line":31,"column":38}}]}},"code":["/**"," * Sorting and Reshaping Arrays"," */"," module.exports = function($u) {","/**"," * @method squeeze"," * @summary Remove singleton dimensions from N-D arrays (matrices)"," * @description Remove singleton dimensions N_D arrays (matrices)."," * Number returns number and 1-D array returns 1-D array."," * "," * @param  {string|number|array|matrix} x elements of X"," * @return {string|number|array|matrix}   "," *"," * @example"," * ubique.squeeze([[[[[8]]]]]);"," * // [ [ 8 ] ]"," * "," * ubique.squeeze([[[[3,4,5]]]]); "," * // [ [3, 4, 5] ]"," * "," * ubique.squeeze([[[[[['31-12-2014','31-01-2015'],['15-02-2015','01-03-2015']]]]]]);"," * // [ [ '31-12-2014', '31-01-2015' ],[ '15-02-2015', '01-03-2015' ] ]"," */"," $u.squeeze = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif (arguments.length > 1) {"," \t\tthrow new Error('too many input arguments');"," \t}"," \tif ($u.isnumber(x) || $u.isstring(x)) {"," \t\treturn x;"," \t}"," \tvar size = $u.size(x);"," \twhile (size.length > 2) {"," \t\tx = x[0];"," \t\tsize = $u.size(x);"," \t}"," \treturn x;"," }","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/sub2ind.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/sub2ind.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":14},"end":{"line":26,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":45,"column":1}},"2":{"start":{"line":26,"column":1},"end":{"line":44,"column":2}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":3},"end":{"line":28,"column":49}},"5":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"6":{"start":{"line":31,"column":3},"end":{"line":31,"column":19}},"7":{"start":{"line":33,"column":2},"end":{"line":33,"column":29}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":29}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":13}},"10":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"11":{"start":{"line":37,"column":3},"end":{"line":37,"column":36}},"12":{"start":{"line":39,"column":2},"end":{"line":43,"column":3}},"13":{"start":{"line":40,"column":3},"end":{"line":40,"column":27}},"14":{"start":{"line":42,"column":3},"end":{"line":42,"column":24}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]}},"code":["/**"," * Indexing"," */"," module.exports = function($u) {","/**"," * @method sub2ind"," * @summary Subscripts to linear indices"," * @description Subscripts to linear indices. Convert a 2D coordinates X,Y of a matrix into linear indices"," * "," * @param  {array|matrix} size  size of array or matrix"," * @param  {array|matrix} index X,Y coordinates for 2D matrices in the range [0...N-1]"," * @return {number|array}       "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * "," * ubique.sub2ind(ubique.size(a),[1, 2]);"," * // 5"," * "," * ubique.sub2ind(ubique.size(a),[[0, 0], [1, 0], [0, 1]]);"," * // [0, 1, 2]"," * "," * ubique.sub2ind(ubique.size([5,6,3]),[2, 0]);"," * // 2"," */"," $u.sub2ind = function(size,index) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isarray(index)) {"," \t\tindex = [index];"," \t}"," \tvar x = $u.getcol(index,0);"," \tvar y = $u.getcol(index,1);"," \tvar v = [];"," \tfor (var i = 0;i < x.length;i++) {"," \t\tv[i] = (x[i]) + (y[i]) * size[0];"," \t}"," \tif ($u.numel(v) === 1) {"," \t\treturn $u.squeeze(v)[0];"," \t}  else {"," \t\treturn $u.squeeze(v);"," \t}"," }","}",""],"l":{"4":1,"26":1,"27":0,"28":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/subset.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/subset.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":14},"end":{"line":41,"column":30}}},"3":{"name":"(anonymous_3)","line":59,"loc":{"start":{"line":59,"column":23},"end":{"line":59,"column":37}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":94,"column":1}},"2":{"start":{"line":41,"column":2},"end":{"line":93,"column":3}},"3":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"4":{"start":{"line":43,"column":6},"end":{"line":43,"column":52}},"5":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"6":{"start":{"line":46,"column":6},"end":{"line":46,"column":50}},"7":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"8":{"start":{"line":49,"column":6},"end":{"line":49,"column":15}},"9":{"start":{"line":51,"column":4},"end":{"line":62,"column":5}},"10":{"start":{"line":52,"column":6},"end":{"line":54,"column":7}},"11":{"start":{"line":53,"column":8},"end":{"line":53,"column":17}},"12":{"start":{"line":55,"column":6},"end":{"line":61,"column":7}},"13":{"start":{"line":56,"column":8},"end":{"line":60,"column":9}},"14":{"start":{"line":57,"column":10},"end":{"line":57,"column":22}},"15":{"start":{"line":59,"column":10},"end":{"line":59,"column":55}},"16":{"start":{"line":59,"column":38},"end":{"line":59,"column":52}},"17":{"start":{"line":63,"column":4},"end":{"line":92,"column":5}},"18":{"start":{"line":64,"column":6},"end":{"line":91,"column":7}},"19":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"20":{"start":{"line":66,"column":10},"end":{"line":66,"column":42}},"21":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"22":{"start":{"line":69,"column":10},"end":{"line":69,"column":42}},"23":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"24":{"start":{"line":72,"column":10},"end":{"line":72,"column":18}},"25":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"26":{"start":{"line":75,"column":10},"end":{"line":75,"column":18}},"27":{"start":{"line":77,"column":8},"end":{"line":81,"column":9}},"28":{"start":{"line":78,"column":10},"end":{"line":78,"column":22}},"29":{"start":{"line":80,"column":10},"end":{"line":80,"column":44}},"30":{"start":{"line":82,"column":8},"end":{"line":87,"column":9}},"31":{"start":{"line":83,"column":10},"end":{"line":83,"column":25}},"32":{"start":{"line":84,"column":10},"end":{"line":86,"column":11}},"33":{"start":{"line":85,"column":12},"end":{"line":85,"column":37}},"34":{"start":{"line":88,"column":8},"end":{"line":88,"column":31}},"35":{"start":{"line":90,"column":8},"end":{"line":90,"column":50}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":6}},{"start":{"line":52,"column":6},"end":{"line":52,"column":6}}]},"6":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":8}},{"start":{"line":56,"column":8},"end":{"line":56,"column":8}}]},"8":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"9":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":6}},{"start":{"line":64,"column":6},"end":{"line":64,"column":6}}]},"10":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"11":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"12":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"13":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":8}},{"start":{"line":74,"column":8},"end":{"line":74,"column":8}}]},"14":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":8}},{"start":{"line":77,"column":8},"end":{"line":77,"column":8}}]},"15":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":12},"end":{"line":77,"column":27}},{"start":{"line":77,"column":31},"end":{"line":77,"column":45}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {"," /**","  * @method subset","  * @summary Subset of array or matrix based on X,Y coordinates","  * @description Subset of array or matrix based on X,Y coordinates.","  * Extract a single column or row with the symbols ':'","  * ","  * @param  {array|matrix} m array or matrix of elements","  * @param  {number|array|string} r indexing for rows or ':' for all rows","  * @param  {number|array|string} c indexing for columns or ':' for all columns","  * @return {number|array|matrix}","  *","  * @example","  * var a = [[5,6,5],[7,8,-1]];","  * var c = [5,6,3];","  *","  * ubique.subset(c,1);","  * // 6","  * ","  * ubique.subset(c,[1,2]);","  * // [ 6, 3 ]","  * ","  * ubique.subset(c,ubique.end(c));","  * // 3","  * ","  * ubique.subset(a,0,1); ","  * // [ [ 6 ] ]","  * ","  * ubique.subset(a,[0,1],[1,2]); ","  * // [ [ 6, 5 ], [ 8, -1 ] ]","  * ","  * ubique.subset(a,0,':');","  * [ [ 5, 6, 5 ] ]","  * ","  * ubique.subset(a,':',0);","  * [ [ 5 ], [ 7 ] ]","  */","  $u.subset = function(m,r,c) {","    if (arguments.length === 0) {","      throw new Error('not enough input arguments');","    }","    if (arguments.length > 3) {","      throw new Error('too many input arguments');","    }","    if (arguments.length === 1) {","      return m;","    } ","    if (arguments.length === 2) {","      if ($u.isnumber(m)) {","        return m;","      }","      if ($u.isarray(m)) {","        if ($u.isnumber(r)) {","          return m[r];","        } else {","          return r.map(function(val) {return m[val];});","        }","      }","    }","    if (arguments.length === 3) {","      if ($u.ismatrix(m)) {","        if (r === ':') {","          r = $u.colon(0,$u.nrows(m) - 1);","        }","        if (c === ':') {","          c = $u.colon(0,$u.ncols(m) - 1);","        }","        if ($u.isnumber(r)) {","          r = [r];","        }","        if ($u.isnumber(c)) {","          c = [c];","        }","        if (r.length  === 1 && c.length === 1) {","          out = [[0]];","        } else {","          out = $u.zeros(r.length,c.length);","        }","        for (var i = 0;i < r.length;i++) {","          var tmp = r[i];","          for (var j = 0;j < c.length;j++) {","            out[i][j] = m[tmp][c[j]];","          }","        }","        return $u.squeeze(out);","      } else {","        throw new Error('input must be a matrix');","      }","    }","  }","}","",""],"l":{"4":1,"41":1,"42":0,"43":0,"45":0,"46":0,"48":0,"49":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"59":0,"63":0,"64":0,"65":0,"66":0,"68":0,"69":0,"71":0,"72":0,"74":0,"75":0,"77":0,"78":0,"80":0,"82":0,"83":0,"84":0,"85":0,"88":0,"90":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/subsetlin.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/subsetlin.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":18},"end":{"line":39,"column":39}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":38},"end":{"line":51,"column":51}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":53,"column":1}},"2":{"start":{"line":39,"column":3},"end":{"line":52,"column":3}},"3":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"4":{"start":{"line":41,"column":6},"end":{"line":41,"column":52}},"5":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"6":{"start":{"line":44,"column":6},"end":{"line":44,"column":15}},"7":{"start":{"line":46,"column":4},"end":{"line":46,"column":35}},"8":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"9":{"start":{"line":48,"column":6},"end":{"line":48,"column":18}},"10":{"start":{"line":50,"column":4},"end":{"line":50,"column":32}},"11":{"start":{"line":51,"column":4},"end":{"line":51,"column":70}},"12":{"start":{"line":51,"column":52},"end":{"line":51,"column":66}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"3":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":30}},{"start":{"line":43,"column":34},"end":{"line":43,"column":48}}]},"4":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":26},"end":{"line":46,"column":27}},{"start":{"line":46,"column":30},"end":{"line":46,"column":34}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","  /**","   * @method  substelin","   * @summary Subset of array or matrix based on linear indexing","   * @description Subset of array or matrix based on linear indexing by rows (default)","   *              ","   * @param  {array|matrix} m   array or matrix of elements ","   * @param  {numer|array|matrix} idx linear indexing","   * @param  {number} flag flag 0: rowwise element, 1: columnwise (def: 0)","   * @return {numner|array|matrix}     ","   *","   * @example","   * var a = [[5,6,5],[7,8,-1]];","   * var c = [5,6,3];","   *","   * ubique.subsetlin(a,1);","   * // [ 6 ]","   *","   * // subset by rows","   * ubique.subsetlin(a,[0,1,2,3]);","   * // [ 5, 6, 5, 7 ]","   *","   * // subset by columns","   * ubique.subsetlin(a,[0,1,2,3],1);","   * // [ 5, 7, 6, 8 ]","   * ","   * ubique.subsetlin(a,[[0,1,2],[2,3,4]],1);","   *  // [ [ 5, 7, 6 ], [ 6, 8, 5 ] ]","   *  ","   * ubique.subsetlin(c,[0,1]);","   * // [ 5, 6 ]","   * ","   * ubique.subsetlin(c,[[0,1],[1,2]]);","   * // [ [ 5, 6 ], [ 6, 3 ] ]","   */","   $u.subsetlin = function(m,idx,flag) {","    if (arguments.length === 0) {","      throw new Error('not enough input arguments');","    }","    if (arguments.length === 1 || $u.isnumber(m)) {","      return m;","    } ","    flag = flag == null ? 0 : flag;","    if ($u.isnumber(idx)) {","      idx = [idx];","    }","    var _m = $u.flatten(m,flag);","    return $u.squeeze($u.arrayfun(idx,function(val){return _m[val]}));","  }","}"],"l":{"4":1,"39":1,"40":0,"41":0,"43":0,"44":0,"46":0,"47":0,"48":0,"50":0,"51":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/tomat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/tomat.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":30}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":24}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":39,"column":1}},"2":{"start":{"line":21,"column":1},"end":{"line":37,"column":1}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":3},"end":{"line":23,"column":49}},"5":{"start":{"line":25,"column":2},"end":{"line":35,"column":2}},"6":{"start":{"line":26,"column":3},"end":{"line":26,"column":16}},"7":{"start":{"line":28,"column":2},"end":{"line":35,"column":2}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":15}},"9":{"start":{"line":31,"column":2},"end":{"line":35,"column":2}},"10":{"start":{"line":32,"column":3},"end":{"line":32,"column":12}},"11":{"start":{"line":34,"column":3},"end":{"line":34,"column":46}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":20}},{"start":{"line":25,"column":24},"end":{"line":25,"column":39}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]}},"code":["/**","* Array Creation and Concatenation","*/","module.exports = function($u) {","/**"," * @method tomat"," * @summary Convert number or array to matrix"," * @description Convert number or array to matrix"," *              "," * @param  {number|array|boolean} x input"," * @return {matrix}     "," *"," * @example"," * ubique.tomat(5);"," * // [ [ 5 ] ]"," * "," * ubique.tomat([5,6,3]);"," * // [ [ 5, 6, 3 ] ]"," * "," */"," $u.tomat = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif ($u.isnumber(x) || $u.islogical(x)) {"," \t\treturn [[x]];"," \t} else"," \tif ($u.isarray(x)) {","    return [x];","  } else ","  if ($u.ismatrix(x)) {","   return x;"," } else {","   throw new Error('unknown input arguments');"," }","","}","","}"],"l":{"4":1,"21":1,"22":0,"23":0,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/transpose.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/transpose.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":16},"end":{"line":21,"column":28}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":19},"end":{"line":25,"column":43}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":43,"column":1}},"2":{"start":{"line":21,"column":1},"end":{"line":41,"column":1}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":3},"end":{"line":23,"column":49}},"5":{"start":{"line":25,"column":2},"end":{"line":33,"column":3}},"6":{"start":{"line":26,"column":4},"end":{"line":26,"column":37}},"7":{"start":{"line":27,"column":4},"end":{"line":31,"column":5}},"8":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"9":{"start":{"line":29,"column":8},"end":{"line":29,"column":28}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":15}},"11":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":13}},"13":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":38}},"15":{"start":{"line":40,"column":2},"end":{"line":40,"column":47}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Sorting and Reshaping Arrays"," */"," module.exports = function($u) {","/**"," * @method transpose"," * @summary Transpose X.'"," * @description Transpose of matrix X. Array is 1xN as default. "," * Transpose of Array is Nx1 matrix."," * "," * @param  {array|matrix} x array or matrix of elements"," * @return {matrix}"," *"," * @example"," * ubique.transpose([[5,6,5],[7,8,-1]]);"," * // [ [ 5, 7 ], [ 6, 8 ], [ 5, -1 ] ]"," * "," * ubique.transpose([5,6,3]);"," * // [ [ 5 ], [ 6 ], [ 3 ] ]"," */"," $u.transpose = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  var _transpose = function(a,acols,arows) {","    var out = $u.matrix(acols,arows);","    for (var i = 0;i < acols; i++) {","      for (var j = 0;j < arows; j++) {","        out[i][j] = a[j][i];","      }","    }","    return out;","  }","  if ($u.isnumber(x)) {","    return x;","  }","  if ($u.isarray(x)) {","    return _transpose([x],x.length,1);","  }","  return _transpose(x,$u.ncols(x),$u.nrows(x));","}","","}"],"l":{"4":1,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"29":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/trues.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/trues.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":23}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":43,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":41,"column":1}},"3":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":50}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":49}},"6":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"8":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":31}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method trues"," * @summary Create array of all true"," * @description Create array of all true"," * "," * @param  {number|array|...} args variable input arguments (max 2)"," * @return {number|matrix}     "," *"," * @example"," * ubique.trues(0);"," * // []"," * "," * ubique.trues(1);"," * // [ [ true ] ]"," * "," * ubique.trues(2);"," * // [ [ true, true ], [ true, true ] ]"," * "," * ubique.trues([2,1]);"," * // [ [ true ], [ true ] ]"," * "," * ubique.trues(2,3);"," * // [ [ true, true, true ], [ true, true, true ] ]"," */"," $u.trues = function() {","  if (arguments.length === 0 ) {","    throw new Error('not enough input arguments');","  }","  var _args = $u.argsarray.apply(null,arguments);","  if ($u.ismatrix(_args)) {","    _args = _args[0];","  }","  if (_args.length === 1) {","    _args = [_args[0],_args[0]];","  }","  return $u.matrix(_args,true);","}","","}"],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/vertcat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/vertcat.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":14},"end":{"line":20,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":25,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":23,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":49}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":47}}},"branchMap":{},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method vertcat"," * @summary Concatenate arrays or matrices vertically"," * @description Concatenate arrays or matrices vertically"," *              "," * @param  {array|matrix|...} args variable arguments (args1,args2,...)"," * @return {array|matrix}     "," *"," * @example"," * ubique.vertcat([[5,6,5],[7,8,-1]],[[-1,3,-1],[4,5,9]]);"," * // [ [ 5, 6, 5 ], [ 7, 8, -1 ], [ -1, 3, -1 ], [ 4, 5, 9 ] ]"," * "," * ubique.vertcat(5,7,9,8);"," * // [ 5, 7, 9, 8 ]"," */"," $u.vertcat = function() {","  var _args = $u.argsarray.apply(null,arguments);","  return $u.cat.apply(null,[].concat(0,_args));","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/zeros.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/matarrs/zeros.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":23}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":43,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":41,"column":1}},"3":{"start":{"line":30,"column":1},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":50}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":49}},"6":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"8":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":28}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},{"start":{"line":30,"column":1},"end":{"line":30,"column":1}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Array Creation and Concatenation"," */"," module.exports = function($u) {","/**"," * @method zeros"," * @summary Create array or matrix of all zeros"," * @description Create array or matrix of all zeros"," * "," * @param  {number|array|...} args variable input arguments (max 2)"," * @return {number|matrix}     "," *","  * @example"," * ubique.zeros(0);"," * // []"," * "," * ubique.zeros(1);"," * // [ [ 0 ] ]"," * "," * ubique.zeros(2);"," * // [ [ 0, 0 ], [ 0, 0 ] ]"," * "," * ubique.zeros([2,1]);"," * // [ [ 0 ], [ 0 ] ]"," * "," * ubique.zeros(2,3);"," * // [ [ 0, 0, 0 ], [ 0, 0, 0 ] ]"," */"," $u.zeros = function() {"," if (arguments.length === 0 ) {","    throw new Error('not enough input arguments');","  }","  var _args = $u.argsarray.apply(null,arguments);","  if ($u.ismatrix(_args)) {","    _args = _args[0];","  }","  if (_args.length === 1) {","    _args = [_args[0],_args[0]];","  }","  return $u.matrix(_args,0);","}","","}"],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/probdistr/jbtest.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/probdistr/jbtest.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":13},"end":{"line":20,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":30,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":28,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":25}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":27}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":52}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]}},"code":["/**"," * Distribution Tests"," */"," module.exports = function($u) {","/**"," * @method  jbtest"," * @summary Jarque-Bera test"," * @description  A test decition for the null hypothesis that the data "," * in array X comes from a normal distribution with an unknown mean and variance"," * "," * @param  {array} x array of values"," * @return {number}   "," *"," * @example"," * var x = [ 0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * "," * ubique.jbtest(x);"," * // 0.6360604293924916"," */"," $u.jbtest = function(x) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  var n = x.length;","  var s = $u.skewness(x);","  var xk = $u.xkurtosis(x);","  return (n/6) * (Math.pow(s,2) + Math.pow(xk,2)/4);","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/probdistr/normcdf.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/probdistr/normcdf.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":24,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":33,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":31,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":50}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":27}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":36}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":69}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":20},"end":{"line":28,"column":21}},{"start":{"line":28,"column":24},"end":{"line":28,"column":26}}]},"3":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":26},"end":{"line":29,"column":27}},{"start":{"line":29,"column":30},"end":{"line":29,"column":35}}]}},"code":["/**"," * Normal Distributions"," */"," module.exports = function($u) {","/**"," * @method normcdf"," * @summary Normal cumulative distribution function (cdf)"," * @description The Standard Normal Distribution: mu = 0 and sigma = 1"," *"," * @param  {number} x number to calculate cdf"," * @param  {number} mu mean of  the array of elements"," * @param  {number} sigma standarf deviaton of array of elements"," * @return {number}"," *"," * @example"," * var x = [ 0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * "," * ubique.normcdf(2);"," * // 0.97725"," * "," * ubique.normcdf(0,ubique.mean(x),ubique.std(x));"," * // 0.22049"," */"," $u.normcdf = function(x,mu,sigma) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mu = mu == null ? 0 : mu;","  sigma = sigma == null ? 1 : sigma;","  return 0.5 * (1 + $u.erf((x - mu) / Math.sqrt(2 * sigma * sigma)));","}","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/probdistr/norminv.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/probdistr/norminv.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":14},"end":{"line":27,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":40,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":38,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":27}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":36}},"7":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":46}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":45}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":25}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":20},"end":{"line":31,"column":21}},{"start":{"line":31,"column":24},"end":{"line":31,"column":26}}]},"3":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":26},"end":{"line":32,"column":27}},{"start":{"line":32,"column":30},"end":{"line":32,"column":35}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"5":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":12}},{"start":{"line":33,"column":16},"end":{"line":33,"column":22}}]}},"code":["/**"," * Normal Distributions"," */"," module.exports = function($u) {","/**"," * @method norminv"," * @summary Inverse of the normal cumulative distribution function (cdf)"," * @description Returns the inverse cdf for the normal distribution with mean MU"," * and standard deviation SIGMA at P value"," *"," * Default values: MU = 0, SIGMA = 1"," * "," * @param  {number} p probability value in range [0,1]"," * @param  {number} mu mean value"," * @param  {number} sigma standard deviation "," * @return {number}       "," *"," * @example"," * var x = [ 0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," *"," * ubique.norminv(0.05);"," * // -1.64485"," * "," * ubique.norminv(0.01,ubique.mean(x),ubique.std(x));"," * // -0.0361422"," */"," $u.norminv = function(p,mu,sigma) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mu = mu == null ? 0 : mu;","  sigma = sigma == null ? 1 : sigma;","  if (p <= 0 || p >= 1) {","    throw new Error('invalid input argument');","  }","  var x0 = -Math.sqrt(2) * $u.erfcinv(2 * p);","  return x0 * sigma + mu;","}","","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/probdistr/normpdf.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/probdistr/normpdf.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":14},"end":{"line":28,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":37,"column":1}},"2":{"start":{"line":28,"column":1},"end":{"line":35,"column":1}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":50}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":27}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":36}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":88}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":20},"end":{"line":32,"column":21}},{"start":{"line":32,"column":24},"end":{"line":32,"column":26}}]},"3":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":26},"end":{"line":33,"column":27}},{"start":{"line":33,"column":30},"end":{"line":33,"column":35}}]}},"code":["/**"," * Normal Distributions"," */"," module.exports = function($u) {","/**"," * @method normpdf"," * @summary Normal probability density function (pdf)"," * @description  Normal probability density function (pdf)."," * Returns the pdf of the normal distribution with"," * mean MU and standard deviation SIGMA, evaluated at the values in X"," *"," * Default values: MU = 0, SIGMA = 1"," * "," * @param  {number} x real value"," * @param  {number} mu mean value (def: 0)"," * @param  {number} sigma standard deviation (def: 1)"," * @return {number}       "," *"," * @example"," * var x = [ 0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * "," * ubique.normpdf(1);"," * // 0.241971"," * "," * ubique.normpdf(0,ubique.mean(x),ubique.std(x));"," * // 12.7622"," */"," $u.normpdf = function(x,mu,sigma) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mu = mu == null ? 0 : mu;","  sigma = sigma == null ? 1 : sigma;","  return Math.exp(-0.5 * Math.pow((x - mu)/sigma,2)) / (Math.sqrt(2 * Math.PI) * sigma);","}","","}"],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"33":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/activereturn.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/activereturn.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":19},"end":{"line":29,"column":44}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":22},"end":{"line":37,"column":43}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":45,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":44,"column":1}},"3":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":50}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":26}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":43}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":30}},"8":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":59}},"10":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":56}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":52}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":21}},{"start":{"line":33,"column":24},"end":{"line":33,"column":25}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":24},"end":{"line":34,"column":35}},{"start":{"line":34,"column":38},"end":{"line":34,"column":42}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":22},"end":{"line":35,"column":23}},{"start":{"line":35,"column":26},"end":{"line":35,"column":29}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"6":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":20}},{"start":{"line":40,"column":24},"end":{"line":40,"column":38}}]}},"code":["/**"," * Performance metrics"," */"," module.exports = function($u) {","/**"," * @method activereturn"," * @summary Active return"," * @description Asset/Portfolio annualized return minus Benchmark annualized return"," * "," * @param  {array|matrix} x asset/portfolio returns "," * @param  {array} y benchmark returns"," * @param  {number} t frequencey of data. 1: yearly, 4: quarterly, 12: monthly, 52: weekly, 252: daily"," * @param  {string} mode 'geometric' or 'simple' (def: 'geometric')"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var z = [0.04,-0.022,0.043,0.028,-0.078,-0.011,0.033,-0.049,0.09,0.087];"," * var cat = ubique.cat;"," *"," * ubique.activereturn(x,z,12);"," * // 0.041979"," *"," * ubique.activereturn(cat(0,x,y),z,12);"," * // [ [ 0.041979], [ -0.046746 ] ]"," */"," $u.activereturn = function(x,y,t,mode,dim) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  t = t == null ? 252 : t;","  mode = mode == null ? 'geometric' : mode;","  dim = dim == null ? 0 : dim;","  ","  var _activereturn = function(a,y,t,mode) {","    return $u.annreturn(a,t,mode) - $u.annreturn(y,t,mode);","  }","  if ($u.isnumber(x) || $u.isnumber(y)) {","    throw new Error('input must be an array or matrix');","  }","  return $u.vectorfun(dim,x,_activereturn,y,t,mode);","}","}",""],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/adjsharpe.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/adjsharpe.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":16},"end":{"line":32,"column":38}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":16},"end":{"line":39,"column":34}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":50,"column":1}},"2":{"start":{"line":32,"column":1},"end":{"line":49,"column":1}},"3":{"start":{"line":33,"column":2},"end":{"line":35,"column":2}},"4":{"start":{"line":34,"column":3},"end":{"line":34,"column":49}},"5":{"start":{"line":36,"column":1},"end":{"line":36,"column":35}},"6":{"start":{"line":37,"column":1},"end":{"line":37,"column":29}},"7":{"start":{"line":39,"column":1},"end":{"line":44,"column":2}},"8":{"start":{"line":40,"column":3},"end":{"line":40,"column":31}},"9":{"start":{"line":41,"column":3},"end":{"line":41,"column":27}},"10":{"start":{"line":42,"column":3},"end":{"line":42,"column":27}},"11":{"start":{"line":43,"column":3},"end":{"line":43,"column":65}},"12":{"start":{"line":45,"column":1},"end":{"line":47,"column":2}},"13":{"start":{"line":46,"column":3},"end":{"line":46,"column":14}},"14":{"start":{"line":48,"column":1},"end":{"line":48,"column":43}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":25},"end":{"line":36,"column":26}},{"start":{"line":36,"column":29},"end":{"line":36,"column":34}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":21},"end":{"line":37,"column":22}},{"start":{"line":37,"column":25},"end":{"line":37,"column":28}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},{"start":{"line":45,"column":1},"end":{"line":45,"column":1}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method adjsharpe"," * @summary Adjusted Sharpe Ratio"," * @description Sharpe Ratio adjusted for skewness and kurtosis with a penalty factor "," * for negative skewness and excess kurtosis."," *"," * Adjusted Sharpe ratio = SR x [1 + (S/6) x SR - ((K-3) / 24) x SR^2]"," * SR = sharpe ratio"," * K = kurtosis"," * S = skewness"," * "," * @param  {array|matrix} x array of value"," * @param  {number} frisk annual free-risk rate (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," * "," * ubique.adjsharpe(x,0.02/12);"," * // 0.748134"," * "," * ubique.adjsharpe(cat(0,x,y));"," * // [ [ 0.830583, 0.245232 ] ]"," */"," $u.adjsharpe = function(x,frisk,dim) {","  if (arguments.length === 0) {","   throw new Error('not enough input arguments');"," }"," frisk = frisk == null ? 0 : frisk;"," dim = dim == null ? 0 : dim;",""," var _asharpe = function(a,frisk) {","   var sr = $u.sharpe(a,frisk);","   var sk = $u.skewness(a);","   var ku = $u.kurtosis(a);","   return sr * (1 + (sk/6) * sr - ((ku - 3)/24) * Math.sqrt(sr));"," }"," if ($u.isnumber(x)) {","   return NaN;"," }"," return $u.vectorfun(dim,x,_asharpe,frisk);","}","}",""],"l":{"4":1,"32":1,"33":0,"34":0,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"46":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/annadjsharpe.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/annadjsharpe.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":19},"end":{"line":34,"column":48}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":17},"end":{"line":43,"column":42}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":56,"column":1}},"2":{"start":{"line":34,"column":1},"end":{"line":55,"column":1}},"3":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"4":{"start":{"line":36,"column":4},"end":{"line":36,"column":50}},"5":{"start":{"line":38,"column":2},"end":{"line":38,"column":36}},"6":{"start":{"line":39,"column":2},"end":{"line":39,"column":26}},"7":{"start":{"line":40,"column":2},"end":{"line":40,"column":43}},"8":{"start":{"line":41,"column":2},"end":{"line":41,"column":30}},"9":{"start":{"line":43,"column":2},"end":{"line":50,"column":2}},"10":{"start":{"line":44,"column":3},"end":{"line":48,"column":23}},"11":{"start":{"line":49,"column":3},"end":{"line":49,"column":65}},"12":{"start":{"line":51,"column":1},"end":{"line":53,"column":2}},"13":{"start":{"line":52,"column":3},"end":{"line":52,"column":13}},"14":{"start":{"line":54,"column":1},"end":{"line":54,"column":50}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"2":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":26},"end":{"line":38,"column":27}},{"start":{"line":38,"column":30},"end":{"line":38,"column":35}}]},"3":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":18},"end":{"line":39,"column":21}},{"start":{"line":39,"column":24},"end":{"line":39,"column":25}}]},"4":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":24},"end":{"line":40,"column":35}},{"start":{"line":40,"column":38},"end":{"line":40,"column":42}}]},"5":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":22},"end":{"line":41,"column":23}},{"start":{"line":41,"column":26},"end":{"line":41,"column":29}}]},"6":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":1},"end":{"line":51,"column":1}},{"start":{"line":51,"column":1},"end":{"line":51,"column":1}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method annadjsharpe"," * @summary Annualized Adjusted Sharpe Ratio"," * @description Sharpe Ratio adjusted for skewness and kurtosis with a penalty factor "," * for negative skewness and excess kurtosis."," *"," * Adjusted Sharpe ratio = SR x [1 + (S/6) x SR - ((K-3) / 24) x SR^2]"," * SR = sharpe ratio with annualized return/risk"," * K = kurtosis"," * S = skewness"," * "," * @param  {array|matrix} x array of value"," * @param  {number} frisk annual free-risk rate (def: 0)"," * @param  {number} t frequency 252: daily (default), 52: weekly, 12: monthly, 4: quarterly"," * @param  {string} mode 'geometric' or 'simple' (def: 'geometric')"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," * "," * ubique.annadjsharpe(x,0.02,12,'geometric');"," * // 3.376724"," * "," * ubique.annadjsharpe(cat(0,x,y),0,12);"," * // [ [ 3.766555, 0.827757 ] ]"," */"," $u.annadjsharpe = function(x,frisk,t,mode,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  t = t == null ? 252 : t;","  mode = mode == null ? 'geometric' : mode;","  dim = dim == null ? 0 : dim;","","  var _asharpe = function(a,frisk,t,mode) {","   var aret = $u.annreturn(a,t,mode),","   arisk = $u.annrisk(a,t),","   sr = (aret - frisk) / arisk,","   sk = $u.skewness(a),","   ku = $u.kurtosis(a);","   return sr * (1 + (sk/6) * sr - ((ku - 3)/24) * Math.sqrt(sr));"," }"," if ($u.isnumber(x)) {","   throw NaN;"," }"," return $u.vectorfun(dim,x,_asharpe,frisk,t,mode);","}","}",""],"l":{"4":1,"34":1,"35":0,"36":0,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"49":0,"51":0,"52":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/annreturn.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/annreturn.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":16},"end":{"line":29,"column":39}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":40}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":54,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":52,"column":2}},"3":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":3},"end":{"line":31,"column":49}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":26}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":43}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":30}},"8":{"start":{"line":37,"column":2},"end":{"line":47,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":23}},"10":{"start":{"line":39,"column":4},"end":{"line":46,"column":5}},"11":{"start":{"line":40,"column":6},"end":{"line":40,"column":57}},"12":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"13":{"start":{"line":43,"column":6},"end":{"line":43,"column":30}},"14":{"start":{"line":45,"column":6},"end":{"line":45,"column":38}},"15":{"start":{"line":48,"column":3},"end":{"line":50,"column":3}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":15}},"17":{"start":{"line":51,"column":2},"end":{"line":51,"column":47}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":21}},{"start":{"line":33,"column":24},"end":{"line":33,"column":25}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":24},"end":{"line":34,"column":35}},{"start":{"line":34,"column":38},"end":{"line":34,"column":42}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":22},"end":{"line":35,"column":23}},{"start":{"line":35,"column":26},"end":{"line":35,"column":29}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":3},"end":{"line":48,"column":3}},{"start":{"line":48,"column":3},"end":{"line":48,"column":3}}]}},"code":["/**"," * Performance metrics"," */"," module.exports = function($u) {","/**"," * @method annreturn"," * @summary Annualized Return"," * @description Average annualized returns over a period, convenient when comparing returns."," * It can be an Arithmetic or Geometric (default) average return: if compounded with itself the"," * geometric average will be equal to the cumulative return"," * "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} t frequencey of data. 1: yearly, 4: quarterly, 12: monthly, 52: weekly, 252: daily"," * @param  {string} mode 'geometric' or 'simple' (def: 'geometric')"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}   "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," * "," * ubique.annreturn(x,12);"," * // 0.233815"," *"," * ubique.annreturn(cat(0,x,y),12);"," * // [ [ 0.233815 ], [ 0.14509 ] ]"," */"," $u.annreturn = function(x,t,mode,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tt = t == null ? 252 : t;","  mode = mode == null ? 'geometric' : mode;","  dim = dim == null ? 0 : dim;","","  var _annreturn = function(arr,t,mode) {","    var n = arr.length;","    if (mode === 'geometric') {","      return $u.power($u.prod($u.plus(1,arr)),(t/n)) - 1;","    } else","    if (mode === 'simple') {","      return $u.mean(arr) * t;","    } else {","      throw new Error('unknown mode');","    }","  }"," \t if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_annreturn,t,mode);"," }","","}",""],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"45":0,"48":0,"49":0,"51":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/annrisk.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/annrisk.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":14},"end":{"line":26,"column":32}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":17},"end":{"line":33,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":41,"column":1}},"2":{"start":{"line":26,"column":1},"end":{"line":40,"column":2}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":3},"end":{"line":28,"column":49}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":26}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"7":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":34,"column":3},"end":{"line":34,"column":35}},"9":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"10":{"start":{"line":37,"column":3},"end":{"line":37,"column":14}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":40}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":18},"end":{"line":30,"column":21}},{"start":{"line":30,"column":24},"end":{"line":30,"column":25}}]},"3":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method annrisk"," * @summary Annualized Risk"," * @description Annualized standard deviation of asset/portfolio returns"," * "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} t frequencey of data. 1: yearly, 4: quarterly, 12: monthly, 52: weekly, 252: daily"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}   "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," * "," * ubique.annrisk(x,12);"," * // 0.080473"," *"," * ubique.annrisk(cat(0,x,y),12);"," * // [ [ 0.080473 ], [ 0.182948 ] ]"," */"," $u.annrisk = function(x,t,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tt = t == null ? 252 : t;","  dim = dim == null ? 0 : dim;",""," \tvar _annrisk = function(a,t) {"," \t\treturn Math.sqrt(t) * $u.std(a);"," \t}"," \tif ($u.isnumber(x)) {"," \t\treturn NaN;"," \t}"," \treturn $u.vectorfun(dim,x,_annrisk,t);"," }","}",""],"l":{"4":1,"26":1,"27":0,"28":0,"30":0,"31":0,"33":0,"34":0,"36":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/avgdrawdown.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/avgdrawdown.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":18},"end":{"line":31,"column":36}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":56,"column":1}},"2":{"start":{"line":31,"column":1},"end":{"line":54,"column":1}},"3":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"4":{"start":{"line":33,"column":4},"end":{"line":33,"column":50}},"5":{"start":{"line":35,"column":2},"end":{"line":35,"column":24}},"6":{"start":{"line":36,"column":2},"end":{"line":36,"column":30}},"7":{"start":{"line":38,"column":2},"end":{"line":49,"column":3}},"8":{"start":{"line":39,"column":4},"end":{"line":39,"column":31}},"9":{"start":{"line":40,"column":4},"end":{"line":48,"column":5}},"10":{"start":{"line":41,"column":6},"end":{"line":41,"column":26}},"11":{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},"12":{"start":{"line":44,"column":6},"end":{"line":44,"column":40}},"13":{"start":{"line":45,"column":6},"end":{"line":45,"column":59}},"14":{"start":{"line":47,"column":6},"end":{"line":47,"column":17}},"15":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"16":{"start":{"line":51,"column":4},"end":{"line":51,"column":13}},"17":{"start":{"line":53,"column":2},"end":{"line":53,"column":37}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":18},"end":{"line":35,"column":19}},{"start":{"line":35,"column":22},"end":{"line":35,"column":23}}]},"3":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},{"start":{"line":36,"column":26},"end":{"line":36,"column":29}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"6":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":13}},{"start":{"line":43,"column":17},"end":{"line":43,"column":32}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method avgdrawdown"," * @summary Average drawdown"," * @description Average drawdown or average K-largest drawdown"," * "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} k largest drawdown. k = 0 for all continuous drawdown (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {object}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," * "," * // average drawdown"," * ubique.avgdrawdown(x);"," * // 0.0115"," *"," * // 1-largest drawdown"," * ubique.avgdrawdown(x,1);"," * // 0.014"," * "," * ubique.avgdrawdown(cat(0,x,y));"," * // [ [ 0.0115 ], [ 0.056571 ] ]"," */"," $u.avgdrawdown = function(x,k,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  k = k == null ? 0 : k;","  dim = dim == null ? 0 : dim;","  ","  var avgdd = function(a,k) {","    var cdd =  $u.cdrawdown(a);","    if (k === 0) {","      return $u.mean(cdd);","    } else","    if (k > 0 && k <= cdd.length) {","      var cdds = $u.sort(cdd,'descend');","      return $u.mean($u.subsetlin(cdds,$u.colon(0,k - 1)));","    } else {","      return NaN;","    }","  }","  if ($u.isnumber(x)) {","    return 0;","  }","  return $u.vectorfun(dim,x,avgdd,k);","}","","}"],"l":{"4":1,"31":1,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"45":0,"47":0,"50":0,"51":0,"53":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/burkeratio.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/burkeratio.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":46}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":45}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":61,"column":1}},"2":{"start":{"line":34,"column":1},"end":{"line":59,"column":1}},"3":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"4":{"start":{"line":36,"column":4},"end":{"line":36,"column":50}},"5":{"start":{"line":38,"column":2},"end":{"line":38,"column":36}},"6":{"start":{"line":39,"column":2},"end":{"line":39,"column":26}},"7":{"start":{"line":40,"column":2},"end":{"line":40,"column":40}},"8":{"start":{"line":41,"column":2},"end":{"line":41,"column":30}},"9":{"start":{"line":43,"column":2},"end":{"line":54,"column":3}},"10":{"start":{"line":44,"column":4},"end":{"line":45,"column":54}},"11":{"start":{"line":46,"column":4},"end":{"line":53,"column":5}},"12":{"start":{"line":47,"column":6},"end":{"line":47,"column":35}},"13":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"14":{"start":{"line":50,"column":6},"end":{"line":50,"column":55}},"15":{"start":{"line":52,"column":6},"end":{"line":52,"column":38}},"16":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"17":{"start":{"line":56,"column":4},"end":{"line":56,"column":66}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":54}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"2":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":26},"end":{"line":38,"column":27}},{"start":{"line":38,"column":30},"end":{"line":38,"column":35}}]},"3":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":18},"end":{"line":39,"column":21}},{"start":{"line":39,"column":24},"end":{"line":39,"column":25}}]},"4":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":24},"end":{"line":40,"column":32}},{"start":{"line":40,"column":35},"end":{"line":40,"column":39}}]},"5":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":22},"end":{"line":41,"column":23}},{"start":{"line":41,"column":26},"end":{"line":41,"column":29}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"7":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method burkeratio"," * @summary Burke Ratio"," * @description A risk-adjusted measure with free risk and drawdowns."," * For the 'simple' mode the excess return over free risk is divided by the square root of "," * the sum of the square of the drawdowns. For the 'modified' mode the Burke Ratio is multiplied"," * by the square root of the number of datas."," *  "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} frisk annual free-risk rate (def: 0)"," * @param  {number} t frequency 252: daily (default), 52: weekly, 12: monthly, 4: quarterly"," * @param  {string} mode 'simple' or 'modified' (def: 'simple')"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|arrray}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," *"," * ubique.burkeratio(x,0,12);"," * // 14.048563"," *"," * ubique.burkeratio(x,0,12,'modified');"," * // 44.425456"," *"," * ubique.burkeratio(cat(0,x,y),0,12);"," * // [ [ 14.048563 ], [ 1.228487 ] ]"," */"," $u.burkeratio = function(x,frisk,t,mode,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  t = t == null ? 252 : t;","  mode = mode == null ? 'simple' : mode;","  dim = dim == null ? 0 : dim;","  ","  var _burkeratio = function(a,frisk,t,mode) {","    var annret = $u.annreturn(a,t),","    dd = $u.sqrt($u.sum($u.power($u.cdrawdown(a),2)));","    if (mode === 'simple') {","      return (annret - frisk) / dd;","    } else","    if (mode === 'modified') {","      return (annret - frisk) / dd * $u.sqrt(a.length);","    } else {","      throw new Error('unknown mode');","    }","  }","  if ($u.isnumber(x)) {","    throw new Error('input arguments must be an array or matrix');","  }","  return $u.vectorfun(dim,x,_burkeratio,frisk,t,mode);","}","","}"],"l":{"4":1,"34":1,"35":0,"36":0,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"46":0,"47":0,"49":0,"50":0,"52":0,"55":0,"56":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/cagr.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/cagr.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":11},"end":{"line":27,"column":29}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":14},"end":{"line":34,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":41,"column":2}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":24}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":30}},"7":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":53}},"9":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"10":{"start":{"line":38,"column":3},"end":{"line":38,"column":34}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":37}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":18},"end":{"line":31,"column":19}},{"start":{"line":31,"column":22},"end":{"line":31,"column":23}}]},"3":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":22},"end":{"line":32,"column":23}},{"start":{"line":32,"column":26},"end":{"line":32,"column":29}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Performance metrics"," */"," module.exports = function($u) {","/**"," * @method cagr"," * @summary Compound annual growth rate"," * @description Compound annual growth rate"," * "," * @param  {number|array|matrix} x portfolio/assets returns "," * @param  {number} p number of years (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," *"," * // CAGR for 10 months on 12 or 0.83 years"," * ubique.cagr(x,x.length/12);"," * // 0.229388"," *"," * ubique.cagr(cat(0,x,y),x.length/12);"," * // [ [ 0.229388 ], [ 0.151999 ] ]"," */"," $u.cagr = function(x,p,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  p = p == null ? 1 : p;","  dim = dim == null ? 0 : dim;","","  var _cagr = function(a,p) {","    return $u.power(1 + $u.ror(a,'ret'),(1 / p)) - 1;","  }","  if ($u.isnumber(x)) {","   return $u.power(a,(1 / p)) - 1;","  }","  return $u.vectorfun(dim,x,_cagr,p);"," }","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/calmarratio.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/calmarratio.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":18},"end":{"line":28,"column":42}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":21},"end":{"line":36,"column":41}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":47,"column":1}},"2":{"start":{"line":28,"column":1},"end":{"line":45,"column":1}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":50}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":36}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":26}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":30}},"8":{"start":{"line":36,"column":2},"end":{"line":40,"column":3}},"9":{"start":{"line":37,"column":4},"end":{"line":38,"column":33}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":36}},"11":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":66}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":50}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":26},"end":{"line":32,"column":27}},{"start":{"line":32,"column":30},"end":{"line":32,"column":35}}]},"3":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":21}},{"start":{"line":33,"column":24},"end":{"line":33,"column":25}}]},"4":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":22},"end":{"line":34,"column":23}},{"start":{"line":34,"column":26},"end":{"line":34,"column":29}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method calmarratio"," * @summary Calmar Ratio"," * @description A risk-adjusted measure like Sharpe ratio that uses maximum drawdown instead of"," * standard deviation for risk."," *  "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} frisk annual free-risk rate (def: 0)"," * @param  {number} t frequencey of data. 1: yearly, 4: quarterly, 12: monthly, 52: weekly, 252: daily (def: 252)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|arrray}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," * "," * ubique.calmarratio(x,0,12);"," * // 16.701049"," *"," * ubique.calmarratio(cat(0,x,y),0,12);"," * // [ [ 16.701049 ], [ 1.32768 ] ]"," */"," $u.calmarratio = function(x,frisk,t,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  t = t == null ? 252 : t;","  dim = dim == null ? 0 : dim;","","  var _calmarratio = function(a,frisk,t) {","    var annret = $u.annreturn(a,t),","    maxdd = $u.drawdown(a).maxdd;","    return (annret - frisk) / maxdd;","  }","  if ($u.isnumber(x)) {","    throw new Error('input arguments must be an array or matrix');","  }","  return $u.vectorfun(dim,x,_calmarratio,frisk,t);","}","","}"],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"33":0,"34":0,"36":0,"37":0,"39":0,"41":0,"42":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/cdrawdown.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/cdrawdown.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":32}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":15},"end":{"line":30,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":65,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":64,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":50}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"6":{"start":{"line":30,"column":2},"end":{"line":58,"column":3}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":33}},"8":{"start":{"line":32,"column":4},"end":{"line":52,"column":5}},"9":{"start":{"line":33,"column":6},"end":{"line":35,"column":7}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":23}},"11":{"start":{"line":36,"column":6},"end":{"line":51,"column":7}},"12":{"start":{"line":37,"column":8},"end":{"line":43,"column":9}},"13":{"start":{"line":38,"column":10},"end":{"line":42,"column":11}},"14":{"start":{"line":39,"column":12},"end":{"line":39,"column":27}},"15":{"start":{"line":41,"column":12},"end":{"line":41,"column":35}},"16":{"start":{"line":44,"column":8},"end":{"line":50,"column":9}},"17":{"start":{"line":45,"column":10},"end":{"line":49,"column":11}},"18":{"start":{"line":46,"column":12},"end":{"line":46,"column":29}},"19":{"start":{"line":47,"column":12},"end":{"line":47,"column":16}},"20":{"start":{"line":48,"column":12},"end":{"line":48,"column":20}},"21":{"start":{"line":53,"column":4},"end":{"line":56,"column":5}},"22":{"start":{"line":54,"column":6},"end":{"line":54,"column":24}},"23":{"start":{"line":55,"column":6},"end":{"line":55,"column":14}},"24":{"start":{"line":57,"column":4},"end":{"line":57,"column":15}},"25":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"26":{"start":{"line":60,"column":4},"end":{"line":60,"column":13}},"27":{"start":{"line":62,"column":2},"end":{"line":62,"column":36}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":22},"end":{"line":28,"column":23}},{"start":{"line":28,"column":26},"end":{"line":28,"column":29}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]},"4":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":10},"end":{"line":33,"column":17}},{"start":{"line":33,"column":21},"end":{"line":33,"column":29}}]},"5":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]},"7":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":10}},{"start":{"line":38,"column":10},"end":{"line":38,"column":10}}]},"8":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"9":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":10},"end":{"line":45,"column":10}},{"start":{"line":45,"column":10},"end":{"line":45,"column":10}}]},"10":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"11":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method cdrawdown"," * @summary Continuous Drawdown"," * @description Continuous Drawdown"," *  "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {array|matrix}"," * "," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * ubique.cdrawdown(x);"," * // [ 0.009, 0.014 ]"," * "," * ubique.cdrawdown(ubique.cat(0,x,y));"," * // [ [ 0.009, 0.014 ], [ 0.005, 0.095743, 0.068971 ] ]"," */"," $u.cdrawdown = function(x,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  dim = dim == null ? 0 : dim;","","  var _cdown = function(a) {","    var cdd = [], tmp = 0, t = 0;","    for (var i = 0; i < a.length; i++) {","      if (i === 0 && a[i] < 0) {","        tmp = 1 + a[i];","      }","      if (i > 0) {","        if (a[i] < 0) {","          if (tmp === 0) {","            tmp = 1 + a[i];","          } else {","            tmp = tmp * (1 + a[i]);","          }","        }","        if (a[i] >=0) {","          if (tmp !== 0) {","            cdd[t] = 1 - tmp;","            t++;","            tmp = 0;","          }","        }","      }","    }","    if (tmp !== 0) {","      cdd.push(1 - tmp);","      tmp = 0;","    }","    return cdd;","  }","  if ($u.isnumber(x)) {","    return 0;","  }","  return $u.vectorfun(dim,x,_cdown);","","}","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"41":0,"44":0,"45":0,"46":0,"47":0,"48":0,"53":0,"54":0,"55":0,"57":0,"59":0,"60":0,"62":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/downsidepot.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/downsidepot.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":18},"end":{"line":25,"column":38}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":14},"end":{"line":32,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":44,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":43,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":3},"end":{"line":27,"column":49}},"5":{"start":{"line":29,"column":3},"end":{"line":29,"column":31}},"6":{"start":{"line":30,"column":3},"end":{"line":30,"column":31}},"7":{"start":{"line":32,"column":3},"end":{"line":38,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":14}},"9":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"10":{"start":{"line":35,"column":6},"end":{"line":35,"column":45}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":13}},"12":{"start":{"line":39,"column":2},"end":{"line":41,"column":2}},"13":{"start":{"line":40,"column":3},"end":{"line":40,"column":12}},"14":{"start":{"line":42,"column":1},"end":{"line":42,"column":37}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":23},"end":{"line":29,"column":24}},{"start":{"line":29,"column":27},"end":{"line":29,"column":30}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":24}},{"start":{"line":30,"column":27},"end":{"line":30,"column":30}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method downsidepot"," * @summary Downside potential"," * @description Downside potential"," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {number} mar minimum acceptable return (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * ubique.downsidepot(x,0.1/100);"," * // 0.0025"," * "," * ubique.downsidepot(ubique.cat(0,x,y));"," * // [ [ 0.0023 ], [ 0.0173 ] ]"," */"," $u.downsidepot = function(x,mar,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","   mar = mar == null ? 0 : mar;","   dim = dim == null ? 0 : dim;","   ","   var _ddp = function(a,mar) {","    var z = 0;","    for (var i = 0;i < a.length;i++) {","      z += Math.max(mar - a[i],0) / a.length;","    }","    return z;","  }","  if ($u.isnumber(x)) {","   return x;"," }"," return $u.vectorfun(dim,x,_ddp,mar);","}","}",""],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"37":0,"39":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/downsiderisk.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/downsiderisk.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":19},"end":{"line":26,"column":39}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":16},"end":{"line":33,"column":32}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":45,"column":1}},"2":{"start":{"line":26,"column":1},"end":{"line":44,"column":1}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":50}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"7":{"start":{"line":33,"column":2},"end":{"line":39,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":14}},"9":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"10":{"start":{"line":36,"column":6},"end":{"line":36,"column":57}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":24}},"12":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":13}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":41}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":22},"end":{"line":30,"column":23}},{"start":{"line":30,"column":26},"end":{"line":30,"column":29}}]},"3":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method downsiderisk"," * @summary Downside Risk"," * @description Downside Risk or Semi-Standard Deviation. "," * Measures  the  variability  of  underperformance  below  a  minimum  target   rate "," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {number} mar minimum acceptable return (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * ubique.downsiderisk(x,0.1/100);"," * // 0.00570088"," * "," * ubique.downsiderisk(ubique.cat(0,x,y));"," * // [ [ 0.005263 ], [ 0.028208 ] ]"," */"," $u.downsiderisk = function(x,mar,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mar = mar == null ? 0 : mar;","  dim = dim == null ? 0 : dim;","  ","  var _dsrisk = function(a,mar) {","    var z = 0;","    for (var i = 0; i < a.length; i++) {","      z += Math.pow(Math.min(a[i] - mar,0),2) / a.length;","    }","    return Math.sqrt(z);","  }","  if ($u.isnumber(x)) {","    return x;","  }","  return $u.vectorfun(dim,x,_dsrisk,mar);","}","}",""],"l":{"4":1,"26":1,"27":0,"28":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"38":0,"40":0,"41":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/drawdown.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/drawdown.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":15},"end":{"line":30,"column":36}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":14},"end":{"line":37,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":83,"column":1}},"2":{"start":{"line":30,"column":1},"end":{"line":81,"column":1}},"3":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":32,"column":4},"end":{"line":32,"column":50}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":40}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":30}},"7":{"start":{"line":37,"column":2},"end":{"line":76,"column":3}},"8":{"start":{"line":38,"column":4},"end":{"line":45,"column":5}},"9":{"start":{"line":39,"column":6},"end":{"line":39,"column":36}},"10":{"start":{"line":41,"column":4},"end":{"line":45,"column":5}},"11":{"start":{"line":42,"column":6},"end":{"line":42,"column":44}},"12":{"start":{"line":44,"column":6},"end":{"line":44,"column":47}},"13":{"start":{"line":46,"column":4},"end":{"line":53,"column":10}},"14":{"start":{"line":54,"column":4},"end":{"line":54,"column":16}},"15":{"start":{"line":55,"column":4},"end":{"line":74,"column":5}},"16":{"start":{"line":56,"column":6},"end":{"line":59,"column":7}},"17":{"start":{"line":57,"column":8},"end":{"line":57,"column":24}},"18":{"start":{"line":58,"column":8},"end":{"line":58,"column":27}},"19":{"start":{"line":60,"column":6},"end":{"line":65,"column":7}},"20":{"start":{"line":61,"column":8},"end":{"line":61,"column":45}},"21":{"start":{"line":63,"column":6},"end":{"line":65,"column":7}},"22":{"start":{"line":64,"column":8},"end":{"line":64,"column":35}},"23":{"start":{"line":66,"column":6},"end":{"line":68,"column":7}},"24":{"start":{"line":67,"column":8},"end":{"line":67,"column":26}},"25":{"start":{"line":69,"column":6},"end":{"line":73,"column":7}},"26":{"start":{"line":70,"column":8},"end":{"line":70,"column":24}},"27":{"start":{"line":71,"column":8},"end":{"line":71,"column":34}},"28":{"start":{"line":72,"column":8},"end":{"line":72,"column":29}},"29":{"start":{"line":75,"column":4},"end":{"line":75,"column":76}},"30":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"31":{"start":{"line":78,"column":4},"end":{"line":78,"column":13}},"32":{"start":{"line":80,"column":2},"end":{"line":80,"column":40}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":24},"end":{"line":34,"column":32}},{"start":{"line":34,"column":35},"end":{"line":34,"column":39}}]},"3":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":22},"end":{"line":35,"column":23}},{"start":{"line":35,"column":26},"end":{"line":35,"column":29}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"7":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"8":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":6}},{"start":{"line":63,"column":6},"end":{"line":63,"column":6}}]},"9":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":6}},{"start":{"line":66,"column":6},"end":{"line":66,"column":6}}]},"10":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"11":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method drawdown"," * @summary Drawdown"," * @description Drawdowon from Peak.Any continuous losing return period."," * Return drawdown from peak and time to recovery array."," *"," * Returns an object with:"," *"," * dd (drawdown array)"," * ddrecov (drawdown recovery index)"," * maxdd (max drawdown)"," * maxddrecov (max drawdown recovery period): [start period, end period]"," * "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {string} mode drawdown calculation. 'return','geometric' (def: 'return')"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {object}  "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," *"," * ubique.drawdown(x);"," * // { dd: [ 0, 0, 0, 0.009, 0, 0, 0, 0, 0.014, 0 ], ddrecov: [ 0, 0, 0, 4, 0, 0, 0, 0, 9, 0 ],"," * //   maxdd: 0.014, maxddrecov: [ 8, 9 ] }"," */"," $u.drawdown = function(x,mode,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mode = mode == null ? 'return' : mode;","  dim = dim == null ? 0 : dim;","  ","  var ddown = function(a,mode) {","    if (mode === 'return') {","      _a = $u.cumprod($u.plus(a,1));","    } else","    if (mode === 'geometric') {","      _a = $u.log($u.cumprod($u.plus(a,1)));","    } else {","      throw new Error('unknown drawdown mode');","    }","    var highest = _a[0],","    highestidx = 1,","    _dd = $u.array(_a.length,0),","    _recov = $u.array(_a.length,0),","    _maxdd = 0,","    _maxddidx = [1,_a.length],","    _cdd = [],","    t = 0;","    _cdd[t] = 0;","    for (var i = 0; i < _a.length; i++) {","      if (highest <= _a[i]) {","        highest = _a[i];","        highestidx = i + 1;","      }","      if (mode === 'return') {","        _dd[i] = (highest - _a[i]) / highest;","      } else ","      if (mode === 'geometric') {","        _dd[i] = (highest - _a[i]);","      }","      if (_dd[i] !== 0) {","        _recov[i] = i + 1;","      }","      if (_dd[i] > _maxdd) {","        _maxdd = _dd[i];","        _maxddidx[0] = highestidx;","        _maxddidx[1] = i + 1;","      }","    }","    return {dd: _dd, ddrecov: _recov, maxdd: _maxdd, maxddrecov: _maxddidx};","  }","  if ($u.isnumber(x)) {","    return 0;","  }","  return $u.vectorfun(dim,x,ddown,mode);","}","","}"],"l":{"4":1,"30":1,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"39":0,"41":0,"42":0,"44":0,"46":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"63":0,"64":0,"66":0,"67":0,"69":0,"70":0,"71":0,"72":0,"75":0,"77":0,"78":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/histcondvar.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/histcondvar.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":50}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":43}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":55,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":54,"column":1}},"3":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":50}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":27}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":39}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":39}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":30}},"9":{"start":{"line":38,"column":2},"end":{"line":49,"column":3}},"10":{"start":{"line":39,"column":4},"end":{"line":41,"column":10}},"11":{"start":{"line":42,"column":4},"end":{"line":47,"column":5}},"12":{"start":{"line":43,"column":6},"end":{"line":46,"column":7}},"13":{"start":{"line":44,"column":8},"end":{"line":44,"column":20}},"14":{"start":{"line":45,"column":8},"end":{"line":45,"column":12}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":52}},"16":{"start":{"line":50,"column":2},"end":{"line":52,"column":2}},"17":{"start":{"line":51,"column":3},"end":{"line":51,"column":12}},"18":{"start":{"line":53,"column":1},"end":{"line":53,"column":51}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":22}},{"start":{"line":33,"column":25},"end":{"line":33,"column":26}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":28},"end":{"line":34,"column":29}},{"start":{"line":34,"column":32},"end":{"line":34,"column":38}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":28},"end":{"line":35,"column":29}},{"start":{"line":35,"column":32},"end":{"line":35,"column":38}}]},"5":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},{"start":{"line":36,"column":26},"end":{"line":36,"column":29}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":6}},{"start":{"line":43,"column":6},"end":{"line":43,"column":6}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method histcondvar"," * @summary Historical Conditional Value-At-Risk"," * @description Historical Conditional Value-At-Risk. Univariate historical simulation.Single asset"," * "," * @param  {array|matrix} x array or matrix of values    "," * @param  {number} p confidence level in the range [0,1] (def: 0.95)"," * @param  {number} amount amount (def: 1)"," * @param  {period} period time horizon (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)    "," * @return {number|array}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * // historical daily conditional VaR at 95% conf level"," * ubique.histcondvar(ubique.cat(0,x,y),0.95);"," * // [ [ 0.014 ], [ 0.061 ] ]"," *"," * // historical daily conditional VaR at 99% for 100k GBP asset over 10 days "," * ubique.histcondvar(ubique.cat(0,x,y),0.99,100000,10);"," * // [ [ 4427.188724 ], [ 19289.893727 ] ]"," */"," $u.histcondvar = function(x,p,amount,period,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  p = p == null ? 0.95 : p;","  amount = amount == null ? 1 : amount;","  period = period == null ? 1 : period;","  dim = dim == null ? 0 : dim;","","  var _hcvar = function(a,p,amount,period) {","    var _VaR = -$u.histvar(a,p),","    z = [],","    t = 0;","    for (var i = 0; i < a.length; i++) {","      if (a[i] <= _VaR) {","        z[t] = a[i];","        t++;","      }","    }","    return -$u.mean(z) * Math.sqrt(period) * amount;","  }","  if ($u.isnumber(x)) {","   return x;"," }"," return $u.vectorfun(dim,x,_hcvar,p,amount,period);","}","}",""],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"42":0,"43":0,"44":0,"45":0,"48":0,"50":0,"51":0,"53":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/histvar.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/histvar.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":46}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":45}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":46,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":45,"column":1}},"3":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":50}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":27}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":39}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":39}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":30}},"9":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":62}},"11":{"start":{"line":41,"column":2},"end":{"line":43,"column":2}},"12":{"start":{"line":42,"column":3},"end":{"line":42,"column":12}},"13":{"start":{"line":44,"column":1},"end":{"line":44,"column":53}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":22}},{"start":{"line":33,"column":25},"end":{"line":33,"column":26}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":28},"end":{"line":34,"column":29}},{"start":{"line":34,"column":32},"end":{"line":34,"column":38}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":28},"end":{"line":35,"column":29}},{"start":{"line":35,"column":32},"end":{"line":35,"column":38}}]},"5":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},{"start":{"line":36,"column":26},"end":{"line":36,"column":29}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method histvar"," * @summary Historical Value-At-Risk"," * @description Univariate historical simulation. Single asset"," * "," * @param  {array|matrix} x array or matrix of values    "," * @param  {number} p confidence level in the range [0,1] (def: 0.95)"," * @param  {number} amount amount (def: 1)"," * @param  {period} period time horizon (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)    "," * @return {number|array}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * // historical daily VaR at 95% conf level"," * ubique.histvar(ubique.cat(0,x,y),0.95);"," * // [ [ 0.014 ], [ 0.061 ] ]"," *"," * // historical daily VaR at 99% for 100k GBP asset over 10 days "," * ubique.histvar(ubique.cat(0,x,y),0.99,100000,10);"," * // [ [ 4427.188724 ], [ 19289.893727 ] ]"," */"," $u.histvar = function(x,p,amount,period,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  p = p == null ? 0.95 : p;","  amount = amount == null ? 1 : amount;","  period = period == null ? 1 : period;","  dim = dim == null ? 0 : dim;","","  var _histvar = function(a,p,amount,period) {","    return -$u.quantile(a,1 - p) * Math.sqrt(period) * amount;","  }","  if ($u.isnumber(x)) {","   return x;"," }"," return $u.vectorfun(dim,x,_histvar,p,amount,period);","}","}"],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/hurst.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/hurst.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":33}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":15},"end":{"line":37,"column":32}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":49,"column":1}},"2":{"start":{"line":31,"column":1},"end":{"line":47,"column":1}},"3":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"4":{"start":{"line":33,"column":3},"end":{"line":33,"column":49}},"5":{"start":{"line":35,"column":2},"end":{"line":35,"column":33}},"6":{"start":{"line":36,"column":2},"end":{"line":36,"column":30}},"7":{"start":{"line":37,"column":2},"end":{"line":41,"column":3}},"8":{"start":{"line":38,"column":4},"end":{"line":38,"column":28}},"9":{"start":{"line":39,"column":4},"end":{"line":39,"column":60}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":45}},"11":{"start":{"line":42,"column":2},"end":{"line":44,"column":2}},"12":{"start":{"line":43,"column":3},"end":{"line":43,"column":12}},"13":{"start":{"line":45,"column":1},"end":{"line":45,"column":40}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":24},"end":{"line":35,"column":25}},{"start":{"line":35,"column":28},"end":{"line":35,"column":32}}]},"3":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},{"start":{"line":36,"column":26},"end":{"line":36,"column":29}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]}},"code":["/**"," * Time Series Analysis"," */"," module.exports = function($u) {","/**"," * @method hurst"," * @summary Hurst index/exponent"," * @description It's a useful statistic for detecting if a time series is mean reverting (anti-persistent), totally random or persistent."," * A value in the range [0.5) indicates mean-reverting (anti-persistent)"," * A value of 0.5 indicate a random walk"," * A value H in the range (0.5,1] indicates momentum (persistent)"," * "," * @param  {array|matrix} x array of values"," * @param  {number} flag normalization value 0: population, 1:sample (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * ubique.hurst(x);"," * // 0.344059"," * "," * ubique.hurst(x,1);"," * // 0.3669383"," * "," * ubique.hurst(ubique.cat(0,x,y));"," * // [ [ 0.344059 ], [ 0.51531 ] ]"," */"," $u.hurst = function(x,flag,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  flag = flag == null ? 1 : flag;","  dim = dim == null ? 0 : dim;","  var _hurst = function(a,flag) {","    var cdev = $u.cumdev(a);","    var rs = ($u.max(cdev) - $u.min(cdev)) / $u.std(a,flag);","    return Math.log(rs) / Math.log(a.length);","  }","  if ($u.isnumber(x)) {","   return 0;"," }"," return $u.vectorfun(dim,x,_hurst,flag); ","","}","","}"],"l":{"4":1,"31":1,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/inforatio.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/inforatio.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":16},"end":{"line":26,"column":34}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":43,"column":1}},"2":{"start":{"line":26,"column":1},"end":{"line":42,"column":1}},"3":{"start":{"line":27,"column":3},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":50}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"6":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":58}},"8":{"start":{"line":34,"column":2},"end":{"line":41,"column":2}},"9":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"10":{"start":{"line":37,"column":2},"end":{"line":41,"column":2}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":37}},"12":{"start":{"line":40,"column":3},"end":{"line":40,"column":83}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":3},"end":{"line":27,"column":3}},{"start":{"line":27,"column":3},"end":{"line":27,"column":3}}]},"2":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":22},"end":{"line":30,"column":23}},{"start":{"line":30,"column":26},"end":{"line":30,"column":29}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":19}},{"start":{"line":34,"column":23},"end":{"line":34,"column":36}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"6":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":20}},{"start":{"line":37,"column":24},"end":{"line":37,"column":37}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method inforatio"," * @summary Information Ratio"," * @description Information Ratio"," * "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {array} y benchmark returns"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|matrix}      "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var z = [0.04,-0.022,0.043,0.028,-0.078,-0.011,0.033,-0.049,0.09,0.087];"," *"," * ubique.inforatio(x,y);"," * // 0.0936915"," * "," * ubique.inforatio(ubique.cat(0,x,y),z);"," * // [ [ 0.026302 ], [ -0.059705 ] ]"," */"," $u.inforatio = function(x,y,dim) {","   if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  dim = dim == null ? 0 : dim;","  var _ir = function(a,b) {","    return $u.mean($u.minus(a,b)) / $u.std($u.minus(a,b));","  }","  if ($u.isarray(x) && $u.isarray(y)) {","    return  _ir(x,y);","  } else","  if ($u.ismatrix(x) && $u.isarray(y)) {","    return $u.vectorfun(dim,x,_ir,y);","  } else {","   throw new Error('first input must be an array/matrix, the second one an array');"," }","}","}",""],"l":{"4":1,"26":1,"27":0,"28":0,"30":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/irr.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/irr.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":10},"end":{"line":32,"column":36}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":13},"end":{"line":36,"column":39}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":14},"end":{"line":43,"column":40}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":83,"column":1}},"2":{"start":{"line":32,"column":1},"end":{"line":81,"column":1}},"3":{"start":{"line":33,"column":3},"end":{"line":35,"column":3}},"4":{"start":{"line":34,"column":4},"end":{"line":34,"column":50}},"5":{"start":{"line":36,"column":2},"end":{"line":42,"column":3}},"6":{"start":{"line":37,"column":4},"end":{"line":37,"column":16}},"7":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"8":{"start":{"line":39,"column":6},"end":{"line":39,"column":53}},"9":{"start":{"line":41,"column":4},"end":{"line":41,"column":15}},"10":{"start":{"line":43,"column":2},"end":{"line":49,"column":3}},"11":{"start":{"line":44,"column":4},"end":{"line":44,"column":16}},"12":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"13":{"start":{"line":46,"column":6},"end":{"line":46,"column":64}},"14":{"start":{"line":48,"column":4},"end":{"line":48,"column":15}},"15":{"start":{"line":50,"column":2},"end":{"line":54,"column":3}},"16":{"start":{"line":51,"column":4},"end":{"line":51,"column":36}},"17":{"start":{"line":52,"column":4},"end":{"line":52,"column":11}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":16}},"19":{"start":{"line":55,"column":2},"end":{"line":58,"column":3}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":11}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":16}},"22":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"23":{"start":{"line":60,"column":4},"end":{"line":60,"column":16}},"24":{"start":{"line":62,"column":2},"end":{"line":69,"column":14}},"25":{"start":{"line":70,"column":2},"end":{"line":76,"column":38}},"26":{"start":{"line":71,"column":4},"end":{"line":71,"column":31}},"27":{"start":{"line":72,"column":4},"end":{"line":72,"column":49}},"28":{"start":{"line":73,"column":4},"end":{"line":73,"column":39}},"29":{"start":{"line":74,"column":4},"end":{"line":74,"column":19}},"30":{"start":{"line":75,"column":4},"end":{"line":75,"column":58}},"31":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"32":{"start":{"line":78,"column":4},"end":{"line":78,"column":36}},"33":{"start":{"line":80,"column":2},"end":{"line":80,"column":14}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":3},"end":{"line":33,"column":3}},{"start":{"line":33,"column":3},"end":{"line":33,"column":3}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"5":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":28}},{"start":{"line":75,"column":34},"end":{"line":75,"column":56}}]},"6":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":11},"end":{"line":76,"column":15}},{"start":{"line":76,"column":20},"end":{"line":76,"column":35}}]},"7":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]}},"code":["/**"," * Performance metrics"," */"," module.exports = function($u) {","/**"," * @method irr"," * @summary Internal rate of return on an investment based on a series of periodic cash flows"," * @description Calculates the internal rate of return on an investment"," * based on a series of regularly/irregurarly periodic cash flows."," * "," * @param  {array} cf income or payments associated with the investment. Must contain at least one negative and one positive cash flow to calculate rate of return, and the first amount must be negative"," * @param  {array} cfd number of calendar days from the beginning of the period that cash flow occurs"," * @param  {number} cd total number of calendar days in the measurement period"," * @param  {number} guess estimate for what the internal rate of return will be (def: 0.1)"," * @return {number}       "," *"," * @example"," * //Simple IRR"," * ubique.irr([250000,25000,-10000,-285000]);"," * // 0.024712563094781776"," * "," * ubique.irr([74.2,37.1,-104.4],[0,1,2],2);"," * // -0.07410820570460687"," *"," * //Modified IRR"," * ubique.irr([250000,25000,-10000,-285000],[0,45,69,90],90);"," * // 0.07692283872311274"," * "," * ubique.irr([74.2,37.1,-104.4],[0,14,31],31);"," * // -0.07271456460699813"," */"," $u.irr = function(cf,cfd,cd,guess) {","   if (arguments.length < 1) {","    throw new Error('not enough input arguments');","  }","  var _npv = function(cf,cfd,cd,guess) {","    var npv = 0;","    for (var i = 0;i < cf.length;i++) {","      npv += cf[i] / Math.pow((1 + guess),cfd[i]/cd);","    }","    return npv;","  }","  var _npvd = function(cf,cfd,cd,guess) {","    var npv = 0;","    for (var i = 0;i < cf.length;i++) {","      npv -= cfd[i]/cd * cf[i] / Math.pow((1 + guess),cfd[i]/cd)","    }","    return npv;","  }","  if (arguments.length === 1) {","    cfd = $u.colon(0,cf.length-1,1);","    cd = 1;","    guess = 0.1;","  }","  if (arguments.length === 2) {","    cd = 1;","    guess = 0.1;","  }","  if (arguments.length === 3) {","    guess = 0.1;","  }","  var rate = guess,","  maxeps = 1e-6,","  maxiter = 50,","  newrate = 0,","  epsrate = 0,","  npv = 0,","  cnt = 0,","  cntv = true;","  do {","    npv = _npv(cf,cfd,cd,rate);","    newrate = rate - npv / _npvd(cf,cfd,cd,rate);","    epsrate = Math.abs(newrate - rate);","    rate = newrate;","    cntv = (epsrate > maxeps) && (Math.abs(npv) > maxeps);","  } while (cntv && (cnt++ < maxiter));","  if (cntv) {","    throw new Error('number error');","  }","  return rate;","}","","}"],"l":{"4":1,"32":1,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"41":0,"43":0,"44":0,"45":0,"46":0,"48":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"59":0,"60":0,"62":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"77":0,"78":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/jensenalpha.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/jensenalpha.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":18},"end":{"line":28,"column":42}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":12},"end":{"line":35,"column":32}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":48,"column":1}},"2":{"start":{"line":28,"column":1},"end":{"line":47,"column":1}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":50}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":36}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":30}},"7":{"start":{"line":35,"column":2},"end":{"line":38,"column":3}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":38}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":60}},"10":{"start":{"line":39,"column":2},"end":{"line":46,"column":3}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":27}},"12":{"start":{"line":42,"column":2},"end":{"line":46,"column":3}},"13":{"start":{"line":43,"column":4},"end":{"line":43,"column":43}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":84}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":26},"end":{"line":32,"column":27}},{"start":{"line":32,"column":30},"end":{"line":32,"column":35}}]},"3":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":22},"end":{"line":33,"column":23}},{"start":{"line":33,"column":26},"end":{"line":33,"column":29}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"5":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":19}},{"start":{"line":39,"column":23},"end":{"line":39,"column":36}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"7":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":20}},{"start":{"line":42,"column":24},"end":{"line":42,"column":37}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method jensenalpha"," * @summary Jensen alpha"," * @description  Ex-post alpha calculated with regression line. Free-risk is the avereage free-risk for the timeframe selected."," *"," * @param  {array|matrix} x asset/portfolio values"," * @param  {array} y benchmark values"," * @param  {number} frisk  free-risk (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|matrix}      "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var z = [0.04,-0.022,0.043,0.028,-0.078,-0.011,0.033,-0.049,0.09,0.087];"," * var cat = ubique.cat;"," * "," * ubique.jensenalpha(x,y);"," * // 0.017609"," * "," * ubique.jensenalpha(cat(0,x,y),z);"," * // [ [ 0.020772 ], [ 0.006256 ] ]"," */"," $u.jensenalpha = function(x,y,frisk,dim) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  dim = dim == null ? 0 : dim;","","  var _ja = function(a,b,frisk) {","    var beta = $u.linearreg(a,b).beta;","    return $u.mean(a) - frisk - beta * ($u.mean(b) - frisk);","  }","  if ($u.isarray(x) && $u.isarray(y)) {","    return  _ja(x,y,frisk);","  } else","  if ($u.ismatrix(x) && $u.isarray(y)) {","    return $u.vectorfun(dim,x,_ja,y,frisk);","  } else {","    throw new Error('first input must be an array/matrix, the second one an array');","  }","}","}"],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"33":0,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0,"43":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/m2sortino.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/m2sortino.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":16},"end":{"line":30,"column":46}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":19},"end":{"line":39,"column":45}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":51,"column":1}},"2":{"start":{"line":30,"column":1},"end":{"line":50,"column":1}},"3":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":32,"column":4},"end":{"line":32,"column":50}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":36}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":30}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":26}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":30}},"9":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":133}},"11":{"start":{"line":42,"column":2},"end":{"line":49,"column":3}},"12":{"start":{"line":43,"column":4},"end":{"line":43,"column":40}},"13":{"start":{"line":45,"column":2},"end":{"line":49,"column":3}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":56}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":84}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":26},"end":{"line":34,"column":27}},{"start":{"line":34,"column":30},"end":{"line":34,"column":35}}]},"3":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":22},"end":{"line":35,"column":23}},{"start":{"line":35,"column":26},"end":{"line":35,"column":29}}]},"4":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":18},"end":{"line":36,"column":21}},{"start":{"line":36,"column":24},"end":{"line":36,"column":25}}]},"5":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":22},"end":{"line":37,"column":23}},{"start":{"line":37,"column":26},"end":{"line":37,"column":29}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"7":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":19}},{"start":{"line":42,"column":23},"end":{"line":42,"column":36}}]},"8":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"9":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":20}},{"start":{"line":45,"column":24},"end":{"line":45,"column":37}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method m2sortino"," * @summary M-squared for Sortino"," * @description M2 calculated for Downside risk instead of Total Risk"," *  "," * @param  {array|matrix} x asset/portfolio values"," * @param  {array} y benchmark values"," * @param  {number} frisk free-risk rate (def: 0)"," * @param  {number} mar minimum acceptable return (def: 0)"," * @param  {number} t frequencey of data. 1: yearly, 4: quarterly, 12: monthly, 52: weekly, 252: daily (def: 252)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|matrix}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var z = [0.04,-0.022,0.043,0.028,-0.078,-0.011,0.033,-0.049,0.09,0.087];"," * var cat = ubique.cat;"," * "," * ubique.m2sortino(x,y,0,0,12);"," * // 0.103486"," * "," * ubique.m2sortino(cat(0,x,y),z,0,0,12);"," * // [ [ 0.527018 ], [ 0.148094 ] ]"," */"," $u.m2sortino = function(x,y,frisk,mar,t,dim) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  mar = mar == null ? 0 : mar;","  t = t == null ? 252 : t;","  dim = dim == null ? 0 : dim;","","  var _m2sortino = function(a,b,frisk,mar,t) {","    return $u.annreturn(a,t) + $u.sortino(a,frisk,mar) * ($u.downsiderisk(b,mar) * $u.sqrt(t) - $u.downsiderisk(a,mar) * $u.sqrt(t));","  }","  if ($u.isarray(x) && $u.isarray(y)) {","    return  _m2sortino(x,y,frisk,mar,t);","  } else","  if ($u.ismatrix(x) && $u.isarray(y)) {","    return $u.vectorfun(dim,x,_m2sortino,y,frisk,mar,t);","  } else {","    throw new Error('first input must be an array/matrix, the second one an array');","  }","}","}"],"l":{"4":1,"30":1,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0,"43":0,"45":0,"46":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/martinratio.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/martinratio.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":18},"end":{"line":30,"column":47}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":21},"end":{"line":39,"column":46}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":50,"column":1}},"2":{"start":{"line":30,"column":1},"end":{"line":48,"column":1}},"3":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":32,"column":4},"end":{"line":32,"column":50}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":36}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":26}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":40}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":30}},"9":{"start":{"line":39,"column":2},"end":{"line":43,"column":3}},"10":{"start":{"line":40,"column":4},"end":{"line":41,"column":54}},"11":{"start":{"line":42,"column":4},"end":{"line":42,"column":51}},"12":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":66}},"14":{"start":{"line":47,"column":2},"end":{"line":47,"column":55}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":26},"end":{"line":34,"column":27}},{"start":{"line":34,"column":30},"end":{"line":34,"column":35}}]},"3":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":18},"end":{"line":35,"column":21}},{"start":{"line":35,"column":24},"end":{"line":35,"column":25}}]},"4":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":24},"end":{"line":36,"column":32}},{"start":{"line":36,"column":35},"end":{"line":36,"column":39}}]},"5":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":22},"end":{"line":37,"column":23}},{"start":{"line":37,"column":26},"end":{"line":37,"column":29}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method martinratio"," * @summary Martin Ratio"," * @description A risk-adjusted measure with free risk and Ulcer index."," * "," * Martin Ratio = (Portfolio Return - RiskFree) / Ulcer Index"," *  "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} frisk annual free-risk rate (def: 0)"," * @param  {number} t frequencey of data. 1: yearly, 4: quarterly, 12: monthly, 52: weekly, 252: daily (def: 252)"," * @param  {string} mode drawdown calculation. 'return','geometric' (def: 'return')"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|arrray}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," *"," * ubique.martinratio(x,0,12);"," * // 44.425456"," *"," * ubique.martinratio(cat(0,x,y),0,12);"," * // [ [ 44.425456 ], [ 2.438364 ] ]"," */"," $u.martinratio = function(x,frisk,t,mode,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  t = t == null ? 252 : t;","  mode = mode == null ? 'return' : mode;","  dim = dim == null ? 0 : dim;","","  var _martinratio = function(a,frisk,t,mode) {","    var annret = $u.annreturn(a,t),","    dd = $u.sqrt($u.sum($u.power($u.cdrawdown(a),2)));","    return (annret - frisk) /$u.ulcerindex(a,mode);","  }","  if ($u.isnumber(x)) {","    throw new Error('input arguments must be an array or matrix');","  }","  return $u.vectorfun(dim,x,_martinratio,frisk,t,mode);","}","","}"],"l":{"4":1,"30":1,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0,"44":0,"45":0,"47":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/mdietz.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/mdietz.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":13},"end":{"line":26,"column":39}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":56,"column":1}},"2":{"start":{"line":26,"column":1},"end":{"line":55,"column":3}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":50}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":18}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":13}},"7":{"start":{"line":32,"column":2},"end":{"line":53,"column":5}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":55}},"9":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"10":{"start":{"line":36,"column":6},"end":{"line":36,"column":78}},"11":{"start":{"line":38,"column":4},"end":{"line":43,"column":5}},"12":{"start":{"line":39,"column":6},"end":{"line":41,"column":7}},"13":{"start":{"line":40,"column":8},"end":{"line":40,"column":59}},"14":{"start":{"line":42,"column":6},"end":{"line":42,"column":31}},"15":{"start":{"line":44,"column":6},"end":{"line":44,"column":20}},"16":{"start":{"line":45,"column":6},"end":{"line":47,"column":7}},"17":{"start":{"line":46,"column":8},"end":{"line":46,"column":30}},"18":{"start":{"line":48,"column":6},"end":{"line":48,"column":19}},"19":{"start":{"line":49,"column":6},"end":{"line":51,"column":7}},"20":{"start":{"line":50,"column":8},"end":{"line":50,"column":22}},"21":{"start":{"line":52,"column":6},"end":{"line":52,"column":43}},"22":{"start":{"line":54,"column":4},"end":{"line":54,"column":14}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]}},"code":["/**"," * Performance metrics"," */"," module.exports = function($u) {","/**"," * @method mdietz"," * @summary Historical performance of an investment portfolio with external cash flows"," * @description Historical performance of an investment portfolio with external cash flows"," * "," * @param  {number} ev ending value"," * @param  {number} bv beginning market value"," * @param  {number|array} cf external cashflows (inflows/outflows)"," * @param  {number|array} cfd number of calendar days from the beginning of the period that cash flow occurs"," * @param  {number} cd total number of calendar days in the measurement period"," * @return {number}"," *"," * @example"," * var ev = 104.4,bv = 74.2,cf = 37.1,cfd = 14, cd = 31;"," * ubique.mdietz(ev,bv,cf,cfd,cd);"," * // -0.07298099559862156"," *"," * var ev = 1200,bv = 1000,cf = [10,50,35,20],cfd = [15,38,46,79],cd = 90;"," * ubique.mdietz(ev,bv,cf,cfd,cd);"," * // 0.0804"," */"," $u.mdietz = function(ev,bv,cf,cfd,cd) {","  if (arguments.length < 5) {","    throw new Error('not enough input arguments');","  }","  var md = -99999;","  var w = [];","  if ($u.isnumber(cf)) {","    md = (ev - bv - cf) / (bv + (cf * (1 - cfd / cd)));","  } else {","    if (cd <= 0) {","      throw new Error('actual number of days in the period negative or zero');","    }","    for (var i = 0;i < cf.length;i++) {","      if (cfd[i] < 0) {","        throw new Error('number of days negative or zero');","      }","      w[i] = (1 - cfd[i] / cd);","    }","      var ttwcf = 0; //total weighted cash flows","      for (var i = 0;i < cf.length;i++) {","        ttwcf += w[i] * cf[i];","      }","      var tncf = 0; //total net cash flows","      for (var i = 0;i < cf.length;i++) {","        tncf += cf[i];","      }","      md = (ev - bv - tncf) / (bv + ttwcf);","    }","    return md;","  }","}"],"l":{"4":1,"26":1,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"40":0,"42":0,"44":0,"45":0,"46":0,"48":0,"49":0,"50":0,"52":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/modigliani.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/modigliani.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":17},"end":{"line":28,"column":41}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":12},"end":{"line":35,"column":32}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":47,"column":1}},"2":{"start":{"line":28,"column":1},"end":{"line":46,"column":1}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":50}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":36}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":30}},"7":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":69}},"9":{"start":{"line":38,"column":2},"end":{"line":45,"column":3}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":27}},"11":{"start":{"line":41,"column":2},"end":{"line":45,"column":3}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":43}},"13":{"start":{"line":44,"column":4},"end":{"line":44,"column":84}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":26},"end":{"line":32,"column":27}},{"start":{"line":32,"column":30},"end":{"line":32,"column":35}}]},"3":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":22},"end":{"line":33,"column":23}},{"start":{"line":33,"column":26},"end":{"line":33,"column":29}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"5":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":19}},{"start":{"line":38,"column":23},"end":{"line":38,"column":36}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"7":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":20}},{"start":{"line":41,"column":24},"end":{"line":41,"column":37}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method modigliani"," * @summary Modigliani index for risk-adjusted return"," * @description Modigliani index for risk-adjusted return"," *  "," * @param  {array|matrix} x asset/portfolio values"," * @param  {array} y benchmark values"," * @param  {number} frisk free-risk rate (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|matrix}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var z = [0.04,-0.022,0.043,0.028,-0.078,-0.011,0.033,-0.049,0.09,0.087];"," * var cat = ubique.cat;"," * "," * ubique.modigliani(x,y);"," * // 0.0406941"," * "," * ubique.modigliani(cat(0,x,y),z);"," * // [ [ 0.042585 ], [ 0.013185 ] ]"," */"," $u.modigliani = function(x,y,frisk,dim) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  dim = dim == null ? 0 : dim;","","  var _m2 = function(a,b,frisk) {","    return $u.mean(a) + $u.sharpe(a,frisk) * ($u.std(b) - $u.std(a));","  }","  if ($u.isarray(x) && $u.isarray(y)) {","    return  _m2(x,y,frisk);","  } else","  if ($u.ismatrix(x) && $u.isarray(y)) {","    return $u.vectorfun(dim,x,_m2,y,frisk);","  } else {","    throw new Error('first input must be an array/matrix, the second one an array');","  }","}","}"],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/montecarlovar.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/montecarlovar.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":20},"end":{"line":29,"column":46}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":53,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":51,"column":1}},"3":{"start":{"line":30,"column":3},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":16}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":27}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":24}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":27}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":24}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":37}},"10":{"start":{"line":38,"column":2},"end":{"line":45,"column":3}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":20}},"12":{"start":{"line":41,"column":2},"end":{"line":45,"column":3}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":18}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":64}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":17}},"16":{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},"17":{"start":{"line":48,"column":4},"end":{"line":48,"column":92}},"18":{"start":{"line":50,"column":2},"end":{"line":50,"column":58}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":3},"end":{"line":30,"column":3}},{"start":{"line":30,"column":3},"end":{"line":30,"column":3}}]},"2":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":22}},{"start":{"line":33,"column":25},"end":{"line":33,"column":26}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":18},"end":{"line":34,"column":19}},{"start":{"line":34,"column":22},"end":{"line":34,"column":23}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":20},"end":{"line":35,"column":21}},{"start":{"line":35,"column":24},"end":{"line":35,"column":26}}]},"5":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":18},"end":{"line":36,"column":19}},{"start":{"line":36,"column":22},"end":{"line":36,"column":23}}]},"6":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":24},"end":{"line":37,"column":29}},{"start":{"line":37,"column":32},"end":{"line":37,"column":36}}]},"7":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"8":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method  montecarlovar"," * @summary Montecarlo Value-at-Risk"," * @description Montecarlo VaR for single asset. Based on geometric Brownian motion."," *"," * @param  {number|array} x array of returns or standard deviation of returns"," * @param  {number} p confidence level in the range [0,1] (def: 0.95)"," * @param  {number} t holding period (def: 1)"," * @param  {number} fr free-risk rate (def: 0)"," * @param  {number} v asset/portfolio start value (def: 1)"," * @param  {number} iter number of iterations"," * @return {number}  "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," *"," * // ex-ante simulated VaR at 95% confidence for t = 1, free risk zero, start capital one"," * ubique.montecarlovar(x,0.95,1,0,1,10000);"," * // 0.073219"," * "," * // historical simulated daily VaR at 99% for 100k GBP asset over 10 days "," * ubique.montecarlovar(ubique.std(x),0.99,10,0,100000);"," * // 25254.640005"," */"," $u.montecarlovar = function(x,p,t,fr,v,iter) {","   if (arguments.length === 0) {","    return null;","  }","  p = p == null ? 0.95 : p;","  t = t == null ? 1 : t;","  fr = fr == null ? 0 : fr;","  v = v == null ? 1 : v;","  iter = iter == null ? 10000 : iter;","  if ($u.isnumber(x)) {","    s = $u.clone(x);","  } else ","  if ($u.isarray(x)) {","    s = $u.std(x);","  } else {","    throw new Error('first argument must be a number or array');","  }","  var mcvar = [];","  for (var i = 0;i < iter;i++) {","    mcvar[i] = Math.exp((fr - 0.5 * Math.pow(s,2)) + s * $u.norminv(Math.random(),0,1)) - 1;","  }","  return - Math.pow(t,0.5) * $u.prctile(mcvar, 1 - p) * v;","}","","}"],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"44":0,"46":0,"47":0,"48":0,"50":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/omegaratio.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/omegaratio.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":37}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":39,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":38,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":50}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":30}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"7":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"8":{"start":{"line":32,"column":4},"end":{"line":32,"column":55}},"9":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":15}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":37}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":22},"end":{"line":29,"column":23}},{"start":{"line":29,"column":26},"end":{"line":29,"column":29}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":22},"end":{"line":30,"column":23}},{"start":{"line":30,"column":26},"end":{"line":30,"column":29}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method omegaratio"," * @summary Omega ratio"," * @description Omega ratio"," * "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} mar minimum acceptable return (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * ubique.omegaratio(x);"," * // 8.782609"," * "," * ubique.omegaratio(ubique.cat(0,x,y));"," * // [ [ 8.782609 ], [ 1.728324 ] ]"," */"," $u.omegaratio = function(x,mar,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mar = mar == null ? 0 : dim;","  dim = dim == null ? 0 : dim;","  var _or = function(a,mar) {","    return $u.upsidepot(a,mar) / $u.downsidepot(a,mar);","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_or,mar);","}","}",""],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/painindex.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/painindex.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":16},"end":{"line":26,"column":37}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":19},"end":{"line":33,"column":36}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":44,"column":1}},"2":{"start":{"line":26,"column":1},"end":{"line":42,"column":1}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":50}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":40}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"7":{"start":{"line":33,"column":2},"end":{"line":37,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":35,"column":17}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":26}},"10":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":15}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":45}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":24},"end":{"line":30,"column":32}},{"start":{"line":30,"column":35},"end":{"line":30,"column":39}}]},"3":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method painindex"," * @summary Pain Index"," * @description Mean value of the drawdowns, similar to Ulcer Index."," *  "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {string} mode drawdown calculation. 'return','geometric' (def: 'return')"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array} "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," * "," * ubique.painindex(x);"," * // 0.0023"," * "," * ubique.painindex(cat(0,x,y));"," * // [ [ 0.0023 ], [ 0.042955 ] ]"," */"," $u.painindex = function(x,mode,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mode = mode == null ? 'return' : mode;","  dim = dim == null ? 0 : dim;","","  var _painindex = function(a,mode) {","    dd = $u.drawdown(a,mode).dd,","    n = a.length;","    return $u.sum(dd) / n;","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_painindex,mode);","}","","}"],"l":{"4":1,"26":1,"27":0,"28":0,"30":0,"31":0,"33":0,"34":0,"36":0,"38":0,"39":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/painratio.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/painratio.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":16},"end":{"line":30,"column":45}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":19},"end":{"line":39,"column":44}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":50,"column":1}},"2":{"start":{"line":30,"column":1},"end":{"line":48,"column":1}},"3":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":32,"column":4},"end":{"line":32,"column":50}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":36}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":26}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":43}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":30}},"9":{"start":{"line":39,"column":2},"end":{"line":43,"column":3}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":35}},"11":{"start":{"line":41,"column":4},"end":{"line":41,"column":58}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":50}},"13":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":66}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":53}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":26},"end":{"line":34,"column":27}},{"start":{"line":34,"column":30},"end":{"line":34,"column":35}}]},"3":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":18},"end":{"line":35,"column":21}},{"start":{"line":35,"column":24},"end":{"line":35,"column":25}}]},"4":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":24},"end":{"line":36,"column":35}},{"start":{"line":36,"column":38},"end":{"line":36,"column":42}}]},"5":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":22},"end":{"line":37,"column":23}},{"start":{"line":37,"column":26},"end":{"line":37,"column":29}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method painratio"," * @summary Pain Ratio"," * @description A risk-adjusted measure with free risk and Pain index."," * "," * Pain Ratio = (Portfolio Return - RiskFree) / Pain Index"," *  "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} frisk annual free-risk rate (def: 0)"," * @param  {number} t frequencey of data. 1: yearly, 4: quarterly, 12: monthly, 52: weekly, 252: daily (def: 252)"," * @param  {string} mode drawdown calculation. 'return','geometric' (def: 'return')"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|arrray}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," *"," * ubique.painratio(x,0,12);"," * // 101.044955"," *"," * ubique.painratio(cat(0,x,y),0,12);"," * // [ [ 101.044955 ], [ 3.235687 ] ]"," */"," $u.painratio = function(x,frisk,t,mode,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  t = t == null ? 252 : t;","  mode = mode == null ? 'geometric' : mode;","  dim = dim == null ? 0 : dim;"," ","  var _painratio = function(a,frisk,t,mode) {","    var annret = $u.annreturn(a,t);","    var dd = $u.sqrt($u.sum($u.power($u.cdrawdown(a),2)));","    return (annret - frisk) /$u.painindex(a,mode);","  }","  if ($u.isnumber(x)) {","    throw new Error('input arguments must be an array or matrix');","  }","  return $u.vectorfun(dim,x,_painratio,frisk,t,mode);","}","","}"],"l":{"4":1,"30":1,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"47":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/paramcondvar.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/paramcondvar.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":19},"end":{"line":30,"column":54}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":52}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":21},"end":{"line":45,"column":38}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":56,"column":1}},"2":{"start":{"line":30,"column":1},"end":{"line":55,"column":1}},"3":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":32,"column":4},"end":{"line":32,"column":50}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":27}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":39}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":39}},"8":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"9":{"start":{"line":39,"column":4},"end":{"line":39,"column":93}},"10":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"11":{"start":{"line":42,"column":4},"end":{"line":42,"column":44}},"12":{"start":{"line":44,"column":2},"end":{"line":44,"column":28}},"13":{"start":{"line":45,"column":2},"end":{"line":47,"column":5}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":54}},"15":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":17}},"17":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":29}},"19":{"start":{"line":54,"column":2},"end":{"line":54,"column":13}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":18},"end":{"line":34,"column":22}},{"start":{"line":34,"column":25},"end":{"line":34,"column":26}}]},"3":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":28},"end":{"line":35,"column":29}},{"start":{"line":35,"column":32},"end":{"line":35,"column":38}}]},"4":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":28},"end":{"line":36,"column":29}},{"start":{"line":36,"column":32},"end":{"line":36,"column":38}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"6":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"7":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":21}},{"start":{"line":48,"column":25},"end":{"line":48,"column":37}}]},"8":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"9":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":21}},{"start":{"line":51,"column":25},"end":{"line":51,"column":40}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method paramcondvar"," * @summary Parametric Conditional Value-At-Risk"," * @description Parametric Conditional Value-At-Risk. More sensitive to the shape of the loss distribution in the tails"," * Also known as Expected Shortfall (ES), Expected Tail Loss (ETL)."," * "," * @param  {number|array} mu mean value (def: 0)"," * @param  {number|array} sigma standard deviation (def: 1)"," * @param  {number} p cVaR confidende level in range [0,1] (def: 0.95)"," * @param  {number} amount portfolio/asset amount (def: 1)"," * @param  {number} period time horizon (def: 1)"," * @return {number}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * // parametric daily Var at 95% conf level"," * ubique.paramcondvar(ubique.mean(x),ubique.std(x));"," * // 0.030018"," *"," * //parametric daily VaR at 99% for 100k GBP asset over 10 days (two assets)"," * ubique.paramcondvar(ubique.mean(ubique.cat(0,x,y)),ubique.std(ubique.cat(0,x,y)),0.99,100000,10);"," * // [ [ 19578.980844 ], [ 44511.107219 ] ]"," */"," $u.paramcondvar = function(mu,sigma,p,amount,period) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  p = p == null ? 0.95 : p;","  amount = amount == null ? 1 : amount;","  period = period == null ? 1 : period;","  ","  var _pcvar = function(_mu,_sigma,p,amount,period) {","    return _sigma * $u.normpdf($u.norminv(1 - p))/(1 - p) * amount * Math.sqrt(period) - _mu;","  }","  if ($u.isnumber(mu)) {","    return _pcvar(mu,sigma,p,amount,period);","  }","  var temp = $u.flatten(mu);","  var out = temp.map(function(el,idx) {","    return _pcvar(mu[idx],sigma[idx],p,amount,period);","  });","  if ($u.ismatrix(mu) && $u.isrow(mu)) {","    return [out];","  }","  if ($u.ismatrix(mu) && $u.iscolumn(mu)) {","    return $u.transpose(out);","  }","  return out;","}","}",""],"l":{"4":1,"30":1,"31":0,"32":0,"34":0,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"44":0,"45":0,"46":0,"48":0,"49":0,"51":0,"52":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/paramvar.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/paramvar.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":15},"end":{"line":41,"column":50}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":14},"end":{"line":49,"column":51}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":21},"end":{"line":56,"column":38}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":67,"column":1}},"2":{"start":{"line":41,"column":1},"end":{"line":66,"column":1}},"3":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"4":{"start":{"line":43,"column":3},"end":{"line":43,"column":49}},"5":{"start":{"line":45,"column":2},"end":{"line":45,"column":27}},"6":{"start":{"line":46,"column":2},"end":{"line":46,"column":39}},"7":{"start":{"line":47,"column":2},"end":{"line":47,"column":39}},"8":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"9":{"start":{"line":50,"column":4},"end":{"line":50,"column":76}},"10":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"11":{"start":{"line":53,"column":4},"end":{"line":53,"column":43}},"12":{"start":{"line":55,"column":2},"end":{"line":55,"column":28}},"13":{"start":{"line":56,"column":2},"end":{"line":58,"column":5}},"14":{"start":{"line":57,"column":4},"end":{"line":57,"column":53}},"15":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"16":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"17":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"18":{"start":{"line":63,"column":4},"end":{"line":63,"column":29}},"19":{"start":{"line":65,"column":2},"end":{"line":65,"column":13}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":18},"end":{"line":45,"column":22}},{"start":{"line":45,"column":25},"end":{"line":45,"column":26}}]},"3":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":28},"end":{"line":46,"column":29}},{"start":{"line":46,"column":32},"end":{"line":46,"column":38}}]},"4":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":28},"end":{"line":47,"column":29}},{"start":{"line":47,"column":32},"end":{"line":47,"column":38}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"7":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":21}},{"start":{"line":59,"column":25},"end":{"line":59,"column":37}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"9":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":21}},{"start":{"line":62,"column":25},"end":{"line":62,"column":40}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method paramvar"," * @summary Parametric Value-At-Risk"," * @description Parametric Value-At-Risk. Assets or portfolio returns are normally distributed."," * It manages numbers, arrays, row vectors [[a,b,...,n]] and column vectors [[a],[b],...,[n]]"," * "," * @param  {number|array} mu mean value (def: 0)"," * @param  {number|array} sigma standard deviation (def: 1)"," * @param  {number} p VaR confidende level in range [0,1] (def: 0.95)"," * @param  {number} amount portfolio/asset amount (def: 1)"," * @param  {number} period time horizon (def: 1)"," * @return {number}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * // VaR with numbers"," * ubique.paramvar(0,1);"," * // 1.644854"," *"," * // VaR with arrays"," * ubique.paramvar([0,0,0],[1,2,3]);"," * [ 1.644854, 3.289707, 4.934561 ]"," * "," * // parametric VaR at 95% conf level"," * ubique.paramvar(ubique.mean(x),ubique.std(x));"," * // 0.020311"," * "," * ubique.paramvar(ubique.mean(ubique.cat(0,x,y)),ubique.std(ubique.cat(0,x,y)));"," * // [ [ 0.020311 ], [ 0.074269 ] ]"," *"," * //parametric VaR at 99% for 100k GBP asset over 10 days (two assets)"," * ubique.paramvar(ubique.mean(ubique.cat(0,x,y)),ubique.std(ubique.cat(0,x,y)),0.99,100000,10);"," * // [ [ 11429.165523 ], [ 34867.319072 ] ]"," */"," $u.paramvar = function(mu,sigma,p,amount,period) {"," \tif (arguments.length < 2) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tp = p == null ? 0.95 : p;","  amount = amount == null ? 1 : amount;","  period = period == null ? 1 : period;","","  var _pvar = function(_mu,_sigma,p,amount,period) {","    return (-$u.norminv(1 - p) * _sigma - _mu) * Math.sqrt(period) * amount; ","  }","  if ($u.isnumber(mu)) {","    return _pvar(mu,sigma,p,amount,period);","  }","  var temp = $u.flatten(mu);","  var out = temp.map(function(el,idx) {","    return _pvar(mu[idx],sigma[idx],p,amount,period);","  });","  if ($u.ismatrix(mu) && $u.isrow(mu)) {","    return [out];","  }","  if ($u.ismatrix(mu) && $u.iscolumn(mu)) {","    return $u.transpose(out);","  }","  return out;","}","}",""],"l":{"4":1,"41":1,"42":0,"43":0,"45":0,"46":0,"47":0,"49":0,"50":0,"52":0,"53":0,"55":0,"56":0,"57":0,"59":0,"60":0,"62":0,"63":0,"65":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/percpos.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/percpos.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":14},"end":{"line":27,"column":30}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":17},"end":{"line":33,"column":29}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":47,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":46,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"6":{"start":{"line":33,"column":2},"end":{"line":41,"column":3}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":18}},"8":{"start":{"line":35,"column":4},"end":{"line":39,"column":5}},"9":{"start":{"line":36,"column":6},"end":{"line":38,"column":7}},"10":{"start":{"line":37,"column":8},"end":{"line":37,"column":16}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":28}},"12":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"13":{"start":{"line":43,"column":4},"end":{"line":43,"column":15}},"14":{"start":{"line":45,"column":2},"end":{"line":45,"column":38}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]}},"code":["/**"," * Performance metrics"," */"," module.exports = function($u) {","/**"," * @method percpos"," * @summary Percentage of positive values in array or matrix"," * @description Percentage of positive values in array or matrix"," * "," * @param  {array|matrix} x array of elements"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * ubique.percpos(x);"," * // 0.8"," * "," * ubique.percpos(ubique.cat(0,x,y));"," * // [ [ 0.8 ], [ 0.5 ] ]"," * "," * ubique.percpos(ubique.cat(0,x,y),1);"," * // [ [ 0.5, 1, 1, 0, 0.5, 1, 0.5, 0.5, 0.5, 1 ] ]"," */"," $u.percpos = function(x,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  dim = dim == null ? 0 : dim;","","  var _percpos = function(a) {","    var count = 0;","    for (var i = 0;i < a.length;i++) {","      if (a[i] >= 0) {","        count++;","      } ","    }","    return count / a.length;","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_percpos);","}","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"40":0,"42":0,"43":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/ret2tick.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/ret2tick.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":15},"end":{"line":23,"column":41}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":18},"end":{"line":31,"column":40}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":55,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":53,"column":1}},"3":{"start":{"line":24,"column":3},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":50}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":40}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":33}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":30}},"8":{"start":{"line":31,"column":2},"end":{"line":50,"column":3}},"9":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"10":{"start":{"line":33,"column":6},"end":{"line":33,"column":14}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":15}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":16}},"13":{"start":{"line":37,"column":4},"end":{"line":48,"column":5}},"14":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":41}},"16":{"start":{"line":42,"column":4},"end":{"line":48,"column":5}},"17":{"start":{"line":43,"column":6},"end":{"line":45,"column":7}},"18":{"start":{"line":44,"column":8},"end":{"line":44,"column":45}},"19":{"start":{"line":47,"column":6},"end":{"line":47,"column":47}},"20":{"start":{"line":49,"column":4},"end":{"line":49,"column":13}},"21":{"start":{"line":51,"column":2},"end":{"line":51,"column":49}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":3}},{"start":{"line":24,"column":3},"end":{"line":24,"column":3}}]},"2":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":24},"end":{"line":27,"column":32}},{"start":{"line":27,"column":35},"end":{"line":27,"column":39}}]},"3":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":24},"end":{"line":28,"column":25}},{"start":{"line":28,"column":28},"end":{"line":28,"column":32}}]},"4":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":22},"end":{"line":29,"column":23}},{"start":{"line":29,"column":26},"end":{"line":29,"column":29}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]}},"code":["/**"," * Data Transformation"," */"," module.exports = function($u) {","/**"," * @method ret2tick"," * @summary Convert a return series to a value series with a start value"," * @description  Convert a return series to a value series with a start value"," * "," * @param  {array|matrix} x array of elements"," * @param  {string} mode method to compute returns. 'simple','continuous' (def: simple)"," * @param  {number} sval start value (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {array|matrix}     "," *"," * @example"," * ubique.ret2tick([0.5,-3,2.3],'simple',100);"," * // [ 100, 150, -300, -990 ]"," * "," * ubique.ret2tick([[9, 5], [6, 1]],'simple',100);"," * // [ [ 100, 1000, 6000 ], [ 100, 700, 1400 ] ]"," */"," $u.ret2tick = function(x,mode,sval,dim) {","   if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mode = mode == null ? 'simple' : mode;","  sval = sval == null ? 1 : sval;","  dim = dim == null ? 0 : dim;","  ","  var _ret2tick = function(a,mode,sval) {","    if ($u.isnumber(a)) {","      a = [a];","    }","    var r = [];","    r[0] = sval;","    if (mode === 'simple') {","      for (var i = 1; i <= a.length; i++) {","        r[i] = r[i - 1] * (1 + a[i - 1]);","      }","    } else ","    if (mode === 'continuous') {","      for (var i = 1; i <= a.length; i++) {","        r[i] = r[i - 1] * Math.exp(a[i - 1]);","      }","    } else {","      throw new Error('unknown return method');","    }","    return r;","  }","  return $u.vectorfun(dim,x,_ret2tick,mode,sval);","  ","}","","}"],"l":{"4":1,"23":1,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"42":0,"43":0,"44":0,"47":0,"49":0,"51":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/ror.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/ror.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":10},"end":{"line":30,"column":31}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":13},"end":{"line":37,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":53,"column":1}},"2":{"start":{"line":30,"column":1},"end":{"line":52,"column":1}},"3":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":32,"column":4},"end":{"line":32,"column":50}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":37}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":30}},"7":{"start":{"line":37,"column":2},"end":{"line":47,"column":3}},"8":{"start":{"line":38,"column":4},"end":{"line":45,"column":5}},"9":{"start":{"line":39,"column":6},"end":{"line":39,"column":40}},"10":{"start":{"line":41,"column":4},"end":{"line":45,"column":5}},"11":{"start":{"line":42,"column":6},"end":{"line":42,"column":27}},"12":{"start":{"line":44,"column":6},"end":{"line":44,"column":40}},"13":{"start":{"line":46,"column":4},"end":{"line":46,"column":41}},"14":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":15}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":39}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":24},"end":{"line":34,"column":29}},{"start":{"line":34,"column":32},"end":{"line":34,"column":36}}]},"3":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":22},"end":{"line":35,"column":23}},{"start":{"line":35,"column":26},"end":{"line":35,"column":29}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"6":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]}},"code":["/**"," * Performance metrics"," */"," module.exports = function($u) {","/**"," * @method ror"," * @summary Simple rate of return"," * @description Simple rate of return calculated from the last and the first value of "," * an array of numbers."," * "," * @param  {array|matrix} x array or matrix of returns or values"," * @param  {string} mode mode of values, 'ret' for returns, 'cum' for cumulative (def: 'ret')"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," * "," * ubique.ror(x);"," * // 0.187793"," * "," * ubique.ror([100,101,99,98,97,102,103,104],'cum');"," * // 0.04"," * "," * ubique.ror(cat(0,x,y),'ret');"," * // [ [ 0.187793 ], [ 0.125149 ] ]"," */"," $u.ror = function(x,mode,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mode = mode == null ? 'ret' : mode;","  dim = dim == null ? 0 : dim;","","  var _ror = function(a,mode) {","    if (mode === 'ret') {","      var eq = $u.cumprod($u.plus(1,a));","    } else","    if (mode === 'cum') {","      var eq = $u.clone(a);","    } else {","      throw  new Error('unknown value');","    }","    return eq[eq.length - 1] / eq[0] - 1;","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_ror,mode);","}","}"],"l":{"4":1,"30":1,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"39":0,"41":0,"42":0,"44":0,"46":0,"48":0,"49":0,"51":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/sharpe.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/sharpe.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":13},"end":{"line":26,"column":35}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":16},"end":{"line":33,"column":34}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":26,"column":1},"end":{"line":40,"column":2}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":3},"end":{"line":28,"column":49}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":36}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"7":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":34,"column":3},"end":{"line":34,"column":43}},"9":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"10":{"start":{"line":37,"column":3},"end":{"line":37,"column":14}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":43}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":26},"end":{"line":30,"column":27}},{"start":{"line":30,"column":30},"end":{"line":30,"column":35}}]},"3":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method sharpe"," * @summary Sharpe Ratio"," * @description Sharpe Ratio.Compute Sharpe ratio for an array X of values (daily, weekly, etc) and"," * a free-risk rate. Annual free-risk must be divided to match the right timeframe."," * "," * @param  {array|matrix} x array of value"," * @param  {number} frisk annual free-risk rate (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|arrray}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * ubique.sharpe(x,0.02/12);"," * // 0.698794"," * "," * ubique.sharpe(ubique.cat(0,x,y));"," * // [ [ 0.770539 ], [ 0.23858 ] ]"," */"," $u.sharpe = function(x,frisk,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  frisk = frisk == null ? 0 : frisk;","  dim = dim == null ? 0 : dim;"," "," \tvar _sharpe = function(a,frisk) {"," \t\treturn ($u.mean(a) - frisk) / $u.std(a);"," \t}"," \tif ($u.isnumber(x)) {"," \t\treturn NaN;"," \t}"," \treturn $u.vectorfun(dim,x,_sharpe,frisk);"," }","","}"],"l":{"4":1,"26":1,"27":0,"28":0,"30":0,"31":0,"33":0,"34":0,"36":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/sortino.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/sortino.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":14},"end":{"line":26,"column":40}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":34}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":26,"column":1},"end":{"line":41,"column":1}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":50}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":36}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":30}},"8":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"9":{"start":{"line":35,"column":4},"end":{"line":35,"column":57}},"10":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":15}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":43}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":26},"end":{"line":30,"column":27}},{"start":{"line":30,"column":30},"end":{"line":30,"column":35}}]},"3":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"4":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":22},"end":{"line":32,"column":23}},{"start":{"line":32,"column":26},"end":{"line":32,"column":29}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method sortino"," * @summary Sortino ratio"," * @description  Sortino ratio"," * "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} frisk free-risk rate (def: 0)"," * @param  {number} mar minimum acceptable return (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 1)"," * @return {number|arrray}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * ubique.sortino(x,0.02/12);"," * // 3.08438"," * "," * ubique.sortino(ubique.cat(0,x,y),0.01/12,0.5);"," * // [ [ 0.035364 ], [ 0.024015 ] ]"," */"," $u.sortino = function(x,frisk,mar,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  mar = mar == null ? 0 : mar;","  dim = dim == null ? 0 : dim;","  ","  var _sr = function(a,frisk,mar) {","    return ($u.mean(a) - frisk) / $u.downsiderisk(a,mar);","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_sr,frisk,mar);","}","}",""],"l":{"4":1,"26":1,"27":0,"28":0,"30":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/sterlingratio.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/sterlingratio.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":20},"end":{"line":28,"column":44}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":23},"end":{"line":36,"column":43}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":47,"column":1}},"2":{"start":{"line":28,"column":1},"end":{"line":45,"column":1}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":50}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":36}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":26}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":30}},"8":{"start":{"line":36,"column":2},"end":{"line":40,"column":3}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":35}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":38}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":34}},"12":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":15}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":52}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":26},"end":{"line":32,"column":27}},{"start":{"line":32,"column":30},"end":{"line":32,"column":35}}]},"3":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":21}},{"start":{"line":33,"column":24},"end":{"line":33,"column":25}}]},"4":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":22},"end":{"line":34,"column":23}},{"start":{"line":34,"column":26},"end":{"line":34,"column":29}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method sterlingratio"," * @summary Sterling Ratio"," * @description A risk-adjusted measure like Calmar ratio but the denominator is "," * the largest consecutive drawdown (excluded the 10% excess in the original formula)"," * "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {number} frisk annual free-risk rate (def: 0)"," * @param  {number} t frequencey of data. 1: yearly, 4: quarterly, 12: monthly, 52: weekly, 252: daily (def: 252)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var cat = ubique.cat;"," * "," * ubique.sterlingratio(x,0,12);"," * // 16.701049"," *"," * ubique.sterlingratio(cat(0,x,y),0,12);"," * // [ [ 16.701049 ], [ 1.515412 ] ]"," */"," $u.sterlingratio = function(x,frisk,t,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  t = t == null ? 252 : t;","  dim = dim == null ? 0 : dim;","","  var _sterlingratio = function(a,frisk,t) {","    var annret = $u.annreturn(a,t);","    var ldd = $u.max($u.cdrawdown(a));","    return (annret - frisk) / ldd;","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_sterlingratio,frisk,t);","}","","}"],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/tick2ret.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/tick2ret.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":15},"end":{"line":22,"column":36}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":18},"end":{"line":32,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":52,"column":1}},"2":{"start":{"line":22,"column":1},"end":{"line":50,"column":1}},"3":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"4":{"start":{"line":24,"column":4},"end":{"line":24,"column":50}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":40}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":30}},"7":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":50}},"9":{"start":{"line":32,"column":2},"end":{"line":47,"column":3}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":15}},"11":{"start":{"line":34,"column":4},"end":{"line":45,"column":5}},"12":{"start":{"line":35,"column":6},"end":{"line":37,"column":7}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":39}},"14":{"start":{"line":39,"column":4},"end":{"line":45,"column":5}},"15":{"start":{"line":40,"column":6},"end":{"line":42,"column":7}},"16":{"start":{"line":41,"column":8},"end":{"line":41,"column":45}},"17":{"start":{"line":44,"column":6},"end":{"line":44,"column":45}},"18":{"start":{"line":46,"column":4},"end":{"line":46,"column":13}},"19":{"start":{"line":48,"column":2},"end":{"line":48,"column":44}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"2":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":24},"end":{"line":26,"column":32}},{"start":{"line":26,"column":35},"end":{"line":26,"column":39}}]},"3":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":22},"end":{"line":27,"column":23}},{"start":{"line":27,"column":26},"end":{"line":27,"column":29}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"5":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"6":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]}},"code":["/**"," * Data Transformation"," */"," module.exports = function($u) {","/**"," * @method tick2ret"," * @summary Convert a value series to a return series"," * @description  Convert a value series to a return series. 'simple' (default) for simple returns, 'continuous' for continuously compounded"," * "," * @param  {array|matrix} x array of elements"," * @param  {string} mode method to compute returns. 'simple','continuous' (def: simple)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {array|matrix}     "," *"," * @example"," * ubique.tick2ret([0.5,-3,2.3]);"," * // [ -7, -1.766667 ]"," * "," * ubique.tick2ret([[9, 5], [6, 1]]);"," * // [ [ -0.444444 ], [ -0.833333 ] ]"," */"," $u.tick2ret = function(x,mode,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mode = mode == null ? 'simple' : mode;","  dim = dim == null ? 0 : dim;","  ","  if ($u.numel(x) < 2) {","    throw new Error('insert at least two values');","  }","  var _tick2ret = function(a,mode) {","    var r = [];","    if (mode === 'simple') {","      for (var i = 1;i < a.length;i++) {","        r[i - 1] = a[i] / a[i - 1] - 1;","      }","    } else ","    if (mode === 'continuous') {","      for (var i = 1;i < a.length;i++) {","        r[i - 1] = Math.log(a[i] / a[i - 1]);","      }","    } else {","      throw new Error('unkwon retun method');","    }","    return r;","  }","  return $u.vectorfun(dim,x,_tick2ret,mode);","  ","}","","}",""],"l":{"4":1,"22":1,"23":0,"24":0,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"36":0,"39":0,"40":0,"41":0,"44":0,"46":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/tomonthly.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/tomonthly.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":16},"end":{"line":19,"column":32}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":27},"end":{"line":28,"column":39}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":38,"column":1}},"2":{"start":{"line":19,"column":1},"end":{"line":37,"column":1}},"3":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"4":{"start":{"line":21,"column":4},"end":{"line":21,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":24}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":23}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":12}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":25}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":60}},"10":{"start":{"line":28,"column":40},"end":{"line":28,"column":56}},"11":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":33}},"13":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"14":{"start":{"line":33,"column":4},"end":{"line":33,"column":37}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":34}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["/**"," * Time Series Analysis"," */"," module.exports = function($u) {","/**"," * @method tomonthly"," * @summary Convert a time series to a monthly frequency"," * @description Convert a time series to a monthly frequency. Default: all days"," * in the range."," *"," * @param  {array} nd array of unix dates"," * @param  {array|matrix} nv array or matrix of values"," * @return {matrix}"," *"," * @example"," * ubique.tomonthly(ubique.datenum(['15-01-18','15-02-28','15-03-05','15-03-24','15-04-27'],'YY-MM-DD'),[100,99,102,103,98]);"," * // [ [ 1421539200, 1425081600, 1427155200, 1430092800 ], [ 100, 99, 103, 98 ] ]"," */"," $u.tomonthly = function(nd,nv) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  // basic mode: all data, exact on last day of month","  var md = $u.month(nd);","  var df = $u.diff(md);","  df[0] = 1;","  df = $u.cat(1,df,1)[0];","  var idx = $u.find(df.map(function(el){return el !== 0;}));","  if ($u.isarray(nv)) {","    var newv = $u.subset(nv,idx);","  }","  if ($u.ismatrix(nv)) {","    var newv = $u.subset(nv,idx,':');","  }","  return [$u.subset(nd,idx),newv];","","}","}"],"l":{"4":1,"19":1,"20":0,"21":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/toweekly.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/toweekly.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":15},"end":{"line":20,"column":31}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":27},"end":{"line":27,"column":39}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":43,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":42,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":26}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":59}},"7":{"start":{"line":27,"column":40},"end":{"line":27,"column":55}},"8":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":26}},"10":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":41}},"12":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":33}},"14":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":37}},"16":{"start":{"line":40,"column":2},"end":{"line":40,"column":34}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Time Series Analysis"," */"," module.exports = function($u) {","/**"," * @method toweekly"," * @summary Convert a time series to a weekly frequency"," * @description Convert a time series to a weekly frequency. Default: all days"," * in the range. Example: daily dates [Wed,...Fri,...Mon,...Fri,...Thu] will become "," * [Wed,...,Fri...,Fri...,Thu]"," *"," * @param  {array} nd array of unix dates"," * @param  {array|matrix} nv array or matrix of values"," * @return {matrix}"," *"," * @example"," * ubique.toweekly(ubique.datenum(['15-01-15','15-01-23','15-01-30','15-02-04'],'YY-MM-DD'),[100,99,102,103,98]);"," * // [ [ 1421280000, 1421971200, 1422576000, 1423008000 ],[ 100, 99, 102, 103 ] ]"," */"," $u.toweekly = function(nd,nv) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  var wd = $u.weekday(nd);","","  // basic mode: all data, exact on Friday","  var idx = $u.find(wd.map(function(a) {return a === 5;}));","  if (wd[0] !== 5) {","    idx = $u.cat(1,0,idx);","  }","  if (wd[wd.length - 1] !== 5) {","    idx = $u.cat(1,idx,nd.length - 1)[0];","  }","  if ($u.isarray(nv)) {","    var newv = $u.subset(nv,idx);","  }","  if ($u.ismatrix(nv)) {","    var newv = $u.subset(nv,idx,':');","  }","  return [$u.subset(nd,idx),newv];","","}","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/trackerr.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/trackerr.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":15},"end":{"line":27,"column":33}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":12},"end":{"line":32,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":40,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":39,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"6":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":33}},"8":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":15}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":35}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method trackerr"," * @summary Tracking Error (ex-post)"," * @description  Ex-post tracking error"," * "," * @param  {array|matrix} x array or matrix of X values"," * @param  {array} y array of Y values"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}   "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var z = [0.04,-0.022,0.043,0.028,-0.078,-0.011,0.033,-0.049,0.09,0.087];"," * var cat = ubique.cat;"," * "," * ubique.trackerr(x,z);"," * // 0.068436"," *"," * ubique.trackerr(cat(0,x,y),z);"," * // [ [ 0.068436 ], [ 0.058622 ] ]"," */"," $u.trackerr = function(x,y,dim) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  dim = dim == null ? 0 : dim;","  var _te = function(a,b) {","    return $u.std($u.minus(a,b));","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_te,y);","}","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/treynor.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/treynor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":38}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":17},"end":{"line":35,"column":37}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":45,"column":1}},"2":{"start":{"line":29,"column":1},"end":{"line":44,"column":1}},"3":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":50}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":36}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":30}},"7":{"start":{"line":35,"column":2},"end":{"line":38,"column":3}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":38}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":39}},"10":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":15}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":46}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":26},"end":{"line":33,"column":27}},{"start":{"line":33,"column":30},"end":{"line":33,"column":35}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":22},"end":{"line":34,"column":23}},{"start":{"line":34,"column":26},"end":{"line":34,"column":29}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method treynor"," * @summary Treynor Ratio"," * @description Compute the Treynor ratio for an array X of values (daily, weekly, etc) and"," * a free-risk rate. Annual free-risk must be divided to match the right timeframe."," * "," * @param  {array} x array of X values"," * @param  {array} y array of Y values"," * @param  {number} frisk  free-risk rate (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number}       "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * var z = [0.04,-0.022,0.043,0.028,-0.078,-0.011,0.033,-0.049,0.09,0.087];"," * var cat = ubique.cat;"," * "," * ubique.treynor(x,z,0.01/12);"," * // -0.095687"," *"," * ubique.treynor(cat(0,x,y),z,0.01/12);"," * // [ [ -0.095687 ], [ 0.029863 ] ]"," */"," $u.treynor = function(x,y,frisk,dim) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  frisk = frisk == null ? 0 : frisk;","  dim = dim == null ? 0 : dim;","  var _treynor = function(a,b,frisk) {","    var beta = $u.linearreg(a,b).beta;","    return ($u.mean(a) - frisk) / beta;","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_treynor,y,frisk);","","}","}"],"l":{"4":1,"29":1,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/twr.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/twr.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":37,"column":1}},"2":{"start":{"line":20,"column":1},"end":{"line":35,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"5":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":11}},"7":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":76}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":17}},"10":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":46}},"12":{"start":{"line":34,"column":2},"end":{"line":34,"column":27}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]}},"code":["/**"," * Performance metrics"," */"," module.exports = function($u) {","/**"," * @method twr"," * @summary True Time-weighted return measures the returns of the assets irrespective of the amount invested"," * @description rue Time-weighted return measures the returns of the assets irrespective of the amount invested"," * "," * @param  {array} mv array of market values"," * @param  {array} cf array of external cashflows (inflows/outflows)"," * @return {number}    "," *"," * @example"," * var mv = [250000,255000,257000,288000,293000,285000], cf = [0,0,25000,0,-10000,0];"," * "," * ubique.twr(mv,cf);"," * // 0.07564769566198049"," */"," $u.twr = function(mv,cf) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  if (arguments.length === 1) {","    cf = 0;","  }","  if (mv.length !== cf.length) {","    throw new Error('market value and cash flows must be of the same size');","  }","  var _twr = [1];","  for (var i = 1; i < mv.length; i++) {","    _twr[i] = mv[i] / (mv[i - 1] + cf[i - 1]);","  }","  return $u.prod(_twr) - 1;","}","","}"],"l":{"4":1,"20":1,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"30":0,"31":0,"32":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/ulcerindex.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/ulcerindex.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":38}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":14},"end":{"line":32,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":43,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":41,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":50}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":40}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"7":{"start":{"line":32,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":36}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":21}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":47}},"11":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":15}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":40}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":24},"end":{"line":29,"column":32}},{"start":{"line":29,"column":35},"end":{"line":29,"column":39}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":22},"end":{"line":30,"column":23}},{"start":{"line":30,"column":26},"end":{"line":30,"column":29}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method ulcerindex"," * @summary Ulcer Index"," * @description Ulcer Index of Peter G. Martin (1987). The impact of long, deep drawdowns will have significant"," * impact because the underperformance since the last peak is squared."," *  "," * @param  {array|matrix} x asset/portfolio returns"," * @param  {string} mode drawdown calculation. 'return','geometric' (def: 'return')"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array} "," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var xt = [[0.003,0.026],[0.015,-0.009],[0.014,0.024],[0.015,0.066],[-0.014,0.039]];"," * ubique.ulcerindex(x);"," * // 0.005263"," * "," * ubique.ulcerindex(xt,'return',1);"," * // [ [ 0.006261, 0.004025 ] ]"," */"," $u.ulcerindex = function(x,mode,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mode = mode == null ? 'return' : mode;","  dim = dim == null ? 0 : dim;","","  var _uidx = function(a,mode) {","    var dd = $u.drawdown(a,mode).dd;","    var n = a.length;","    return $u.sqrt($u.sum($u.power(dd,2)) / n);","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_uidx,mode);","}","","}"],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/upsidepot.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/quants/upsidepot.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":16},"end":{"line":25,"column":36}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":13},"end":{"line":32,"column":29}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":44,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":43,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":50}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":30}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"7":{"start":{"line":32,"column":2},"end":{"line":38,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":14}},"9":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"10":{"start":{"line":35,"column":6},"end":{"line":35,"column":45}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":13}},"12":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":15}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":38}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":22},"end":{"line":29,"column":23}},{"start":{"line":29,"column":26},"end":{"line":29,"column":29}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":22},"end":{"line":30,"column":23}},{"start":{"line":30,"column":26},"end":{"line":30,"column":29}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]}},"code":["/**"," * Risk metrics"," */"," module.exports = function($u) {","/**"," * @method upsidepot"," * @summary Upside potential"," * @description Upside potential"," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {number} mar minimum acceptable return (def: 0)"," * @param  {number} dim dimension 0: row, 1: column (def: 1)"," * @return {number|array}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * ubique.upsidepot(x,0.1/100);"," * // 0.0194"," * "," * ubique.upsidepot(ubique.cat(0,x,y));"," * // [ [ 0.0202 ], [ 0.0299 ] ]"," */"," $u.upsidepot = function(x,mar,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  mar = mar == null ? 0 : mar;","  dim = dim == null ? 0 : dim;","","  var _usp = function(a,mar) {","    var z = 0;","    for (var i = 0;i < a.length;i++) {","      z += Math.max(a[i] - mar,0) / a.length;","    }","    return z;","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_usp,mar);","}","}"],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"37":0,"39":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/reglin/interp1.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/reglin/interp1.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":14},"end":{"line":23,"column":33}}},"3":{"name":"(anonymous_3)","line":68,"loc":{"start":{"line":68,"column":17},"end":{"line":68,"column":37}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":81,"column":1}},"2":{"start":{"line":23,"column":1},"end":{"line":67,"column":1}},"3":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":25,"column":4},"end":{"line":25,"column":50}},"5":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":48}},"7":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"9":{"start":{"line":33,"column":2},"end":{"line":38,"column":27}},"10":{"start":{"line":40,"column":2},"end":{"line":52,"column":3}},"11":{"start":{"line":41,"column":4},"end":{"line":51,"column":5}},"12":{"start":{"line":42,"column":6},"end":{"line":42,"column":30}},"13":{"start":{"line":43,"column":6},"end":{"line":43,"column":30}},"14":{"start":{"line":44,"column":6},"end":{"line":44,"column":31}},"15":{"start":{"line":45,"column":6},"end":{"line":45,"column":44}},"16":{"start":{"line":47,"column":6},"end":{"line":47,"column":24}},"17":{"start":{"line":48,"column":6},"end":{"line":48,"column":24}},"18":{"start":{"line":49,"column":6},"end":{"line":49,"column":30}},"19":{"start":{"line":50,"column":6},"end":{"line":50,"column":38}},"20":{"start":{"line":54,"column":2},"end":{"line":61,"column":3}},"21":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"22":{"start":{"line":56,"column":6},"end":{"line":56,"column":20}},"23":{"start":{"line":58,"column":6},"end":{"line":58,"column":38}},"24":{"start":{"line":59,"column":6},"end":{"line":59,"column":54}},"25":{"start":{"line":62,"column":2},"end":{"line":66,"column":3}},"26":{"start":{"line":63,"column":4},"end":{"line":63,"column":19}},"27":{"start":{"line":65,"column":4},"end":{"line":65,"column":16}},"28":{"start":{"line":68,"column":0},"end":{"line":79,"column":1}},"29":{"start":{"line":69,"column":2},"end":{"line":70,"column":11}},"30":{"start":{"line":71,"column":2},"end":{"line":77,"column":3}},"31":{"start":{"line":72,"column":4},"end":{"line":72,"column":33}},"32":{"start":{"line":73,"column":4},"end":{"line":76,"column":5}},"33":{"start":{"line":74,"column":6},"end":{"line":74,"column":21}},"34":{"start":{"line":75,"column":6},"end":{"line":75,"column":14}},"35":{"start":{"line":78,"column":2},"end":{"line":78,"column":13}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"6":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":27}},{"start":{"line":55,"column":31},"end":{"line":55,"column":50}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"9":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":19}},{"start":{"line":73,"column":23},"end":{"line":73,"column":37}}]}},"code":["/**"," * Interpolation"," */"," module.exports = function($u) {","/**"," * @method interp1"," * @summary Linear interpolation"," * @description Linear interpolation. Returns the 1-D value of Y, given Xi query points. "," * "," * @param  {array} x sample points"," * @param  {array} y corresponding values of sample points"," * @param  {number|array} new query points. For values outside [min(X),max(X)] NaN is returned."," * @return {array}"," *"," * @example"," * var x = [1,2,3,4,5,6];"," * var y = [2,4,6,8,10,12];"," * var xnew = [2,4,6];"," *"," * ubique.interp1(x,y,xnew);"," * // [ 4, 8, 12 ]"," */"," $u.interp1 = function(x,y,xnew) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  if (x.length !== y.length) {","    throw new Error('input dimension mismatch');","  }","  if ($u.isnumber(xnew)) {","    xnew = [xnew];","  }","  var ynew = new Array(xnew.length),","  n = x.length,","  dx = new Array(n),","  dy = new Array(n),","  slope = new Array(n),","  intercept = new Array(n);","","  for (var i = 0; i < n; i++) {","    if (i < n - 1) {","      dx[i] = x[i + 1] - x[i];","      dy[i] = y[i + 1] - y[i];","      slope[i] = dy[i] / dx[i];","      intercept[i] = y[i] - x[i] * slope[i];","    } else {","      dx[i] = dx[i - 1];","      dy[i] = dy[y - 1];","      slope[i] = slope[i - 1];","      intercept[i] = intercept[i - 1];      ","    }","  }","","  for (var j = 0; j < xnew.length; j++) {","    if (xnew[j] < $u.min(x) || xnew[j] > $u.max(x)) {","      ynew[j] = NaN;","    } else {","      var idx = findneighb(xnew[j],x);","      ynew[j] = slope[idx] * xnew[j] + intercept[idx];","    }","  }","  if ($u.numel(ynew) === 1) {","    return ynew[0];","  } else {","    return ynew;","  }","}","var findneighb = function(value,arr) {","  var dist = $u.maxval,","  idx = -1;","  for (var i = 0; i < arr.length; i++) {","    var newdist = value - arr[i];","    if (newdist > 0 && newdist < dist) {","      dist = newdist;","      idx = i;","    }","  }","  return idx;","}","","}",""],"l":{"4":1,"23":1,"24":0,"25":0,"27":0,"28":0,"30":0,"31":0,"33":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"50":0,"54":0,"55":0,"56":0,"58":0,"59":0,"62":0,"63":0,"65":0,"68":1,"69":0,"71":0,"72":0,"73":0,"74":0,"75":0,"78":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/reglin/linearreg.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/reglin/linearreg.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":16},"end":{"line":28,"column":30}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":49},"end":{"line":41,"column":62}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":44,"column":1}},"2":{"start":{"line":28,"column":1},"end":{"line":42,"column":1}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":50}},"5":{"start":{"line":32,"column":2},"end":{"line":40,"column":92}},"6":{"start":{"line":41,"column":2},"end":{"line":41,"column":90}},"7":{"start":{"line":41,"column":63},"end":{"line":41,"column":87}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]}},"code":["/**"," * Linear Regression"," */"," module.exports = function($u) {","/**"," * @method  linearreg"," * @summary Linear regression of Y on X"," * @description Return an object with fields: Beta, Alpha, R-squared, function"," * "," * @param  {array} y array of elements in Y"," * @param  {array} x array of elements in X"," * @return {object} "," *"," * @example"," * var x = [ 0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * ubique.linearreg(x,y);"," * // { beta: 0.02308942571228251, alpha: 0.017609073236025237, rsq: 0.0027553853574994254, fun: [Function] }"," * "," * ubique.linearreg([100,101,99,102,105],[1,2,3,4,5])"," * // { beta: 1.1, alpha: 98.1, rsq: 0.5707547169811321, fun: [Function] }"," * "," * ubique.linearreg([100,101,99,102,105],[1,2,3,4,5]).fun(6);"," * // 104.69"," * "," */"," $u.linearreg = function(y,x) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  var n = y.length,","  sx = $u.sum(x),","  sy = $u.sum(y),","  sxy = $u.sum($u.times(x,y)),","  sxx = $u.sum($u.times(x,x)),","  syy = $u.sum($u.times(y,y)),","  beta = (n * sxy - sx * sy) / (n * sxx - sx * sx),","  alpha = (sy - beta * sx) / n,","  rsq = Math.pow((n *sxy - sx * sy)/Math.sqrt((n * sxx - sx * sx) * (n * syy - sy * sy)),2);","  return {beta: beta,alpha: alpha, rsq: rsq,fun: function (x) {return beta * x + alpha;} }","}","","}"],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/corrcoef.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/corrcoef.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":26,"column":1},"end":{"line":40,"column":2}},"3":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"4":{"start":{"line":28,"column":3},"end":{"line":28,"column":49}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":18}},"6":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"7":{"start":{"line":32,"column":3},"end":{"line":32,"column":28}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":38}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":51}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":23}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":47}},"12":{"start":{"line":38,"column":2},"end":{"line":38,"column":61}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":14}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method corrcoef"," * @summary Correlation coefficients of two arrays X,Y"," * @description Correlation coefficients of two arrays X,Y"," *"," * @param  {array|matrix} x array or matrix of elemnts X"," * @param  {array|matrix} y array or matrix of elements Y"," * @param  {number} flag Bessel's correction 0: population, 1: sample (def: 1)"," * @return {matrix}"," *"," * @example"," * var c = [5,6,3];"," * var d = [0.5,-3,2.3];"," * var l = [[1,1,-1],[1,-2,3],[2,3,1]];"," *"," * ubique.corrcoef(l);"," * // [ [ 1, 0.802955, 0 ],[ 0.802955, 1, -0.59604 ],[ 0, -0.59604, 1 ] ]"," * "," * ubique.corrcoef(c,d);"," * // [ [ 1, -0.931151 ], [ -0.931151, 1 ] ]"," */"," $u.corrcoef = function(x) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tvar _args = [x];"," \tfor (var i = 1; i < arguments.length; i++) {"," \t\t_args.push(arguments[i]);"," \t}"," \tvar covm = $u.cov.apply(null,_args);"," \tvar sigma = $u.transpose($u.sqrt($u.diag(covm)));"," \tvar m = sigma.length;"," \tcovm = $u.rdivide(covm,$u.repmat(sigma,1,m));"," \tcovm = $u.rdivide(covm,$u.repmat($u.transpose(sigma),m,1));"," \treturn covm;"," }","","}",""],"l":{"4":1,"26":1,"27":0,"28":0,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/cov.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/cov.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":10},"end":{"line":37,"column":22}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":79,"column":1}},"2":{"start":{"line":37,"column":1},"end":{"line":77,"column":2}},"3":{"start":{"line":38,"column":2},"end":{"line":38,"column":32}},"4":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"5":{"start":{"line":40,"column":3},"end":{"line":40,"column":49}},"6":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"7":{"start":{"line":43,"column":3},"end":{"line":43,"column":47}},"8":{"start":{"line":45,"column":2},"end":{"line":58,"column":3}},"9":{"start":{"line":46,"column":3},"end":{"line":46,"column":32}},"10":{"start":{"line":47,"column":3},"end":{"line":47,"column":66}},"11":{"start":{"line":48,"column":3},"end":{"line":50,"column":4}},"12":{"start":{"line":49,"column":4},"end":{"line":49,"column":50}},"13":{"start":{"line":51,"column":3},"end":{"line":51,"column":23}},"14":{"start":{"line":53,"column":2},"end":{"line":58,"column":3}},"15":{"start":{"line":54,"column":4},"end":{"line":54,"column":33}},"16":{"start":{"line":55,"column":4},"end":{"line":55,"column":24}},"17":{"start":{"line":57,"column":3},"end":{"line":57,"column":12}},"18":{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},"19":{"start":{"line":61,"column":5},"end":{"line":61,"column":23}},"20":{"start":{"line":62,"column":5},"end":{"line":62,"column":23}},"21":{"start":{"line":64,"column":2},"end":{"line":72,"column":3}},"22":{"start":{"line":65,"column":3},"end":{"line":65,"column":20}},"23":{"start":{"line":66,"column":3},"end":{"line":66,"column":35}},"24":{"start":{"line":67,"column":3},"end":{"line":67,"column":35}},"25":{"start":{"line":68,"column":3},"end":{"line":70,"column":4}},"26":{"start":{"line":69,"column":4},"end":{"line":69,"column":50}},"27":{"start":{"line":71,"column":3},"end":{"line":71,"column":21}},"28":{"start":{"line":73,"column":2},"end":{"line":73,"column":22}},"29":{"start":{"line":74,"column":2},"end":{"line":74,"column":24}},"30":{"start":{"line":75,"column":2},"end":{"line":75,"column":40}},"31":{"start":{"line":76,"column":2},"end":{"line":76,"column":60}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"4":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":18},"end":{"line":47,"column":35}},{"start":{"line":47,"column":40},"end":{"line":47,"column":50}},{"start":{"line":47,"column":54},"end":{"line":47,"column":64}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":3},"end":{"line":48,"column":3}},{"start":{"line":48,"column":3},"end":{"line":48,"column":3}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"7":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":18}},{"start":{"line":53,"column":22},"end":{"line":53,"column":56}},{"start":{"line":53,"column":61},"end":{"line":53,"column":88}},{"start":{"line":53,"column":92},"end":{"line":53,"column":119}}]},"8":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"9":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":20}},{"start":{"line":60,"column":25},"end":{"line":60,"column":38}},{"start":{"line":60,"column":42},"end":{"line":60,"column":56}}]},"10":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"11":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":3},"end":{"line":68,"column":3}},{"start":{"line":68,"column":3},"end":{"line":68,"column":3}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method cov"," * @summary Covariance matrix"," * @description Covariance matrix"," *"," * @param  {array|matrix} x array or matrix of elemnts X"," * @param  {array|matrix} y array or matrix of elements Y"," * @param  {number} flag Bessel's correction 0: population, 1: sample (def: 1)"," * @return {number|array}"," *"," * @example"," * var c = [5,6,3];"," * var d = [0.5,-3,2.3];"," * var e = [[9, 5], [6, 1]];"," * var f = [[3, 2], [5, 2]];"," * var l = [[1,1,-1],[1,-2,3],[2,3,1]];"," *"," * ubique.cov(c);"," * // 2.33333"," * "," * ubique.cov(c,d);"," * // [ [ 2.333333, -3.833333 ], [ -3.833333, 7.263333 ] ]"," * "," * ubique.cov(c,d,0);"," * // [ [ 1.555556, -2.555556 ], [ -2.555556, 4.842222 ] ]",""," * ubique.cov(e,f);"," * // [ [ 10.916667, 2 ], [ 2, 2 ] ]"," * "," * ubique.cov(l);"," * // [ [ 0.333333, 1.166667, 0 ],[ 1.166667, 6.333333, -3 ],[ 0, -3, 4 ] ]"," */"," $u.cov = function(x) {","  var arglen = arguments.length;"," \tif (arglen === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif (arglen > 3) {"," \t\tthrow new Error('too many input arguments');"," \t}"," \tif (arglen === 3) {"," \t\tflag = arguments[arglen - 1];"," \t\tvar flagrule = $u.isscalar(flag) && (flag === 0 || flag === 1);"," \t\tif (!flagrule) {"," \t\t\tthrow new Error('third input must be 0 or 1');"," \t\t}"," \t\targlen = arglen - 1;"," \t} else"," \tif (arglen === 2 && $u.isscalar(arguments[arglen - 1]) && (arguments[arglen - 1] === 0 || arguments[arglen - 1] === 1)) {"," \t\t\tflag = arguments[arglen - 1];"," \t\t\targlen = arglen - 1;"," \t} else {"," \t\tflag = 1;"," \t}","","    if (arglen === 1 && ($u.isarray(x) || $u.isvector(x))) {","    \tx = $u.flatten(x);","    \treturn $u.varc(x);","    }"," \tif (arglen === 2) {"," \t\ty = arguments[1];"," \t\tx = $u.transpose($u.flatten(x));"," \t\ty = $u.transpose($u.flatten(y));"," \t\tif (x.length !== y.length) {"," \t\t\tthrow new Error('input dimension must agree');"," \t\t}"," \t\tx = $u.cat(1,x,y);"," \t}"," \tvar m = $u.nrows(x);"," \tvar mu = $u.mean(x,1);"," \tvar z = $u.minus(x,$u.repmat(mu,m,1));"," \treturn $u.rdivide($u.mtimes($u.transpose(z),z), m - flag);"," }","","}","",""],"l":{"4":1,"37":1,"38":0,"39":0,"40":0,"42":0,"43":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"53":0,"54":0,"55":0,"57":0,"60":0,"61":0,"62":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"71":0,"73":0,"74":0,"75":0,"76":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/histc.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/histc.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":12},"end":{"line":41,"column":33}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":15},"end":{"line":48,"column":32}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":82,"column":1}},"2":{"start":{"line":41,"column":1},"end":{"line":81,"column":1}},"3":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"4":{"start":{"line":43,"column":4},"end":{"line":43,"column":50}},"5":{"start":{"line":45,"column":2},"end":{"line":45,"column":34}},"6":{"start":{"line":46,"column":2},"end":{"line":46,"column":31}},"7":{"start":{"line":48,"column":2},"end":{"line":75,"column":3}},"8":{"start":{"line":49,"column":4},"end":{"line":49,"column":15}},"9":{"start":{"line":50,"column":4},"end":{"line":50,"column":15}},"10":{"start":{"line":51,"column":4},"end":{"line":51,"column":17}},"11":{"start":{"line":52,"column":4},"end":{"line":60,"column":5}},"12":{"start":{"line":53,"column":6},"end":{"line":56,"column":30}},"13":{"start":{"line":57,"column":6},"end":{"line":57,"column":44}},"14":{"start":{"line":59,"column":6},"end":{"line":59,"column":15}},"15":{"start":{"line":62,"column":4},"end":{"line":73,"column":5}},"16":{"start":{"line":63,"column":6},"end":{"line":63,"column":15}},"17":{"start":{"line":64,"column":6},"end":{"line":71,"column":7}},"18":{"start":{"line":65,"column":8},"end":{"line":70,"column":9}},"19":{"start":{"line":66,"column":10},"end":{"line":66,"column":20}},"20":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"21":{"start":{"line":69,"column":10},"end":{"line":69,"column":20}},"22":{"start":{"line":72,"column":6},"end":{"line":72,"column":62}},"23":{"start":{"line":74,"column":4},"end":{"line":74,"column":15}},"24":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"25":{"start":{"line":78,"column":4},"end":{"line":78,"column":15}},"26":{"start":{"line":80,"column":2},"end":{"line":80,"column":41}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":24},"end":{"line":45,"column":26}},{"start":{"line":45,"column":29},"end":{"line":45,"column":33}}]},"3":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":23},"end":{"line":46,"column":24}},{"start":{"line":46,"column":27},"end":{"line":46,"column":30}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"6":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":24}},{"start":{"line":65,"column":28},"end":{"line":65,"column":43}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]}},"code":["/**"," * Basic Statistic"," */"," module.exports = function($u) {","/**"," * @method histc"," * @summary Histogram count"," * @description  For array X counts the number of values in X that fall between the elements in the BINS array. Values outside the range in BINS are not counted."," * "," * Returns an object with:"," * "," * bins - number of bins"," * count - number of matched elements"," * freq - frequency "," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {number|array} bins number of bins (as NUMBER) or array of edges (as ARRAY) (def: 10)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {aray|matrix}       "," *"," * @example"," * var A = [87,27,45,62,3,52,20,43,74,61];"," * var B = [12,34,57,43,88,75,89,2,27,29];"," * "," * ubique.histc(A,[0,20,40,60,80,100]);"," * // [ { bins: 0, count: 1, freq: 0.1 },"," * //   { bins: 20, count: 2, freq: 0.2 },"," * //   { bins: 40, count: 3, freq: 0.3 },"," * //   { bins: 60, count: 3, freq: 0.3 },"," * //   { bins: 80, count: 1, freq: 0.1 },"," * //   { bins: 100, count: 0, freq: 0 } ]"," *"," * ubique.histc(ubique.cat(0,A,B),[0,50,100]);"," * // [ [ { bins: 0, count: 5, freq: 0.5 },"," * //     { bins: 50, count: 5, freq: 0.5 },"," * //     { bins: 100, count: 0, freq: 0 } ],"," * //   [ { bins: 0, count: 6, freq: 0.6 },"," * //     { bins: 50, count: 4, freq: 0.4 },"," * //     { bins: 100, count: 0, freq: 0 } ] ]"," */"," $u.histc = function(x,bins,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  bins = bins == null ? 10 : bins;","  dim  = dim == null ? 0 : dim;","","  var _histc = function(a,bins) {","    var y = [];","    var h = []; ","    var out = [];","    if ($u.isnumber(bins)) {","      var xmin = $u.min(a),","      xmax = $u.max(a),","      binw = (xmax - xmin) / bins,","      anum = $u.colon(0,bins);","      y = $u.plus($u.times(anum,binw),xmin);","    } else {","      y = bins;","    }","","    for (var k = 0; k < y.length; k++) {","      h[k] = 0;","      for (var i = 0; i < a.length; i++) {","        if (y[k] <= a[i] && a[i] < y[k + 1]) {","          h[k] += 1;","        } else ","        if (a[i] === y[k]) {","          h[k] += 1;","        }","      }","      out.push({bins: y[k], count: h[k], freq: h[k]/a.length})","    }","    return out;","  }","","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_histc,bins);","}","}"],"l":{"4":1,"41":1,"42":0,"43":0,"45":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"57":0,"59":0,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"69":0,"72":0,"74":0,"77":0,"78":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/iqr.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/iqr.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":10},"end":{"line":24,"column":26}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":39,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":37,"column":2}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":31}},"6":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"7":{"start":{"line":31,"column":3},"end":{"line":31,"column":46}},"8":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"9":{"start":{"line":34,"column":3},"end":{"line":34,"column":14}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":34}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":23},"end":{"line":28,"column":24}},{"start":{"line":28,"column":27},"end":{"line":28,"column":30}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method iqr"," * @summary Interquartile range"," * @description Return the interquartile (Q3 - Q1 quartiles)"," * "," * @param  {array|matrix} x array of values"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * var x = [ 0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * ubique.iqr(x);"," * // 0.023"," * "," * ubique.iqr(ubique.cat(0,x,y));"," * // [ [ 0.023 ], [ 0.095 ] ]"," */"," $u.iqr = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tdim  = dim == null ? 0 : dim;",""," \tvar _iqr = function(a) {"," \t\treturn $u.prctile(a,75) - $u.prctile(a,25);"," \t}"," \tif ($u.isnumber(x)) {"," \t\treturn NaN;"," \t}"," \treturn $u.vectorfun(dim,x,_iqr);"," }","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"30":0,"31":0,"33":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/kurtosis.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/kurtosis.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":36}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":18},"end":{"line":32,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":43,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":41,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":3},"end":{"line":27,"column":49}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":31}},"7":{"start":{"line":32,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":21}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":59}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":96}},"11":{"start":{"line":37,"column":2},"end":{"line":39,"column":2}},"12":{"start":{"line":38,"column":3},"end":{"line":38,"column":14}},"13":{"start":{"line":40,"column":1},"end":{"line":40,"column":43}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":24},"end":{"line":29,"column":25}},{"start":{"line":29,"column":28},"end":{"line":29,"column":32}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":24}},{"start":{"line":30,"column":27},"end":{"line":30,"column":30}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":24},"end":{"line":35,"column":28}},{"start":{"line":35,"column":30},"end":{"line":35,"column":95}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method kurtosis"," * @summary Kurtosis"," * @description Kurtosis"," * "," * @param  {array|matrix} x array or matrix of elements"," * @param  {number} flag 0: bias correction, 1: simple (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * ubique.kurtosis(x);"," * // 3.037581"," * "," * ubique.kurtosis(ubique.cat(0,x,y));"," * // [ [ 3.037581 ], [ 1.397642 ] ]"," */"," $u.kurtosis = function(x,flag,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  flag = flag == null ? 1 : flag;","  dim  = dim == null ? 0 : dim;","","  var _kurtosis = function(a,flag) {","    var n = a.length;","    var mom4 = $u.moment(a,4) / Math.pow($u.moment(a,2),2);","    return flag === 1 ? mom4: ((n + 1) * mom4 - 3 * (n - 1)) * (n - 1) / ((n - 2) *(n - 3)) + 3;","  }","  if ($u.isnumber(x)) {","   return NaN;"," }"," return $u.vectorfun(dim,x,_kurtosis,flag);","}","","}"],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/mad.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/mad.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":10},"end":{"line":27,"column":26}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":13},"end":{"line":33,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":40,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":31}},"6":{"start":{"line":33,"column":2},"end":{"line":35,"column":2}},"7":{"start":{"line":34,"column":3},"end":{"line":34,"column":64}},"8":{"start":{"line":36,"column":1},"end":{"line":38,"column":2}},"9":{"start":{"line":37,"column":3},"end":{"line":37,"column":12}},"10":{"start":{"line":39,"column":1},"end":{"line":39,"column":33}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":23},"end":{"line":31,"column":24}},{"start":{"line":31,"column":27},"end":{"line":31,"column":30}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},{"start":{"line":36,"column":1},"end":{"line":36,"column":1}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method mad"," * @summary Mean absolute deviation"," * @description Mean absolute deviation"," * "," * @param  {array|matrix} x array of values"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * var c = [5,6,3];"," *"," * ubique.mad(c);"," * // 1.11111"," * "," * ubique.mad(a,1);"," * // [ [ 1, 1, 3 ] ]"," * "," * ubique.mad(a);"," * // [ [ 0.444444 ], [ 3.777778 ] ]"," */"," $u.mad = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  dim  = dim == null ? 0 : dim;","","  var _mad = function(a) {","   return $u.mean($u.arrayfun($u.minus(a,$u.mean(a)),Math.abs));"," }"," if ($u.isnumber(x)) {","   return 0;"," }"," return $u.vectorfun(dim,x,_mad);","}","","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"33":0,"34":0,"36":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/max.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/max.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":10},"end":{"line":24,"column":26}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":13},"end":{"line":29,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":37,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":36,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":31}},"6":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":34}},"8":{"start":{"line":32,"column":2},"end":{"line":34,"column":2}},"9":{"start":{"line":33,"column":3},"end":{"line":33,"column":12}},"10":{"start":{"line":35,"column":1},"end":{"line":35,"column":33}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":23},"end":{"line":28,"column":24}},{"start":{"line":28,"column":27},"end":{"line":28,"column":30}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method max"," * @summary Largest element in array"," * @description Largest element in array"," * "," * @param  {array|matrix} x array or matrix of values"," * @param  {number} dim dimension selected, 1: column 0: row (def: 1)"," * @return {number|array|matrix}"," *"," * @example "," * ubique.max([5,6,-1]);"," * // 6"," * "," * ubique.max([[-1,3,-1],[4,5,9]]);"," * // [ [ 3 ], [ 9 ] ]"," * "," * ubique.max([[-1,3,-1],[4,5,9]],1);"," * // [ [ 4, 5, 9 ] ]"," */"," $u.max = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  dim  = dim == null ? 0 : dim;","  var _max = function(a) {","    return Math.max.apply(null,a);","  }","  if ($u.isnumber(x)) {","   return x;"," }"," return $u.vectorfun(dim,x,_max);","}","}",""],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"32":0,"33":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/mean.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/mean.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":11},"end":{"line":27,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":41,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":39,"column":2}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"6":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"7":{"start":{"line":33,"column":3},"end":{"line":33,"column":12}},"8":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"9":{"start":{"line":36,"column":3},"end":{"line":36,"column":39}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":55}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]}},"code":[" /**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method mean"," * @summary Average value of array"," * @description Average value of array"," * "," * @param  {array|matrix} x array of values"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * var c = [5,6,3];"," *"," * ubique.mean(c);"," * // 4.66667"," * "," * ubique.mean([[5,6,5],[7,8,-1]]);"," * // [ [ 5.333333 ], [ 4.666667 ] ]"," * "," * ubique.mean([[5,6,5],[7,8,-1]],1);"," * // [ [ 6, 7, 2 ] ]"," */"," $u.mean = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  dim = dim == null ? 0 : dim;"," \tif ($u.isnumber(x)) {"," \t\treturn x;"," \t}"," \tif ($u.isarray(x)) {"," \t\treturn  $u.sum(x,dim) / $u.numel(x);"," \t}"," \treturn $u.rdivide($u.sum(x,dim),$u.size(x)[1 - dim]);"," }","","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/median.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/median.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":29}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":16},"end":{"line":30,"column":28}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":46,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":44,"column":2}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":31}},"6":{"start":{"line":30,"column":2},"end":{"line":39,"column":3}},"7":{"start":{"line":31,"column":3},"end":{"line":31,"column":24}},"8":{"start":{"line":32,"column":3},"end":{"line":32,"column":41}},"9":{"start":{"line":33,"column":3},"end":{"line":33,"column":23}},"10":{"start":{"line":34,"column":3},"end":{"line":38,"column":4}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":19}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":39}},"13":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"14":{"start":{"line":41,"column":3},"end":{"line":41,"column":12}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":37}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":23},"end":{"line":28,"column":24}},{"start":{"line":28,"column":27},"end":{"line":28,"column":30}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":3},"end":{"line":34,"column":3}},{"start":{"line":34,"column":3},"end":{"line":34,"column":3}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method median"," * @summary Median value of array"," * @description Median value of array"," * "," * @param  {array|matrix} x array of values"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * ubique.median([5,6,3]);"," * // 4.66667"," * "," * ubique.median([[5,6,5],[7,8,-1]]);"," * // [ [ 5 ], [ 7 ] ]"," * "," * ubique.median([[5,6,5],[7,8,-1]],1);"," * // [ [ 6, 7, 2 ] ]"," */"," $u.median = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tdim  = dim == null ? 0 : dim;",""," \tvar _median = function(a) {"," \t\tvar n = a.length - 1;"," \t\tvar idx = $u.max(1,Math.floor(n / 2));"," \t\tvar _a = $u.sort(a);"," \t\tif( n % 2 === 0 ) {"," \t\t\treturn _a[idx];"," \t\t} else {"," \t\t\treturn (_a[idx - 1] + _a[idx]) / 2;"," \t\t}"," \t}"," \tif ($u.isnumber(x)) {"," \t\treturn x;"," \t}"," \treturn $u.vectorfun(dim,x,_median);"," }","","}",""],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"40":0,"41":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/min.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/min.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":10},"end":{"line":24,"column":26}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":13},"end":{"line":29,"column":25}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":37,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":36,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":50}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":31}},"6":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":34}},"8":{"start":{"line":32,"column":2},"end":{"line":34,"column":2}},"9":{"start":{"line":33,"column":3},"end":{"line":33,"column":12}},"10":{"start":{"line":35,"column":1},"end":{"line":35,"column":33}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":23},"end":{"line":28,"column":24}},{"start":{"line":28,"column":27},"end":{"line":28,"column":30}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method min"," * @summary Smallest element in array"," * @description Smallest element in array"," *"," * @param  {array|matrix} x array or matrix of values"," * @param  {number} dim dimension selected, 1: column 0: row (def: 0)"," * @return {number|array|matrix}"," *"," * @example "," * ubique.min([5,6,-1]);"," * // -1"," * "," * ubique.min([[-1,3,-1],[4,5,9]]);"," * // [ [ -1 ], [ 4 ] ]"," * "," * ubique.min([[-1,3,-1],[4,5,9]],1);"," * // [ [ -1, 3, -1 ] ]"," */"," $u.min = function(x,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  dim  = dim == null ? 0 : dim;","  var _min = function(a) {","    return Math.min.apply(null,a);","  }","  if ($u.isnumber(x)) {","   return 0;"," }"," return $u.vectorfun(dim,x,_min);","}","}",""],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"32":0,"33":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/mode.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/mode.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":27}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":14},"end":{"line":30,"column":26}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":58,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":56,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":50}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":31}},"6":{"start":{"line":30,"column":2},"end":{"line":50,"column":3}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":21}},"8":{"start":{"line":32,"column":4},"end":{"line":32,"column":18}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":24}},"11":{"start":{"line":35,"column":4},"end":{"line":48,"column":5}},"12":{"start":{"line":36,"column":6},"end":{"line":40,"column":7}},"13":{"start":{"line":37,"column":8},"end":{"line":37,"column":27}},"14":{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},"15":{"start":{"line":41,"column":6},"end":{"line":47,"column":7}},"16":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"17":{"start":{"line":44,"column":6},"end":{"line":47,"column":7}},"18":{"start":{"line":45,"column":8},"end":{"line":45,"column":29}},"19":{"start":{"line":46,"column":8},"end":{"line":46,"column":23}},"20":{"start":{"line":49,"column":4},"end":{"line":49,"column":19}},"21":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"22":{"start":{"line":52,"column":4},"end":{"line":52,"column":13}},"23":{"start":{"line":54,"column":2},"end":{"line":54,"column":35}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":23},"end":{"line":28,"column":24}},{"start":{"line":28,"column":27},"end":{"line":28,"column":30}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"6":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method mode"," * @summary Most frequent value in an array of elements "," * @description Most frequent value in an array of elements (Unimodal)"," * "," * @param  {array|matrix} x array of values"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * ubique.mode([5,6,3]);"," * // 3"," * "," * ubique.mode([[5,6,5],[7,8,-1]]);"," * // [ [ 5 ], [ -1 ] ]"," * "," * ubique.mode([[5,6,5],[7,8,-1]],1);"," * // [ [ 5, 6, -1 ] ]"," */"," $u.mode = function(x,dim) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  dim  = dim == null ? 0 : dim;","","  var _mode = function(a) {","    var counter = {};","    var mode = [];","    var max = 0;","    var _a = $u.sort(a);","    for (var i = 0; i < x.length; i++) {","      if (!(_a[i] in counter)) {","        counter[_a[i]] = 0;","      } else {","        counter[_a[i]]++;","      }","      if (counter[_a[i]] === max) {","        mode.push(_a[i]);","      } else ","      if (counter[_a[i]] > max) {","        max = counter[_a[i]];","        mode = [_a[i]];","      }","    }","    return mode[0];","  }","  if ($u.isnumber(x)) {","    return x;","  }","  return $u.vectorfun(dim,x,_mode);","","}","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"41":0,"42":0,"44":0,"45":0,"46":0,"49":0,"51":0,"52":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/moment.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/moment.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":13},"end":{"line":28,"column":31}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":31}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":26},"end":{"line":36,"column":38}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":45,"column":1}},"2":{"start":{"line":28,"column":1},"end":{"line":43,"column":2}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":3},"end":{"line":30,"column":49}},"5":{"start":{"line":32,"column":3},"end":{"line":32,"column":32}},"6":{"start":{"line":34,"column":3},"end":{"line":37,"column":4}},"7":{"start":{"line":35,"column":5},"end":{"line":35,"column":25}},"8":{"start":{"line":36,"column":5},"end":{"line":36,"column":68}},"9":{"start":{"line":36,"column":39},"end":{"line":36,"column":64}},"10":{"start":{"line":38,"column":3},"end":{"line":40,"column":4}},"11":{"start":{"line":39,"column":5},"end":{"line":39,"column":16}},"12":{"start":{"line":41,"column":3},"end":{"line":41,"column":40}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":24},"end":{"line":32,"column":25}},{"start":{"line":32,"column":28},"end":{"line":32,"column":31}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":3},"end":{"line":38,"column":3}},{"start":{"line":38,"column":3},"end":{"line":38,"column":3}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method moment"," * @summary Central moments"," * @description Central moments. First moment is zero, second is variance."," * "," * @param  {array|matrix} x array or amatrix of elements"," * @param  {number} k k-th central sample moment"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}"," *"," * @example"," * var x = [ 0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * ubique.moment(x,3);"," * // 0.000007"," * "," * ubique.moment(x,1);"," * // 0"," * "," * ubique.moment(ubique.cat(0,x,y),2);"," * // [ [ 0.000486 ], [ 0.00251 ] "," */"," $u.moment = function(x,k,dim) {"," \tif (arguments.length < 2) {"," \t\tthrow new Error('not enough input arguments');"," \t}","   dim  = dim == null ? 0 : dim;","","   var _moment = function(a,k) {","     var mu = $u.mean(a);","     return $u.mean(a.map(function(b) {return Math.pow(b - mu,k)}));","   }","   if ($u.isnumber(x)) {","     return NaN;","   }","   return $u.vectorfun(dim,x,_moment,k);",""," }","","}"],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"34":0,"35":0,"36":0,"38":0,"39":0,"41":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/pdist.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/pdist.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":30}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":65,"column":1}},"2":{"start":{"line":32,"column":0},"end":{"line":63,"column":1}},"3":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"4":{"start":{"line":34,"column":4},"end":{"line":34,"column":50}},"5":{"start":{"line":36,"column":2},"end":{"line":36,"column":43}},"6":{"start":{"line":37,"column":2},"end":{"line":37,"column":21}},"7":{"start":{"line":38,"column":2},"end":{"line":38,"column":14}},"8":{"start":{"line":39,"column":2},"end":{"line":62,"column":5}},"9":{"start":{"line":41,"column":6},"end":{"line":41,"column":55}},"10":{"start":{"line":42,"column":6},"end":{"line":42,"column":17}},"11":{"start":{"line":43,"column":6},"end":{"line":43,"column":12}},"12":{"start":{"line":45,"column":6},"end":{"line":45,"column":42}},"13":{"start":{"line":46,"column":6},"end":{"line":46,"column":17}},"14":{"start":{"line":47,"column":6},"end":{"line":47,"column":12}},"15":{"start":{"line":49,"column":6},"end":{"line":49,"column":42}},"16":{"start":{"line":50,"column":6},"end":{"line":50,"column":17}},"17":{"start":{"line":51,"column":6},"end":{"line":51,"column":12}},"18":{"start":{"line":53,"column":6},"end":{"line":57,"column":7}},"19":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"20":{"start":{"line":55,"column":10},"end":{"line":55,"column":16}},"21":{"start":{"line":58,"column":6},"end":{"line":58,"column":17}},"22":{"start":{"line":59,"column":6},"end":{"line":59,"column":12}},"23":{"start":{"line":61,"column":6},"end":{"line":61,"column":40}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":24},"end":{"line":36,"column":35}},{"start":{"line":36,"column":38},"end":{"line":36,"column":42}}]},"3":{"line":39,"type":"switch","locations":[{"start":{"line":40,"column":4},"end":{"line":43,"column":12}},{"start":{"line":44,"column":4},"end":{"line":47,"column":12}},{"start":{"line":48,"column":4},"end":{"line":51,"column":12}},{"start":{"line":52,"column":4},"end":{"line":59,"column":12}},{"start":{"line":60,"column":4},"end":{"line":61,"column":40}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]}},"code":["/**"," * Distance metrics"," */","module.exports = function($u) {","/**"," * @method pdist"," * @summary Pairwise distance between two sets of observations"," * @description  Compute distance between two array with differente methods:"," * euclidean, manhattan, chebycheb, hamming"," * "," * @param  {array} x array of values in X"," * @param  {array} y array of values in Y"," * @param  {string} mode methods: 'euclidean','manhattan','chebychev','hamming' (def: 'euclidean')"," * @return {number}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * ubique.pdist(x,y,'euclidean');"," * // 0.170532"," * "," * ubique.pdist(x,y,'manhattan');"," * // 0.471"," * "," * ubique.pdist(x,y,'chebychev');"," * // 0.087"," * "," * ubique.pdist(x,y,'hamming');"," * // 10"," */","$u.pdist = function(x,y,mode) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  mode = mode == null ? 'euclidean' : mode;","  var len = x.length;","  var out = 0;","  switch (mode) {","    case \"euclidean\":","      out = $u.sqrt($u.sum($u.power($u.minus(x,y),2)));","      return out;","      break;","    case \"manhattan\": ","      out = $u.sum($u.abs($u.minus(x,y)));","      return out;","      break;","    case \"chebychev\": ","      out = $u.max($u.abs($u.minus(x,y)));","      return out;","      break;","    case \"hamming\": ","      for (var i=0;i<len;i++) {","        if (x[i] !== y[i]) {","          out++;","        }","      }","      return out;","      break;","    default:","      throw new Error('Invalid method');","    }","}","","}"],"l":{"4":1,"32":1,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"45":0,"46":0,"47":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"58":0,"59":0,"61":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/prctile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/prctile.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":14},"end":{"line":28,"column":32}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":17},"end":{"line":36,"column":32}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":51,"column":1}},"2":{"start":{"line":28,"column":1},"end":{"line":49,"column":1}},"3":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":30,"column":4},"end":{"line":30,"column":50}},"5":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":88}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":30}},"8":{"start":{"line":36,"column":2},"end":{"line":44,"column":3}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":45}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":24}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":55}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":29}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":47}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":32}},"15":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"16":{"start":{"line":46,"column":4},"end":{"line":46,"column":13}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":40}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":11}},{"start":{"line":32,"column":15},"end":{"line":32,"column":22}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":22},"end":{"line":35,"column":23}},{"start":{"line":35,"column":26},"end":{"line":35,"column":29}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method prctile"," * @summary Percentiles of a sample"," * @description Percentiles of a sample, inclusive"," * "," * @param  {array|matrix} x array of emlements"," * @param  {number} p p-th percentile in the range [0,100]"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * var x = [ 0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * ubique.prctile(x,5);"," * // -0.014"," * "," * ubique.prctile(x,33);"," * // 0.0118"," * "," * ubique.prctile(ubique.cat(0,x,y),5);"," * // [ [ -0.014, -0.061 ] ]"," */"," $u.prctile = function(x,p,dim) {","  if (arguments.length < 2) {","    throw new Error('not enough input arguments');","  }","  if (p < 0 || p > 100) {","    throw new Error('p-th percentile must be a real value between 0 and 100 inclusive');","  }","  dim = dim == null ? 0 : dim;","  var _prctile = function(a,pr) {","    var arrnum= $u.colon(0.5,a.length - 0.5);","    var _a = $u.sort(a);","    var pq = $u.rdivide($u.times(arrnum,100),a.length);","    ","    pq = pq.concat(0,pq,100);","    _a = _a.concat(_a[0],_a,_a[_a.length - 1]);","    return $u.interp1(pq,_a,pr);","  }","  if ($u.isnumber(x)) {","    return x;","  }","  return $u.vectorfun(dim,x,_prctile,p);","}","","}"],"l":{"4":1,"28":1,"29":0,"30":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"45":0,"46":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/quantile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/quantile.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":33}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":36,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":34,"column":2}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":3},"end":{"line":27,"column":49}},"5":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"6":{"start":{"line":30,"column":3},"end":{"line":30,"column":85}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":30}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":33}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":11}},{"start":{"line":29,"column":15},"end":{"line":29,"column":20}}]},"4":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":22},"end":{"line":32,"column":23}},{"start":{"line":32,"column":26},"end":{"line":32,"column":29}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method quantile"," * @summary Quantilies of a sample "," * @description Quantilies of a sample "," * "," * @param  {array|matrix} x array or matrix of elements"," * @param  {number} p p-th quantile in the range [0,1]"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * var x = [ 0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * ubique.quantile(x,0.25);"," * // 0.003"," * "," * ubique.quantile(ubique.cat(0,x,y),0.33);"," * // [ [ 0.0118, -0.0242 ] ]"," */"," $u.quantile = function(x,p,dim) {"," \tif (arguments.length < 2) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tif (p < 0 || p > 1) {"," \t\tthrow new Error('p-th percentile must be a real value between 0 and 1 inclusive');"," \t}"," \tdim = dim == null ? 0 : dim;"," \treturn $u.prctile(x,p*100,dim);"," }","","}"],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/quartile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/quartile.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":15},"end":{"line":24,"column":31}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":18},"end":{"line":30,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":39,"column":1}},"2":{"start":{"line":24,"column":1},"end":{"line":37,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"4":{"start":{"line":26,"column":3},"end":{"line":26,"column":49}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"6":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":64}},"8":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":15}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":39}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":22},"end":{"line":28,"column":23}},{"start":{"line":28,"column":26},"end":{"line":28,"column":29}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method quartile"," * @summary Quartilies of a sample"," * @description Quartilies of a sample"," *"," * @param  {array|matrix} x array of values"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * var x = [ 0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," *"," * ubique.quartile(x);"," * // [ 0.003, 0.015, 0.026 ]"," * "," * ubique.quartile(ubique.cat(0,x,y));"," * // [ [ 0.003, 0.015, 0.026 ], [ -0.037, 0.0175, 0.058 ] ]"," */"," $u.quartile = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  dim = dim == null ? 0 : dim;","","  var _quartile = function(a) {","    return [$u.prctile(a,25),$u.prctile(a,50),$u.prctile(a,75)];","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_quartile);","}","","}"],"l":{"4":1,"24":1,"25":0,"26":0,"28":0,"30":0,"31":0,"33":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/range.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/range.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":28}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":15},"end":{"line":33,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":27,"column":1},"end":{"line":40,"column":2}},"3":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"4":{"start":{"line":29,"column":3},"end":{"line":29,"column":49}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"6":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":34,"column":3},"end":{"line":34,"column":32}},"8":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"9":{"start":{"line":37,"column":3},"end":{"line":37,"column":12}},"10":{"start":{"line":39,"column":2},"end":{"line":39,"column":36}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":23}},{"start":{"line":31,"column":26},"end":{"line":31,"column":29}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method range"," * @summary Range of values"," * @description Range of values"," * "," * @param  {array|matrix} x array of values"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * var c = [5,6,3];"," *"," * ubique.range([5,6,3]);"," * // 3"," * "," * ubique.range([[5,6,5],[7,8,-1]]);"," * // [ [ 1 ], [ 9 ] ]"," * "," * ubique.range([[5,6,5],[7,8,-1]],1);"," * // [ [ 2, 2, 6 ] ]"," */"," $u.range = function(x,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tdim = dim == null ? 0 : dim;",""," \tvar _range = function(a) {"," \t\treturn $u.max(a) - $u.min(a);"," \t}"," \tif ($u.isnumber(x)) {"," \t\treturn 0;"," \t}"," \treturn $u.vectorfun(dim,x,_range);"," }","","}"],"l":{"4":1,"27":1,"28":0,"29":0,"31":0,"33":0,"34":0,"36":0,"37":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/skewness.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/skewness.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":36}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":18},"end":{"line":32,"column":35}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":41,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":3},"end":{"line":27,"column":49}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":31}},"7":{"start":{"line":32,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":21}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":61}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":76}},"11":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":15}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":44}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":24},"end":{"line":29,"column":25}},{"start":{"line":29,"column":28},"end":{"line":29,"column":32}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":24}},{"start":{"line":30,"column":27},"end":{"line":30,"column":30}}]},"4":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":24},"end":{"line":35,"column":28}},{"start":{"line":35,"column":30},"end":{"line":35,"column":75}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method skewness"," * @summary Skewness"," * @description Skewness"," * "," * @param  {array|matrix} x array or matrix of elements"," * @param  {number} flag 0: bias correction, 1: simple (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * ubique.skewness(x);"," * // 0.617481"," * "," * ubique.skewness(ubique.cat(0,x,y));"," * // [ [ 0.617481 ], [ -0.118909 ] ]"," */"," $u.skewness = function(x,flag,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tflag = flag == null ? 1 : flag;","  dim  = dim == null ? 0 : dim;","","  var _skewness = function(a,flag) {","    var n = a.length;","    var mom3 = $u.moment(a,3) / Math.pow($u.moment(a,2),1.5);","    return flag === 1 ? mom3: Math.sqrt((n - 1) / n) * (n / (n - 2)) * mom3;","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_skewness,flag);","}","}"],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/std.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/std.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":10},"end":{"line":31,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":42,"column":1}},"2":{"start":{"line":31,"column":1},"end":{"line":40,"column":2}},"3":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"4":{"start":{"line":33,"column":3},"end":{"line":33,"column":49}},"5":{"start":{"line":35,"column":2},"end":{"line":35,"column":33}},"6":{"start":{"line":36,"column":2},"end":{"line":36,"column":30}},"7":{"start":{"line":38,"column":2},"end":{"line":38,"column":37}},"8":{"start":{"line":39,"column":2},"end":{"line":39,"column":27}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":24},"end":{"line":35,"column":25}},{"start":{"line":35,"column":28},"end":{"line":35,"column":32}}]},"3":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},{"start":{"line":36,"column":26},"end":{"line":36,"column":29}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method std"," * @summary Standard deviation"," * @description Standard deviation"," * "," * @param  {array|matrix} x array of values"," * @param  {number} flag normalization value 0: population, 1:sample (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}   "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * var c = [5,6,3];"," *"," * ubique.std(c);"," * // 1.52753"," * "," * ubique.std(c,0);"," * // 1.24722 "," * "," * ubique.std(a,0);"," * // [ [ 0.471405 ], [ 4.027682 ] ]"," * "," * ubique.std(a,0,1);"," * // [ [ 1, 1, 3 ] ]"," */"," $u.std = function(x,flag,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tflag = flag == null ? 1 : flag;","  dim = dim == null ? 0 : dim;",""," \tvar variance = $u.varc(x,flag,dim);"," \treturn $u.sqrt(variance);"," }","","}",""],"l":{"4":1,"31":1,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/varc.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/varc.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":11},"end":{"line":31,"column":32}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":48,"column":1}},"2":{"start":{"line":31,"column":1},"end":{"line":46,"column":1}},"3":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"4":{"start":{"line":33,"column":3},"end":{"line":33,"column":49}},"5":{"start":{"line":35,"column":2},"end":{"line":35,"column":33}},"6":{"start":{"line":36,"column":2},"end":{"line":36,"column":30}},"7":{"start":{"line":38,"column":2},"end":{"line":41,"column":3}},"8":{"start":{"line":39,"column":4},"end":{"line":39,"column":24}},"9":{"start":{"line":40,"column":4},"end":{"line":40,"column":76}},"10":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"11":{"start":{"line":43,"column":4},"end":{"line":43,"column":15}},"12":{"start":{"line":45,"column":2},"end":{"line":45,"column":40}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":24},"end":{"line":35,"column":25}},{"start":{"line":35,"column":28},"end":{"line":35,"column":32}}]},"3":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},{"start":{"line":36,"column":26},"end":{"line":36,"column":29}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method varc"," * @summary Variance"," * @description  Variance"," * "," * @param  {array|matrix} x array of values"," * @param  {number} flag normalization value 0: population, 1:sample (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * var a = [[5,6,5],[7,8,-1]];"," * var c = [5,6,3];"," *"," * ubique.varc(c);"," * // 2.33333"," * "," * ubique.varc(c,0);"," * // 1.55556 "," * "," * ubique.varc(a,0);"," * // [ [ 0.222222 ], [ 16.222222 ] ]"," * "," * ubique.varc(a,0,1);"," * // [ [ 1, 1, 9 ] ]"," */"," $u.varc = function(x,flag,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}","  flag = flag == null ? 1 : flag;","  dim = dim == null ? 0 : dim;","","  var _varc = function(a,flag) {","    var mu = $u.mean(a);","    return ($u.sum($u.power($u.abs($u.minus(a,mu)),2))) / (a.length - flag);","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_varc,flag);","}","","}",""],"l":{"4":1,"31":1,"32":0,"33":0,"35":0,"36":0,"38":0,"39":0,"40":0,"42":0,"43":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/xkurtosis.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/xkurtosis.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":16},"end":{"line":25,"column":37}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":26},"end":{"line":36,"column":38}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":39,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":37,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":3},"end":{"line":27,"column":49}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":31}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":37}},"8":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":20}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":55}},"11":{"start":{"line":36,"column":39},"end":{"line":36,"column":52}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":24},"end":{"line":29,"column":25}},{"start":{"line":29,"column":28},"end":{"line":29,"column":32}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":24}},{"start":{"line":30,"column":27},"end":{"line":30,"column":30}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method xkurtosis"," * @summary Excess kurtosis"," * @description Excess kurtosis"," * "," * @param  {array|matrix} x array or matrix of elements"," * @param  {number} flag 0: bias correction, 1: simple (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array|matrix}"," *"," * @example"," * var x = [0.003,0.026,0.015,-0.009,0.014,0.024,0.015,0.066,-0.014,0.039];"," * var y = [-0.005,0.081,0.04,-0.037,-0.061,0.058,-0.049,-0.021,0.062,0.058];"," * "," * ubique.xkurtosis(x);"," * // 0.037581"," * "," * ubique.xkurtosis(ubique.cat(0,x,y));"," * // [ [ 0.037581 ], [ -1.602358 ] ]"," */"," $u.xkurtosis = function(x,flag,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tflag = flag == null ? 1 : flag;","  dim  = dim == null ? 0 : dim;","","  var kurt = $u.kurtosis(x,flag,dim);","  if ($u.isnumber(kurt)) {","    return kurt - 3;","  }","  return $u.arrayfun(kurt,function(a) {return a - 3;});","}","","}"],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"34":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/zscore.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/stats/zscore.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":31}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":13},"end":{"line":25,"column":34}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":16},"end":{"line":32,"column":33}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":41,"column":1}},"2":{"start":{"line":25,"column":1},"end":{"line":39,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"4":{"start":{"line":27,"column":3},"end":{"line":27,"column":49}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":31}},"7":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":61}},"9":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":15}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":42}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":24},"end":{"line":29,"column":25}},{"start":{"line":29,"column":28},"end":{"line":29,"column":32}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":24}},{"start":{"line":30,"column":27},"end":{"line":30,"column":30}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]}},"code":["/**"," * Descriptive Statistic"," */"," module.exports = function($u) {","/**"," * @method zscore"," * @summary Standardized Z score"," * @description Standardized Z score"," * "," * @param  {array|matrix} x array of values"," * @param  {number} flag normalization value 0: population, 1:sample (def: 1)"," * @param  {number} dim dimension 0: row, 1: column (def: 0)"," * @return {number|array}   "," *"," * @example"," * ubique.zscore([5,6,3]);"," * // [ 0.218218, 0.872872, -1.091089 ]"," * "," * ubique.zscore([[5,6,5],[7,8,-1]]);"," * // [ [ -0.57735, 1.154701, -0.57735 ],[ 0.473016, 0.675737, -1.148754 ] ]"," * "," * ubique.zscore([[5,6,5],[7,8,-1]],0,1);"," * // [ [ -1, -1, 1 ], [ 1, 1, -1 ] ]"," */"," $u.zscore = function(x,flag,dim) {"," \tif (arguments.length === 0) {"," \t\tthrow new Error('not enough input arguments');"," \t}"," \tflag = flag == null ? 1 : flag;","  dim  = dim == null ? 0 : dim;","","  var _zscore = function(a,flag) {","    return $u.rdivide($u.minus(a,$u.mean(a)),$u.std(a,flag));","  }","  if ($u.isnumber(x)) {","    return NaN;","  }","  return $u.vectorfun(dim,x,_zscore,flag);","}","","}"],"l":{"4":1,"25":1,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"35":0,"36":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/util/argsarray.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/util/argsarray.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":32}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":16},"end":{"line":17,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":24,"column":1}},"2":{"start":{"line":17,"column":1},"end":{"line":23,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":15}},"4":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"5":{"start":{"line":20,"column":5},"end":{"line":20,"column":27}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":13}}},"branchMap":{},"code":["/**"," * Utility"," */"," module.exports = function ($u) {","/**"," * @method argsarray"," * @summary Converting arguments to an array"," * @description Converting arguments to an array.  test case http://jsperf.com/converting-arguments-to-an-array/18"," * "," * @param  {number|string|boolean|...} args variable input arguments"," * @return {array}"," *  "," * @example"," * ubique.argsarray(99,true,'test',null);"," * // [ 99, true,'test', null ]"," */"," $u.argsarray = function() {","  var arr = [];","  for (var i = 0,len = arguments.length; i < len; i++) {","     arr[i] = arguments[i];","  }","  return arr;","}","}"],"l":{"4":1,"17":1,"18":0,"19":0,"20":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/util/format.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/util/format.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":32}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":13},"end":{"line":21,"column":28}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":16},"end":{"line":28,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":33,"column":1}},"2":{"start":{"line":21,"column":1},"end":{"line":32,"column":1}},"3":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"4":{"start":{"line":23,"column":4},"end":{"line":23,"column":50}},"5":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"6":{"start":{"line":26,"column":4},"end":{"line":26,"column":10}},"7":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":36}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":34}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["/**"," * Utility"," */"," module.exports = function ($u) {","/**"," * @method format"," * @summary Set display format for output (numbers)"," * @description Set display format for output (numbers)"," * "," * @param  {number|array|matrix} x input element"," * @param  {number} k number of decimals (def: 6 decimals)"," * @return {nuber|array|matrix}"," *  "," * @example"," * ubique.format(5.6677798348349,0);"," * // 6"," * "," * ubique.format([[-1000.47748,0.000002],[0.1483478,10.111100]],2);"," * // [ [ -1000.48, 0 ], [ 0.15, 10.11 ] ]"," */"," $u.format = function (x,k) {","  if (arguments.length === 0) {","    throw new Error('not enough input arguments');","  }","  if (!$u.isnumber(k)) {","    k = 6;","  }","  var _format = function(a,k) {","    return parseFloat(a.toFixed(k));","  }","  return $u.arrayfun(x,_format,k);","}","}"],"l":{"4":1,"21":1,"22":0,"23":0,"25":0,"26":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datafeed/yahoo.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datafeed/yahoo.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":32}}},"2":{"name":"(anonymous_2)","line":59,"loc":{"start":{"line":59,"column":14},"end":{"line":59,"column":41}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":27},"end":{"line":66,"column":38}}},"4":{"name":"(anonymous_4)","line":83,"loc":{"start":{"line":83,"column":19},"end":{"line":83,"column":42}}},"5":{"name":"(anonymous_5)","line":95,"loc":{"start":{"line":95,"column":23},"end":{"line":95,"column":36}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":125,"column":1}},"2":{"start":{"line":55,"column":1},"end":{"line":123,"column":1}},"3":{"start":{"line":60,"column":4},"end":{"line":60,"column":28}},"4":{"start":{"line":61,"column":4},"end":{"line":61,"column":44}},"5":{"start":{"line":62,"column":4},"end":{"line":62,"column":40}},"6":{"start":{"line":63,"column":4},"end":{"line":63,"column":67}},"7":{"start":{"line":64,"column":4},"end":{"line":64,"column":43}},"8":{"start":{"line":65,"column":4},"end":{"line":65,"column":46}},"9":{"start":{"line":66,"column":4},"end":{"line":66,"column":41}},"10":{"start":{"line":68,"column":4},"end":{"line":68,"column":15}},"11":{"start":{"line":69,"column":4},"end":{"line":69,"column":19}},"12":{"start":{"line":70,"column":4},"end":{"line":70,"column":20}},"13":{"start":{"line":71,"column":4},"end":{"line":71,"column":51}},"14":{"start":{"line":72,"column":4},"end":{"line":72,"column":49}},"15":{"start":{"line":75,"column":2},"end":{"line":75,"column":19}},"16":{"start":{"line":76,"column":2},"end":{"line":76,"column":29}},"17":{"start":{"line":77,"column":2},"end":{"line":77,"column":52}},"18":{"start":{"line":78,"column":2},"end":{"line":78,"column":71}},"19":{"start":{"line":79,"column":2},"end":{"line":79,"column":68}},"20":{"start":{"line":80,"column":2},"end":{"line":80,"column":41}},"21":{"start":{"line":81,"column":2},"end":{"line":81,"column":64}},"22":{"start":{"line":83,"column":2},"end":{"line":120,"column":5}},"23":{"start":{"line":85,"column":4},"end":{"line":85,"column":39}},"24":{"start":{"line":86,"column":4},"end":{"line":86,"column":44}},"25":{"start":{"line":87,"column":4},"end":{"line":87,"column":19}},"26":{"start":{"line":88,"column":4},"end":{"line":88,"column":19}},"27":{"start":{"line":89,"column":4},"end":{"line":89,"column":19}},"28":{"start":{"line":90,"column":4},"end":{"line":90,"column":18}},"29":{"start":{"line":91,"column":4},"end":{"line":91,"column":20}},"30":{"start":{"line":92,"column":4},"end":{"line":92,"column":21}},"31":{"start":{"line":93,"column":4},"end":{"line":93,"column":23}},"32":{"start":{"line":95,"column":4},"end":{"line":104,"column":7}},"33":{"start":{"line":96,"column":6},"end":{"line":96,"column":31}},"34":{"start":{"line":97,"column":6},"end":{"line":97,"column":26}},"35":{"start":{"line":98,"column":6},"end":{"line":98,"column":34}},"36":{"start":{"line":99,"column":6},"end":{"line":99,"column":34}},"37":{"start":{"line":100,"column":6},"end":{"line":100,"column":33}},"38":{"start":{"line":101,"column":6},"end":{"line":101,"column":35}},"39":{"start":{"line":102,"column":6},"end":{"line":102,"column":36}},"40":{"start":{"line":103,"column":6},"end":{"line":103,"column":38}},"41":{"start":{"line":106,"column":4},"end":{"line":118,"column":6}},"42":{"start":{"line":119,"column":4},"end":{"line":119,"column":21}}},"branchMap":{"1":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":14},"end":{"line":60,"column":21}},{"start":{"line":60,"column":25},"end":{"line":60,"column":27}}]},"2":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":21},"end":{"line":61,"column":35}},{"start":{"line":61,"column":39},"end":{"line":61,"column":43}}]},"3":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":19},"end":{"line":62,"column":31}},{"start":{"line":62,"column":35},"end":{"line":62,"column":39}}]},"4":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":17},"end":{"line":63,"column":27}},{"start":{"line":63,"column":31},"end":{"line":63,"column":66}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":21},"end":{"line":64,"column":35}},{"start":{"line":64,"column":39},"end":{"line":64,"column":42}}]},"6":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":18},"end":{"line":65,"column":29}},{"start":{"line":65,"column":33},"end":{"line":65,"column":45}}]},"7":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":15},"end":{"line":66,"column":23}},{"start":{"line":66,"column":27},"end":{"line":66,"column":40}}]}},"code":["/**"," * Datafeed"," */"," module.exports = function ($u) {","/**"," * @method yahoo"," * @summary Download CSV Yahoo Finance historical (async request)"," * @description Download CSV Yahoo Finance historical. Returns an object:"," * "," * {"," *   'symbol': options.symbol,"," *   'from': options.from,"," *   'to': options.to,"," *   'period': options.period,"," *   'date': nDate,"," *   'open': nOpen,"," *   'high': nHigh,"," *   'low': nLow,"," *   'close': nClose,"," *   'volume': nVolume,"," *   'adjclose': nAdjClose"," * }"," *"," * @param {object} options options with fields:"," *                         .symbol Yahoo symbol name"," *                         .from start date"," *                         .to last date"," *                         .period period \"d\",\"w\",\"m\""," *                         .fmt date format (def: \"YYYY-MM-DD\")"," * "," * @return {object} "," *"," * @example"," * // var options = {'symbol': 'AAPL','from': '2015-01-02','to': '2015-01-08','period': 'd'};"," * // ubique.yahoo.historical(options,function(err,data) {"," * // console.log(data)"," * // });"," * //"," * // { symbol: 'AAPL',"," * //     from: '2015-01-02',"," * //       to: '2015-01-08',"," * //   period: 'd',"," * //     date: [ '2015-01-02',"," * //             '2015-01-05',"," * //             '2015-01-06',"," * //             '2015-01-07',"," * //             '2015-01-08' ],"," * //             open: [ 111.39, 108.29, 106.54, 107.2, 109.23 ],"," * //             high: [ 111.44, 108.65, 107.43, 108.2, 112.15 ],"," * //             low: [ 107.35, 105.41, 104.63, 106.7, 108.7 ],"," * //             close: [ 109.33, 106.25, 106.26, 107.75, 111.89 ],"," * //             volume: [ 53204600, 64285500, 65797100, 40105900, 59364500 ],"," * //             adjclose: [ 108.44723, 105.3921, 105.40202, 106.87998, 110.98656 ] }"," */"," $u.yahoo = {","  histurl: 'http://real-chart.finance.yahoo.com/table.csv?',","  ip: '',","  port: '',","  historical: function(options,callback) {","    options = options || {};","    options.symbol = options.symbol || null;","    options.from = options.from || null;","    options.to = options.to || $u.datestr($u.today(),'YYYY-MM-DD');","    options.period = options.period || 'd';","    options.fmt = options.fmt || 'YYYY-MM-DD';","    callback = callback || function() {};","","    var D = {};","    var dates = [];","    var values = [];","    var sdt = $u.datevec(options.from,options.fmt);","    var edt = $u.datevec(options.to,options.fmt);","","  // set URL string","  var cvsdata = {};","  var urlxp = '&ignore=.csv';","  var urlsym = '&s=' + options.symbol.toUpperCase();","  var urlfrom = '&a=' + (sdt[1] - 1) + '&b=' + sdt[2] + '&c=' + sdt[0];","  var urlto = '&d=' + (edt[1] -1) + '&e=' + edt[2] + '&f=' + edt[0];","  var urlperiod = '&g=' + options.period;","  var URL = this.histurl + urlsym + urlfrom + urlto + urlperiod;","","  $u.__request(URL,function(err,res,body) {","","    cvsdata =  body.trim().split('\\n');","    var header = cvsdata.shift().split(',');","    var nDate = [];","    var nOpen = [];","    var nHigh = [];","    var nLow = [];","    var nClose = [];","    var nVolume = [];","    var nAdjClose = [];","","    cvsdata.sort().map(function(el) {","      var temp = el.split(',');","      nDate.push(temp[0]);","      nOpen.push(Number(temp[1]));","      nHigh.push(Number(temp[2]));","      nLow.push(Number(temp[3]));","      nClose.push(Number(temp[4]));","      nVolume.push(Number(temp[5]));","      nAdjClose.push(Number(temp[6]));","    });","","    D = {","      'symbol': options.symbol,","      'from': options.from,","      'to': options.to,","      'period': options.period,","      'date': nDate,","      'open': nOpen,","      'high': nHigh,","      'low': nLow,","      'close': nClose,","      'volume': nVolume,","      'adjclose': nAdjClose","    };","    callback(null,D);","  });","","}","}","","}"],"l":{"4":1,"55":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"69":0,"70":0,"71":0,"72":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"83":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"106":0,"119":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datafeed/yahooSync.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/datafeed/yahooSync.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":18},"end":{"line":4,"column":32}}},"2":{"name":"(anonymous_2)","line":58,"loc":{"start":{"line":58,"column":14},"end":{"line":58,"column":32}}},"3":{"name":"(anonymous_3)","line":93,"loc":{"start":{"line":93,"column":21},"end":{"line":93,"column":34}}}},"statementMap":{"1":{"start":{"line":4,"column":1},"end":{"line":122,"column":1}},"2":{"start":{"line":54,"column":1},"end":{"line":120,"column":1}},"3":{"start":{"line":59,"column":4},"end":{"line":59,"column":28}},"4":{"start":{"line":60,"column":4},"end":{"line":60,"column":44}},"5":{"start":{"line":61,"column":4},"end":{"line":61,"column":40}},"6":{"start":{"line":62,"column":4},"end":{"line":62,"column":67}},"7":{"start":{"line":63,"column":4},"end":{"line":63,"column":43}},"8":{"start":{"line":64,"column":4},"end":{"line":64,"column":46}},"9":{"start":{"line":66,"column":4},"end":{"line":66,"column":15}},"10":{"start":{"line":67,"column":4},"end":{"line":67,"column":19}},"11":{"start":{"line":68,"column":4},"end":{"line":68,"column":20}},"12":{"start":{"line":69,"column":4},"end":{"line":69,"column":51}},"13":{"start":{"line":70,"column":4},"end":{"line":70,"column":49}},"14":{"start":{"line":73,"column":2},"end":{"line":73,"column":19}},"15":{"start":{"line":74,"column":2},"end":{"line":74,"column":29}},"16":{"start":{"line":75,"column":2},"end":{"line":75,"column":52}},"17":{"start":{"line":76,"column":2},"end":{"line":76,"column":71}},"18":{"start":{"line":77,"column":2},"end":{"line":77,"column":69}},"19":{"start":{"line":78,"column":2},"end":{"line":78,"column":41}},"20":{"start":{"line":79,"column":2},"end":{"line":79,"column":64}},"21":{"start":{"line":81,"column":2},"end":{"line":81,"column":40}},"22":{"start":{"line":83,"column":2},"end":{"line":83,"column":52}},"23":{"start":{"line":84,"column":2},"end":{"line":84,"column":42}},"24":{"start":{"line":85,"column":2},"end":{"line":85,"column":17}},"25":{"start":{"line":86,"column":2},"end":{"line":86,"column":17}},"26":{"start":{"line":87,"column":2},"end":{"line":87,"column":17}},"27":{"start":{"line":88,"column":2},"end":{"line":88,"column":16}},"28":{"start":{"line":89,"column":2},"end":{"line":89,"column":18}},"29":{"start":{"line":90,"column":2},"end":{"line":90,"column":19}},"30":{"start":{"line":91,"column":2},"end":{"line":91,"column":21}},"31":{"start":{"line":93,"column":2},"end":{"line":102,"column":5}},"32":{"start":{"line":94,"column":4},"end":{"line":94,"column":29}},"33":{"start":{"line":95,"column":4},"end":{"line":95,"column":24}},"34":{"start":{"line":96,"column":4},"end":{"line":96,"column":32}},"35":{"start":{"line":97,"column":4},"end":{"line":97,"column":32}},"36":{"start":{"line":98,"column":4},"end":{"line":98,"column":31}},"37":{"start":{"line":99,"column":4},"end":{"line":99,"column":33}},"38":{"start":{"line":100,"column":4},"end":{"line":100,"column":34}},"39":{"start":{"line":101,"column":4},"end":{"line":101,"column":36}},"40":{"start":{"line":104,"column":2},"end":{"line":116,"column":4}},"41":{"start":{"line":117,"column":2},"end":{"line":117,"column":11}}},"branchMap":{"1":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":14},"end":{"line":59,"column":21}},{"start":{"line":59,"column":25},"end":{"line":59,"column":27}}]},"2":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":21},"end":{"line":60,"column":35}},{"start":{"line":60,"column":39},"end":{"line":60,"column":43}}]},"3":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":19},"end":{"line":61,"column":31}},{"start":{"line":61,"column":35},"end":{"line":61,"column":39}}]},"4":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":17},"end":{"line":62,"column":27}},{"start":{"line":62,"column":31},"end":{"line":62,"column":66}}]},"5":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":21},"end":{"line":63,"column":35}},{"start":{"line":63,"column":39},"end":{"line":63,"column":42}}]},"6":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":18},"end":{"line":64,"column":29}},{"start":{"line":64,"column":33},"end":{"line":64,"column":45}}]}},"code":["/**"," * Datafeed"," */"," module.exports = function ($u) {","/**"," * @method yahooSync"," * @summary Download CSV Yahoo Finance historical (sync request)"," * @description Download CSV Yahoo Finance historical. Returns an object:"," * "," * {"," *   'symbol': options.symbol,"," *   'from': options.from,"," *   'to': options.to,"," *   'period': options.period,"," *   'date': nDate,"," *   'open': nOpen,"," *   'high': nHigh,"," *   'low': nLow,"," *   'close': nClose,"," *   'volume': nVolume,"," *   'adjclose': nAdjClose"," * }"," *"," * @param {object} options options with fields:"," *                         .symbol Yahoo symbol name"," *                         .from start date"," *                         .to last date"," *                         .period period \"d\",\"w\",\"m\""," *                         .fmt date format (def: \"YYYY-MM-DD\")"," * "," * @return {object} "," *"," * @example"," * var options = { 'symbol': 'AAPL', 'from': '2015-01-02', 'to': '2015-01-08', 'period': 'd', 'fmt': 'YYYY-MM-DD' };"," * "," * ubique.yahooSync.historical(options);"," * //"," * // { symbol: 'AAPL',"," * //     from: '2015-01-02',"," * //       to: '2015-01-08',"," * //   period: 'd',"," * //     date: [ '2015-01-02',"," * //             '2015-01-05',"," * //             '2015-01-06',"," * //             '2015-01-07',"," * //             '2015-01-08' ],"," * //             open: [ 111.39, 108.29, 106.54, 107.2, 109.23 ],"," * //             high: [ 111.44, 108.65, 107.43, 108.2, 112.15 ],"," * //             low: [ 107.35, 105.41, 104.63, 106.7, 108.7 ],"," * //             close: [ 109.33, 106.25, 106.26, 107.75, 111.89 ],"," * //             volume: [ 53204600, 64285500, 65797100, 40105900, 59364500 ],"," * //             adjclose: [ 108.44723, 105.3921, 105.40202, 106.87998, 110.98656 ] }"," */"," $u.yahooSync = {","  histurl: 'http://real-chart.finance.yahoo.com/table.csv?',","  ip: '',","  port: '',","  historical: function(options) {","    options = options || {};","    options.symbol = options.symbol || null;","    options.from = options.from || null;","    options.to = options.to || $u.datestr($u.today(),'YYYY-MM-DD');","    options.period = options.period || 'd';","    options.fmt = options.fmt || 'YYYY-MM-DD';","","    var D = {};","    var dates = [];","    var values = [];","    var sdt = $u.datevec(options.from,options.fmt);","    var edt = $u.datevec(options.to,options.fmt);","","  // set URL string","  var cvsdata = {};","  var urlxp = '&ignore=.csv';","  var urlsym = '&s=' + options.symbol.toUpperCase();","  var urlfrom = '&a=' + (sdt[1] - 1) + '&b=' + sdt[2] + '&c=' + sdt[0];","  var urlto = '&d=' + (edt[1] - 1) + '&e=' + edt[2] + '&f=' + edt[0];","  var urlperiod = '&g=' + options.period;","  var URL = this.histurl + urlsym + urlfrom + urlto + urlperiod;","","  var res = $u.__syncrequest('GET',URL);","","  cvsdata =  res.body.toString().trim().split('\\n');","  var header = cvsdata.shift().split(',');","  var nDate = [];","  var nOpen = [];","  var nHigh = [];","  var nLow = [];","  var nClose = [];","  var nVolume = [];","  var nAdjClose = [];","","  cvsdata.sort().map(function(el) {","    var temp = el.split(',');","    nDate.push(temp[0]);","    nOpen.push(Number(temp[1]));","    nHigh.push(Number(temp[2]));","    nLow.push(Number(temp[3]));","    nClose.push(Number(temp[4]));","    nVolume.push(Number(temp[5]));","    nAdjClose.push(Number(temp[6]));","  });","","  D = {","    'symbol': options.symbol,","    'from': options.from,","    'to': options.to,","    'period': options.period,","    'date': nDate,","    'open': nOpen,","    'high': nHigh,","    'low': nLow,","    'close': nClose,","    'volume': nVolume,","    'adjclose': nAdjClose","  };","  return D;","","}","}","","}"],"l":{"4":1,"54":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"66":0,"67":0,"68":0,"69":0,"70":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"104":0,"117":0}},"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/infoubique.js":{"path":"/home/travis/build/npmtest/node-npmtest-ubique/node_modules/ubique/lib/infoubique.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * name: #name"," * version: #version"," * update date: #last_update"," * "," * author: #author"," * homepage: #homepage"," * "," * description: #description"," * "," *"," * The MIT License (MIT)"," * "," * Copyright© 2014-2015 Max Todaro"," * "," * Permission is hereby granted, free of charge, to any person obtaining a copy"," * of this software and associated documentation files (the \"Software\"), to deal"," * in the Software without restriction, including without limitation the rights"," * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"," * copies of the Software, and to permit persons to whom the Software is"," * furnished to do so, subject to the following conditions:"," * "," * The above copyright notice and this permission notice shall be included in all"," * copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"," * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"," * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"," * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"," * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE"," * SOFTWARE."," */",""],"l":{}}}